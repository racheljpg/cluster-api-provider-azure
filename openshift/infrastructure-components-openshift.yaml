---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachine
    listKind: AzureMachineList
    plural: azuremachines
    singular: azuremachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AzureMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      priority: 1
      type: string
    - description: Azure VM provisioning state
      jsonPath: .status.vmState
      name: State
      type: string
    - description: Machine object to which this AzureMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Azure VM ID
      jsonPath: .spec.providerID
      name: VM ID
      priority: 1
      type: string
    - description: Azure VM Size
      jsonPath: .spec.vmSize
      name: VM Size
      priority: 1
      type: string
    - description: Time duration since creation of this AzureMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureMachine is the Schema for the azuremachines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineSpec defines the desired state of AzureMachine.
            properties:
              acceleratedNetworking:
                description: 'Deprecated: AcceleratedNetworking should be set in the
                  networkInterfaces field.'
                type: boolean
              additionalCapabilities:
                description: AdditionalCapabilities specifies additional capabilities
                  enabled or disabled on the virtual machine.
                properties:
                  ultraSSDEnabled:
                    description: |-
                      UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.
                      Defaults to true if Ultra SSD data disks are specified,
                      otherwise it doesn't set the capability on the VM.
                    type: boolean
                type: object
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                  Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
                  AzureMachine's value takes precedence.
                type: object
              allocatePublicIP:
                description: AllocatePublicIP allows the ability to create dynamic
                  public ips for machines where this value is true.
                type: boolean
              capacityReservationGroupID:
                description: |-
                  CapacityReservationGroupID specifies the capacity reservation group resource id that should be
                  used for allocating the virtual machine.
                type: string
              dataDisks:
                description: DataDisk specifies the parameters that are used to add
                  one or more data disks to the machine
                items:
                  description: DataDisk specifies the parameters that are used to
                    add one or more data disks to the machine.
                  properties:
                    cachingType:
                      description: CachingType specifies the caching requirements.
                      enum:
                      - None
                      - ReadOnly
                      - ReadWrite
                      type: string
                    diskSizeGB:
                      description: DiskSizeGB is the size in GB to assign to the data
                        disk.
                      format: int32
                      type: integer
                    lun:
                      description: |-
                        Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
                        The value must be between 0 and 63.
                      format: int32
                      type: integer
                    managedDisk:
                      description: ManagedDisk specifies the Managed Disk parameters
                        for the data disk.
                      properties:
                        diskEncryptionSet:
                          description: DiskEncryptionSet specifies the customer-managed
                            disk encryption set resource id for the managed disk.
                          properties:
                            id:
                              description: ID defines resourceID for diskEncryptionSet
                                resource. It must be in the same subscription
                              type: string
                          type: object
                        securityProfile:
                          description: SecurityProfile specifies the security profile
                            for the managed disk.
                          properties:
                            diskEncryptionSet:
                              description: |-
                                DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                VMGuest blob.
                              properties:
                                id:
                                  description: ID defines resourceID for diskEncryptionSet
                                    resource. It must be in the same subscription
                                  type: string
                              type: object
                            securityEncryptionType:
                              description: |-
                                SecurityEncryptionType specifies the encryption type of the managed disk.
                                It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                VirtualizedTrustedPlatformModule should be set to Enabled.
                                It can be set only for Confidential VMs.
                              enum:
                              - VMGuestStateOnly
                              - DiskWithVMGuestState
                              type: string
                          type: object
                        storageAccountType:
                          type: string
                      type: object
                    nameSuffix:
                      description: |-
                        NameSuffix is the suffix to be appended to the machine name to generate the disk name.
                        Each disk name will be in format <machineName>_<nameSuffix>.
                      type: string
                  required:
                  - diskSizeGB
                  - nameSuffix
                  type: object
                type: array
              diagnostics:
                description: |-
                  Diagnostics specifies the diagnostics settings for a virtual machine.
                  If not specified then Boot diagnostics (Managed) will be enabled.
                properties:
                  boot:
                    description: |-
                      Boot configures the boot diagnostics settings for the virtual machine.
                      This allows to configure capturing serial output from the virtual machine on boot.
                      This is useful for debugging software based launch issues.
                      If not specified then Boot diagnostics (Managed) will be enabled.
                    properties:
                      storageAccountType:
                        description: |-
                          StorageAccountType determines if the storage account for storing the diagnostics data
                          should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                        enum:
                        - Managed
                        - UserManaged
                        - Disabled
                        type: string
                      userManaged:
                        description: UserManaged provides a reference to the user-managed
                          storage account.
                        properties:
                          storageAccountURI:
                            description: |-
                              StorageAccountURI is the URI of the user-managed storage account.
                              The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                              but may differ if you are using Azure DNS zone endpoints.
                              You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                              endpoints tab in the Azure console or with the CLI by issuing
                              `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                            maxLength: 1024
                            pattern: ^https://
                            type: string
                        required:
                        - storageAccountURI
                        type: object
                    required:
                    - storageAccountType
                    type: object
                type: object
              disableExtensionOperations:
                description: |-
                  DisableExtensionOperations specifies whether extension operations should be disabled on the virtual machine.
                  Use this setting only if VMExtensions are not supported by your image, as it disables CAPZ bootstrapping extension used for detecting Kubernetes bootstrap failure.
                  This may only be set to True when no extensions are configured on the virtual machine.
                type: boolean
              dnsServers:
                description: DNSServers adds a list of DNS Server IP addresses to
                  the VM NICs.
                items:
                  type: string
                type: array
              enableIPForwarding:
                description: |-
                  EnableIPForwarding enables IP Forwarding in Azure which is required for some CNI's to send traffic from a pods on one machine
                  to another. This is required for IpV6 with Calico in combination with User Defined Routes (set by the Azure Cloud Controller
                  manager). Default is false for disabled.
                type: boolean
              failureDomain:
                description: |-
                  FailureDomain is the failure domain unique identifier this Machine should be attached to,
                  as defined in Cluster API. This relates to an Azure Availability Zone
                type: string
              identity:
                default: None
                description: |-
                  Identity is the type of identity used for the virtual machine.
                  The type 'SystemAssigned' is an implicitly created identity.
                  The generated identity will be assigned a Subscription contributor role.
                  The type 'UserAssigned' is a standalone Azure resource provided by the user
                  and assigned to the VM
                enum:
                - None
                - SystemAssigned
                - UserAssigned
                type: string
              image:
                description: |-
                  Image is used to provide details of an image to use during VM creation.
                  If image details are omitted the image will default the Azure Marketplace "capi" offer,
                  which is based on Ubuntu.
                properties:
                  computeGallery:
                    description: ComputeGallery specifies an image to use from the
                      Azure Compute Gallery
                    properties:
                      gallery:
                        description: Gallery specifies the name of the compute image
                          gallery that contains the image
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the image
                        minLength: 1
                        type: string
                      plan:
                        description: Plan contains plan information.
                        properties:
                          offer:
                            description: |-
                              Offer specifies the name of a group of related images created by the publisher.
                              For example, UbuntuServer, WindowsServer
                            minLength: 1
                            type: string
                          publisher:
                            description: Publisher is the name of the organization
                              that created the image
                            minLength: 1
                            type: string
                          sku:
                            description: |-
                              SKU specifies an instance of an offer, such as a major release of a distribution.
                              For example, 18.04-LTS, 2019-Datacenter
                            minLength: 1
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        type: object
                      resourceGroup:
                        description: ResourceGroup specifies the resource group containing
                          the private compute gallery.
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the identifier of the subscription
                          that contains the private compute gallery.
                        type: string
                      version:
                        description: |-
                          Version specifies the version of the marketplace image. The allowed formats
                          are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                          Specify 'latest' to use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically update after deploy
                          time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - gallery
                    - name
                    - version
                    type: object
                  id:
                    description: ID specifies an image to use by ID
                    type: string
                  marketplace:
                    description: Marketplace specifies an image to use from the Azure
                      Marketplace
                    properties:
                      offer:
                        description: |-
                          Offer specifies the name of a group of related images created by the publisher.
                          For example, UbuntuServer, WindowsServer
                        minLength: 1
                        type: string
                      publisher:
                        description: Publisher is the name of the organization that
                          created the image
                        minLength: 1
                        type: string
                      sku:
                        description: |-
                          SKU specifies an instance of an offer, such as a major release of a distribution.
                          For example, 18.04-LTS, 2019-Datacenter
                        minLength: 1
                        type: string
                      thirdPartyImage:
                        default: false
                        description: |-
                          ThirdPartyImage indicates the image is published by a third party publisher and a Plan
                          will be generated for it.
                        type: boolean
                      version:
                        description: |-
                          Version specifies the version of an image sku. The allowed formats
                          are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                          Specify 'latest' to use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically update after deploy
                          time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - offer
                    - publisher
                    - sku
                    - version
                    type: object
                  sharedGallery:
                    description: |-
                      SharedGallery specifies an image to use from an Azure Shared Image Gallery
                      Deprecated: use ComputeGallery instead.
                    properties:
                      gallery:
                        description: Gallery specifies the name of the shared image
                          gallery that contains the image
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the image
                        minLength: 1
                        type: string
                      offer:
                        description: |-
                          Offer specifies the name of a group of related images created by the publisher.
                          For example, UbuntuServer, WindowsServer
                          This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                          This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                        type: string
                      publisher:
                        description: |-
                          Publisher is the name of the organization that created the image.
                          This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                          This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                        type: string
                      resourceGroup:
                        description: ResourceGroup specifies the resource group containing
                          the shared image gallery
                        minLength: 1
                        type: string
                      sku:
                        description: |-
                          SKU specifies an instance of an offer, such as a major release of a distribution.
                          For example, 18.04-LTS, 2019-Datacenter
                          This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                          This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the identifier of the subscription
                          that contains the shared image gallery
                        minLength: 1
                        type: string
                      version:
                        description: |-
                          Version specifies the version of the marketplace image. The allowed formats
                          are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                          Specify 'latest' to use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically update after deploy
                          time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - gallery
                    - name
                    - resourceGroup
                    - subscriptionID
                    - version
                    type: object
                type: object
              networkInterfaces:
                description: |-
                  NetworkInterfaces specifies a list of network interface configurations.
                  If left unspecified, the VM will get a single network interface with a
                  single IPConfig in the subnet specified in the cluster's node subnet field.
                  The primary interface will be the first networkInterface specified (index 0) in the list.
                items:
                  description: NetworkInterface defines a network interface.
                  properties:
                    acceleratedNetworking:
                      description: |-
                        AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
                        whether the requested VMSize supports accelerated networking.
                        If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                      type: boolean
                    privateIPConfigs:
                      description: |-
                        PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
                        Defaults to 1 if not specified.
                      type: integer
                    subnetName:
                      description: SubnetName specifies the subnet in which the new
                        network interface will be placed.
                      type: string
                  type: object
                type: array
              osDisk:
                description: OSDisk specifies the parameters for the operating system
                  disk of the machine
                properties:
                  cachingType:
                    description: CachingType specifies the caching requirements.
                    enum:
                    - None
                    - ReadOnly
                    - ReadWrite
                    type: string
                  diffDiskSettings:
                    description: DiffDiskSettings describe ephemeral disk settings
                      for the os disk.
                    properties:
                      option:
                        description: |-
                          Option enables ephemeral OS when set to "Local"
                          See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
                        enum:
                        - Local
                        type: string
                    required:
                    - option
                    type: object
                  diskSizeGB:
                    description: |-
                      DiskSizeGB is the size in GB to assign to the OS disk.
                      Will have a default of 30GB if not provided
                    format: int32
                    type: integer
                  managedDisk:
                    description: ManagedDisk specifies the Managed Disk parameters
                      for the OS disk.
                    properties:
                      diskEncryptionSet:
                        description: DiskEncryptionSet specifies the customer-managed
                          disk encryption set resource id for the managed disk.
                        properties:
                          id:
                            description: ID defines resourceID for diskEncryptionSet
                              resource. It must be in the same subscription
                            type: string
                        type: object
                      securityProfile:
                        description: SecurityProfile specifies the security profile
                          for the managed disk.
                        properties:
                          diskEncryptionSet:
                            description: |-
                              DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                              managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                              VMGuest blob.
                            properties:
                              id:
                                description: ID defines resourceID for diskEncryptionSet
                                  resource. It must be in the same subscription
                                type: string
                            type: object
                          securityEncryptionType:
                            description: |-
                              SecurityEncryptionType specifies the encryption type of the managed disk.
                              It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                              blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                              When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                              When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                              VirtualizedTrustedPlatformModule should be set to Enabled.
                              It can be set only for Confidential VMs.
                            enum:
                            - VMGuestStateOnly
                            - DiskWithVMGuestState
                            type: string
                        type: object
                      storageAccountType:
                        type: string
                    type: object
                  osType:
                    type: string
                required:
                - osType
                type: object
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              roleAssignmentName:
                description: 'Deprecated: RoleAssignmentName should be set in the
                  systemAssignedIdentityRole field.'
                type: string
              securityProfile:
                description: SecurityProfile specifies the Security profile settings
                  for a virtual machine.
                properties:
                  encryptionAtHost:
                    description: |-
                      This field indicates whether Host Encryption should be enabled
                      or disabled for a virtual machine or virtual machine scale set.
                      This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
                      Default is disabled.
                    type: boolean
                  securityType:
                    description: |-
                      SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
                      enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
                    enum:
                    - ConfidentialVM
                    - TrustedLaunch
                    type: string
                  uefiSettings:
                    description: UefiSettings specifies the security settings like
                      secure boot and vTPM used while creating the virtual machine.
                    properties:
                      secureBootEnabled:
                        description: |-
                          SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
                          Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
                          If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                        type: boolean
                      vTpmEnabled:
                        description: |-
                          VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
                          When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
                          The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
                          This is required to be set to Enabled if SecurityEncryptionType is defined.
                          If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                        type: boolean
                    type: object
                type: object
              spotVMOptions:
                description: SpotVMOptions allows the ability to specify the Machine
                  should use a Spot VM
                properties:
                  evictionPolicy:
                    description: EvictionPolicy defines the behavior of the virtual
                      machine when it is evicted. It can be either Delete or Deallocate.
                    enum:
                    - Deallocate
                    - Delete
                    type: string
                  maxPrice:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MaxPrice defines the maximum price the user is willing
                      to pay for Spot VM instances
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              sshPublicKey:
                description: |-
                  SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
                  Refer to documentation on how to set up SSH access on Windows instances.
                type: string
              subnetName:
                description: 'Deprecated: SubnetName should be set in the networkInterfaces
                  field.'
                type: string
              systemAssignedIdentityRole:
                description: SystemAssignedIdentityRole defines the role and scope
                  to assign to the system-assigned identity.
                properties:
                  definitionID:
                    description: |-
                      DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
                      Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
                    type: string
                  name:
                    description: |-
                      Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
                      If not specified, a random UUID will be generated.
                    type: string
                  scope:
                    description: |-
                      Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
                      If not specified, the scope will be the subscription.
                    type: string
                type: object
              userAssignedIdentities:
                description: |-
                  UserAssignedIdentities is a list of standalone Azure identities provided by the user
                  The lifecycle of a user-assigned identity is managed separately from the lifecycle of
                  the AzureMachine.
                  See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                items:
                  description: |-
                    UserAssignedIdentity defines the user-assigned identities provided
                    by the user to be assigned to Azure resources.
                  properties:
                    providerID:
                      description: |-
                        ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
                        'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
                      type: string
                  required:
                  - providerID
                  type: object
                type: array
              vmExtensions:
                description: VMExtensions specifies a list of extensions to be added
                  to the virtual machine.
                items:
                  description: VMExtension specifies the parameters for a custom VM
                    extension.
                  properties:
                    name:
                      description: Name is the name of the extension.
                      type: string
                    protectedSettings:
                      additionalProperties:
                        type: string
                      description: ProtectedSettings is a JSON formatted protected
                        settings for the extension.
                      type: object
                    publisher:
                      description: Publisher is the name of the extension handler
                        publisher.
                      type: string
                    settings:
                      additionalProperties:
                        type: string
                      description: Settings is a JSON formatted public settings for
                        the extension.
                      type: object
                    version:
                      description: Version specifies the version of the script handler.
                      type: string
                  required:
                  - name
                  - publisher
                  - version
                  type: object
                type: array
              vmSize:
                type: string
            required:
            - osDisk
            - vmSize
            type: object
          status:
            description: AzureMachineStatus defines the observed state of AzureMachine.
            properties:
              addresses:
                description: Addresses contains the Azure instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the AzureMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  ErrorMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  ErrorReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              longRunningOperationStates:
                description: |-
                  LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
                  next reconciliation loop.
                items:
                  description: Future contains the data needed for an Azure long-running
                    operation to continue across reconcile loops.
                  properties:
                    data:
                      description: Data is the base64 url encoded json Azure AutoRest
                        Future.
                      type: string
                    name:
                      description: |-
                        Name is the name of the Azure resource.
                        Together with the service name, this forms the unique identifier for the future.
                      type: string
                    resourceGroup:
                      description: ResourceGroup is the Azure resource group for the
                        resource.
                      type: string
                    serviceName:
                      description: |-
                        ServiceName is the name of the Azure service.
                        Together with the name of the resource, this forms the unique identifier for the future.
                      type: string
                    type:
                      description: Type describes the type of future, such as update,
                        create, delete, etc.
                      type: string
                  required:
                  - data
                  - name
                  - serviceName
                  - type
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState is the provisioning state of the Azure virtual
                  machine.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azureclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureCluster
    listKind: AzureClusterList
    plural: azureclusters
    singular: azurecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AzureCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      priority: 1
      type: string
    - jsonPath: .spec.resourceGroup
      name: Resource Group
      priority: 1
      type: string
    - jsonPath: .spec.subscriptionID
      name: SubscriptionID
      priority: 1
      type: string
    - jsonPath: .spec.location
      name: Location
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    - description: Time duration since creation of this AzureCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureCluster is the Schema for the azureclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterSpec defines the desired state of AzureCluster.
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
                  ones added by default.
                type: object
              azureEnvironment:
                description: |-
                  AzureEnvironment is the name of the AzureCloud to be used.
                  The default value that would be used by most users is "AzurePublicCloud", other values are:
                  - ChinaCloud: "AzureChinaCloud"
                  - GermanCloud: "AzureGermanCloud"
                  - PublicCloud: "AzurePublicCloud"
                  - USGovernmentCloud: "AzureUSGovernmentCloud"


                  Note that values other than the default must also be accompanied by corresponding changes to the
                  aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
                  not support referring to multiple different clouds in a single installation. The following fields must
                  be defined in the Secret:
                  - AZURE_AUTHORITY_HOST
                  - AZURE_RESOURCE_MANAGER_ENDPOINT
                  - AZURE_RESOURCE_MANAGER_AUDIENCE


                  See the [ASO docs] for more details.


                  [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
                type: string
              bastionSpec:
                description: BastionSpec encapsulates all things related to the Bastions
                  in the cluster.
                properties:
                  azureBastion:
                    description: AzureBastion specifies how the Azure Bastion cloud
                      component should be configured.
                    properties:
                      enableTunneling:
                        default: false
                        description: EnableTunneling enables the native client support
                          feature for the Azure Bastion Host. Defaults to false.
                        type: boolean
                      name:
                        type: string
                      publicIP:
                        description: PublicIPSpec defines the inputs to create an
                          Azure public IP address.
                        properties:
                          dnsName:
                            type: string
                          ipTags:
                            items:
                              description: IPTag contains the IpTag associated with
                                the object.
                              properties:
                                tag:
                                  description: 'Tag specifies the value of the IP
                                    tag associated with the public IP. Example: SQL.'
                                  type: string
                                type:
                                  description: 'Type specifies the IP tag type. Example:
                                    FirstPartyUsage.'
                                  type: string
                              required:
                              - tag
                              - type
                              type: object
                            type: array
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      sku:
                        default: Basic
                        description: BastionHostSkuName configures the tier of the
                          Azure Bastion Host. Can be either Basic or Standard. Defaults
                          to Basic.
                        enum:
                        - Basic
                        - Standard
                        type: string
                      subnet:
                        description: SubnetSpec configures an Azure subnet.
                        properties:
                          cidrBlocks:
                            description: CIDRBlocks defines the subnet's address space,
                              specified as one or more address prefixes in CIDR notation.
                            items:
                              type: string
                            type: array
                          id:
                            description: |-
                              ID is the Azure resource ID of the subnet.
                              READ-ONLY
                            type: string
                          name:
                            description: Name defines a name for the subnet resource.
                            type: string
                          natGateway:
                            description: NatGateway associated with this subnet.
                            properties:
                              id:
                                description: |-
                                  ID is the Azure resource ID of the NAT gateway.
                                  READ-ONLY
                                type: string
                              ip:
                                description: PublicIPSpec defines the inputs to create
                                  an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated
                                        with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of
                                            the IP tag associated with the public
                                            IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag
                                            type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                      - tag
                                      - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                              name:
                                type: string
                            required:
                            - name
                            type: object
                          privateEndpoints:
                            description: PrivateEndpoints defines a list of private
                              endpoints that should be attached to this subnet.
                            items:
                              description: PrivateEndpointSpec configures an Azure
                                Private Endpoint.
                              properties:
                                applicationSecurityGroups:
                                  description: ApplicationSecurityGroups specifies
                                    the Application security group in which the private
                                    endpoint IP configuration is included.
                                  items:
                                    type: string
                                  type: array
                                customNetworkInterfaceName:
                                  description: CustomNetworkInterfaceName specifies
                                    the network interface name associated with the
                                    private endpoint.
                                  type: string
                                location:
                                  description: Location specifies the region to create
                                    the private endpoint.
                                  type: string
                                manualApproval:
                                  description: |-
                                    ManualApproval specifies if the connection approval needs to be done manually or not.
                                    Set it true when the network admin does not have access to approve connections to the remote resource.
                                    Defaults to false.
                                  type: boolean
                                name:
                                  description: Name specifies the name of the private
                                    endpoint.
                                  type: string
                                privateIPAddresses:
                                  description: |-
                                    PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                    They have to be part of the subnet where the private endpoint is linked.
                                  items:
                                    type: string
                                  type: array
                                privateLinkServiceConnections:
                                  description: PrivateLinkServiceConnections specifies
                                    Private Link Service Connections of the private
                                    endpoint.
                                  items:
                                    description: PrivateLinkServiceConnection defines
                                      the specification for a private link service
                                      connection associated with a private endpoint.
                                    properties:
                                      groupIDs:
                                        description: GroupIDs specifies the ID(s)
                                          of the group(s) obtained from the remote
                                          resource that this private endpoint should
                                          connect to.
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: Name specifies the name of the
                                          private link service.
                                        type: string
                                      privateLinkServiceID:
                                        description: PrivateLinkServiceID specifies
                                          the resource ID of the private link service.
                                        type: string
                                      requestMessage:
                                        description: RequestMessage specifies a message
                                          passed to the owner of the remote resource
                                          with the private endpoint connection request.
                                        maxLength: 140
                                        type: string
                                    type: object
                                  type: array
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          role:
                            description: Role defines the subnet role (eg. Node, ControlPlane)
                            enum:
                            - node
                            - control-plane
                            - bastion
                            - all
                            type: string
                          routeTable:
                            description: RouteTable defines the route table that should
                              be attached to this subnet.
                            properties:
                              id:
                                description: |-
                                  ID is the Azure resource ID of the route table.
                                  READ-ONLY
                                type: string
                              name:
                                type: string
                            required:
                            - name
                            type: object
                          securityGroup:
                            description: SecurityGroup defines the NSG (network security
                              group) that should be attached to this subnet.
                            properties:
                              id:
                                description: |-
                                  ID is the Azure resource ID of the security group.
                                  READ-ONLY
                                type: string
                              name:
                                type: string
                              securityRules:
                                description: SecurityRules is a slice of Azure security
                                  rules for security groups.
                                items:
                                  description: SecurityRule defines an Azure security
                                    rule for security groups.
                                  properties:
                                    action:
                                      default: Allow
                                      description: Action specifies whether network
                                        traffic is allowed or denied. Can either be
                                        "Allow" or "Deny". Defaults to "Allow".
                                      enum:
                                      - Allow
                                      - Deny
                                      type: string
                                    description:
                                      description: A description for this rule. Restricted
                                        to 140 chars.
                                      type: string
                                    destination:
                                      description: Destination is the destination
                                        address prefix. CIDR or destination IP range.
                                        Asterix '*' can also be used to match all
                                        source IPs. Default tags such as 'VirtualNetwork',
                                        'AzureLoadBalancer' and 'Internet' can also
                                        be used.
                                      type: string
                                    destinationPorts:
                                      description: DestinationPorts specifies the
                                        destination port or range. Integer or range
                                        between 0 and 65535. Asterix '*' can also
                                        be used to match all ports.
                                      type: string
                                    direction:
                                      description: Direction indicates whether the
                                        rule applies to inbound, or outbound traffic.
                                        "Inbound" or "Outbound".
                                      enum:
                                      - Inbound
                                      - Outbound
                                      type: string
                                    name:
                                      description: Name is a unique name within the
                                        network security group.
                                      type: string
                                    priority:
                                      description: Priority is a number between 100
                                        and 4096. Each rule should have a unique value
                                        for priority. Rules are processed in priority
                                        order, with lower numbers processed before
                                        higher numbers. Once traffic matches a rule,
                                        processing stops.
                                      format: int32
                                      type: integer
                                    protocol:
                                      description: Protocol specifies the protocol
                                        type. "Tcp", "Udp", "Icmp", or "*".
                                      enum:
                                      - Tcp
                                      - Udp
                                      - Icmp
                                      - '*'
                                      type: string
                                    source:
                                      description: Source specifies the CIDR or source
                                        IP range. Asterix '*' can also be used to
                                        match all source IPs. Default tags such as
                                        'VirtualNetwork', 'AzureLoadBalancer' and
                                        'Internet' can also be used. If this is an
                                        ingress rule, specifies where network traffic
                                        originates from.
                                      type: string
                                    sourcePorts:
                                      description: SourcePorts specifies source port
                                        or range. Integer or range between 0 and 65535.
                                        Asterix '*' can also be used to match all
                                        ports.
                                      type: string
                                    sources:
                                      description: Sources specifies The CIDR or source
                                        IP ranges.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - description
                                  - direction
                                  - name
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              tags:
                                additionalProperties:
                                  type: string
                                description: Tags defines a map of tags.
                                type: object
                            required:
                            - name
                            type: object
                          serviceEndpoints:
                            description: ServiceEndpoints is a slice of Virtual Network
                              service endpoints to enable for the subnets.
                            items:
                              description: ServiceEndpointSpec configures an Azure
                                Service Endpoint.
                              properties:
                                locations:
                                  items:
                                    type: string
                                  type: array
                                service:
                                  type: string
                              required:
                              - locations
                              - service
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - service
                            x-kubernetes-list-type: map
                        required:
                        - name
                        - role
                        type: object
                    type: object
                type: object
              cloudProviderConfigOverrides:
                description: |-
                  CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config.
                  This is only a subset of options that are available in azure cloud provider config.
                  Some values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides.
                  See: https://cloud-provider-azure.sigs.k8s.io/install/configs
                  Note: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.
                properties:
                  backOffs:
                    description: BackOffConfig indicates the back-off config options.
                    properties:
                      cloudProviderBackoff:
                        type: boolean
                      cloudProviderBackoffDuration:
                        type: integer
                      cloudProviderBackoffExponent:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      cloudProviderBackoffJitter:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      cloudProviderBackoffRetries:
                        type: integer
                    type: object
                  rateLimits:
                    items:
                      description: |-
                        RateLimitSpec represents the rate limit configuration for a particular kind of resource.
                        Eg. loadBalancerRateLimit is used to configure rate limits for load balancers.
                        This eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects.
                        See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
                        We cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools.
                        See: https://github.com/kubernetes-sigs/controller-tools/issues/245
                      properties:
                        config:
                          description: RateLimitConfig indicates the rate limit config
                            options.
                          properties:
                            cloudProviderRateLimit:
                              type: boolean
                            cloudProviderRateLimitBucket:
                              type: integer
                            cloudProviderRateLimitBucketWrite:
                              type: integer
                            cloudProviderRateLimitQPS:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            cloudProviderRateLimitQPSWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        name:
                          description: Name is the name of the rate limit spec.
                          enum:
                          - defaultRateLimit
                          - routeRateLimit
                          - subnetsRateLimit
                          - interfaceRateLimit
                          - routeTableRateLimit
                          - loadBalancerRateLimit
                          - publicIPAddressRateLimit
                          - securityGroupRateLimit
                          - virtualMachineRateLimit
                          - storageAccountRateLimit
                          - diskRateLimit
                          - snapshotRateLimit
                          - virtualMachineScaleSetRateLimit
                          - virtualMachineSizesRateLimit
                          - availabilitySetRateLimit
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              controlPlaneEndpoint:
                description: |-
                  ControlPlaneEndpoint represents the endpoint used to communicate with the control plane. It is not recommended to set
                  this when creating an AzureCluster as CAPZ will set this for you. However, if it is set, CAPZ will not change it.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              extendedLocation:
                description: ExtendedLocation is an optional set of ExtendedLocation
                  properties for clusters on Azure public MEC.
                properties:
                  name:
                    description: Name defines the name for the extended location.
                    type: string
                  type:
                    description: Type defines the type for the extended location.
                    enum:
                    - EdgeZone
                    type: string
                required:
                - name
                - type
                type: object
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: |-
                  FailureDomains is a list of failure domains in the cluster's region, used to restrict
                  eligibility to host the control plane. A FailureDomain maps to an availability zone,
                  which is a separated group of datacenters within a region.
                  See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
                type: object
              identityRef:
                description: IdentityRef is a reference to an AzureIdentity to be
                  used when reconciling this cluster
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              location:
                type: string
              networkSpec:
                description: NetworkSpec encapsulates all things related to Azure
                  network.
                properties:
                  apiServerLB:
                    description: APIServerLB is the configuration for the control-plane
                      load balancer.
                    properties:
                      backendPool:
                        description: BackendPool describes the backend pool of the
                          load balancer.
                        properties:
                          name:
                            description: |-
                              Name specifies the name of backend pool for the load balancer. If not specified, the default name will
                              be set, depending on the load balancer role.
                            type: string
                        type: object
                      frontendIPs:
                        items:
                          description: FrontendIP defines a load balancer frontend
                            IP configuration.
                          properties:
                            name:
                              minLength: 1
                              type: string
                            privateIP:
                              type: string
                            publicIP:
                              description: PublicIPSpec defines the inputs to create
                                an Azure public IP address.
                              properties:
                                dnsName:
                                  type: string
                                ipTags:
                                  items:
                                    description: IPTag contains the IpTag associated
                                      with the object.
                                    properties:
                                      tag:
                                        description: 'Tag specifies the value of the
                                          IP tag associated with the public IP. Example:
                                          SQL.'
                                        type: string
                                      type:
                                        description: 'Type specifies the IP tag type.
                                          Example: FirstPartyUsage.'
                                        type: string
                                    required:
                                    - tag
                                    - type
                                    type: object
                                  type: array
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      frontendIPsCount:
                        description: FrontendIPsCount specifies the number of frontend
                          IP addresses for the load balancer.
                        format: int32
                        type: integer
                      id:
                        description: |-
                          ID is the Azure resource ID of the load balancer.
                          READ-ONLY
                        type: string
                      idleTimeoutInMinutes:
                        description: IdleTimeoutInMinutes specifies the timeout for
                          the TCP idle connection.
                        format: int32
                        type: integer
                      name:
                        type: string
                      sku:
                        description: SKU defines an Azure load balancer SKU.
                        type: string
                      type:
                        description: LBType defines an Azure load balancer Type.
                        type: string
                    type: object
                  controlPlaneOutboundLB:
                    description: |-
                      ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer.
                      This is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.
                    properties:
                      backendPool:
                        description: BackendPool describes the backend pool of the
                          load balancer.
                        properties:
                          name:
                            description: |-
                              Name specifies the name of backend pool for the load balancer. If not specified, the default name will
                              be set, depending on the load balancer role.
                            type: string
                        type: object
                      frontendIPs:
                        items:
                          description: FrontendIP defines a load balancer frontend
                            IP configuration.
                          properties:
                            name:
                              minLength: 1
                              type: string
                            privateIP:
                              type: string
                            publicIP:
                              description: PublicIPSpec defines the inputs to create
                                an Azure public IP address.
                              properties:
                                dnsName:
                                  type: string
                                ipTags:
                                  items:
                                    description: IPTag contains the IpTag associated
                                      with the object.
                                    properties:
                                      tag:
                                        description: 'Tag specifies the value of the
                                          IP tag associated with the public IP. Example:
                                          SQL.'
                                        type: string
                                      type:
                                        description: 'Type specifies the IP tag type.
                                          Example: FirstPartyUsage.'
                                        type: string
                                    required:
                                    - tag
                                    - type
                                    type: object
                                  type: array
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      frontendIPsCount:
                        description: FrontendIPsCount specifies the number of frontend
                          IP addresses for the load balancer.
                        format: int32
                        type: integer
                      id:
                        description: |-
                          ID is the Azure resource ID of the load balancer.
                          READ-ONLY
                        type: string
                      idleTimeoutInMinutes:
                        description: IdleTimeoutInMinutes specifies the timeout for
                          the TCP idle connection.
                        format: int32
                        type: integer
                      name:
                        type: string
                      sku:
                        description: SKU defines an Azure load balancer SKU.
                        type: string
                      type:
                        description: LBType defines an Azure load balancer Type.
                        type: string
                    type: object
                  nodeOutboundLB:
                    description: NodeOutboundLB is the configuration for the node
                      outbound load balancer.
                    properties:
                      backendPool:
                        description: BackendPool describes the backend pool of the
                          load balancer.
                        properties:
                          name:
                            description: |-
                              Name specifies the name of backend pool for the load balancer. If not specified, the default name will
                              be set, depending on the load balancer role.
                            type: string
                        type: object
                      frontendIPs:
                        items:
                          description: FrontendIP defines a load balancer frontend
                            IP configuration.
                          properties:
                            name:
                              minLength: 1
                              type: string
                            privateIP:
                              type: string
                            publicIP:
                              description: PublicIPSpec defines the inputs to create
                                an Azure public IP address.
                              properties:
                                dnsName:
                                  type: string
                                ipTags:
                                  items:
                                    description: IPTag contains the IpTag associated
                                      with the object.
                                    properties:
                                      tag:
                                        description: 'Tag specifies the value of the
                                          IP tag associated with the public IP. Example:
                                          SQL.'
                                        type: string
                                      type:
                                        description: 'Type specifies the IP tag type.
                                          Example: FirstPartyUsage.'
                                        type: string
                                    required:
                                    - tag
                                    - type
                                    type: object
                                  type: array
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      frontendIPsCount:
                        description: FrontendIPsCount specifies the number of frontend
                          IP addresses for the load balancer.
                        format: int32
                        type: integer
                      id:
                        description: |-
                          ID is the Azure resource ID of the load balancer.
                          READ-ONLY
                        type: string
                      idleTimeoutInMinutes:
                        description: IdleTimeoutInMinutes specifies the timeout for
                          the TCP idle connection.
                        format: int32
                        type: integer
                      name:
                        type: string
                      sku:
                        description: SKU defines an Azure load balancer SKU.
                        type: string
                      type:
                        description: LBType defines an Azure load balancer Type.
                        type: string
                    type: object
                  privateDNSZoneName:
                    description: PrivateDNSZoneName defines the zone name for the
                      Azure Private DNS.
                    type: string
                  subnets:
                    description: Subnets is the configuration for the control-plane
                      subnet and the node subnet.
                    items:
                      description: SubnetSpec configures an Azure subnet.
                      properties:
                        cidrBlocks:
                          description: CIDRBlocks defines the subnet's address space,
                            specified as one or more address prefixes in CIDR notation.
                          items:
                            type: string
                          type: array
                        id:
                          description: |-
                            ID is the Azure resource ID of the subnet.
                            READ-ONLY
                          type: string
                        name:
                          description: Name defines a name for the subnet resource.
                          type: string
                        natGateway:
                          description: NatGateway associated with this subnet.
                          properties:
                            id:
                              description: |-
                                ID is the Azure resource ID of the NAT gateway.
                                READ-ONLY
                              type: string
                            ip:
                              description: PublicIPSpec defines the inputs to create
                                an Azure public IP address.
                              properties:
                                dnsName:
                                  type: string
                                ipTags:
                                  items:
                                    description: IPTag contains the IpTag associated
                                      with the object.
                                    properties:
                                      tag:
                                        description: 'Tag specifies the value of the
                                          IP tag associated with the public IP. Example:
                                          SQL.'
                                        type: string
                                      type:
                                        description: 'Type specifies the IP tag type.
                                          Example: FirstPartyUsage.'
                                        type: string
                                    required:
                                    - tag
                                    - type
                                    type: object
                                  type: array
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        privateEndpoints:
                          description: PrivateEndpoints defines a list of private
                            endpoints that should be attached to this subnet.
                          items:
                            description: PrivateEndpointSpec configures an Azure Private
                              Endpoint.
                            properties:
                              applicationSecurityGroups:
                                description: ApplicationSecurityGroups specifies the
                                  Application security group in which the private
                                  endpoint IP configuration is included.
                                items:
                                  type: string
                                type: array
                              customNetworkInterfaceName:
                                description: CustomNetworkInterfaceName specifies
                                  the network interface name associated with the private
                                  endpoint.
                                type: string
                              location:
                                description: Location specifies the region to create
                                  the private endpoint.
                                type: string
                              manualApproval:
                                description: |-
                                  ManualApproval specifies if the connection approval needs to be done manually or not.
                                  Set it true when the network admin does not have access to approve connections to the remote resource.
                                  Defaults to false.
                                type: boolean
                              name:
                                description: Name specifies the name of the private
                                  endpoint.
                                type: string
                              privateIPAddresses:
                                description: |-
                                  PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                  They have to be part of the subnet where the private endpoint is linked.
                                items:
                                  type: string
                                type: array
                              privateLinkServiceConnections:
                                description: PrivateLinkServiceConnections specifies
                                  Private Link Service Connections of the private
                                  endpoint.
                                items:
                                  description: PrivateLinkServiceConnection defines
                                    the specification for a private link service connection
                                    associated with a private endpoint.
                                  properties:
                                    groupIDs:
                                      description: GroupIDs specifies the ID(s) of
                                        the group(s) obtained from the remote resource
                                        that this private endpoint should connect
                                        to.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: Name specifies the name of the
                                        private link service.
                                      type: string
                                    privateLinkServiceID:
                                      description: PrivateLinkServiceID specifies
                                        the resource ID of the private link service.
                                      type: string
                                    requestMessage:
                                      description: RequestMessage specifies a message
                                        passed to the owner of the remote resource
                                        with the private endpoint connection request.
                                      maxLength: 140
                                      type: string
                                  type: object
                                type: array
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        role:
                          description: Role defines the subnet role (eg. Node, ControlPlane)
                          enum:
                          - node
                          - control-plane
                          - bastion
                          - all
                          type: string
                        routeTable:
                          description: RouteTable defines the route table that should
                            be attached to this subnet.
                          properties:
                            id:
                              description: |-
                                ID is the Azure resource ID of the route table.
                                READ-ONLY
                              type: string
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        securityGroup:
                          description: SecurityGroup defines the NSG (network security
                            group) that should be attached to this subnet.
                          properties:
                            id:
                              description: |-
                                ID is the Azure resource ID of the security group.
                                READ-ONLY
                              type: string
                            name:
                              type: string
                            securityRules:
                              description: SecurityRules is a slice of Azure security
                                rules for security groups.
                              items:
                                description: SecurityRule defines an Azure security
                                  rule for security groups.
                                properties:
                                  action:
                                    default: Allow
                                    description: Action specifies whether network
                                      traffic is allowed or denied. Can either be
                                      "Allow" or "Deny". Defaults to "Allow".
                                    enum:
                                    - Allow
                                    - Deny
                                    type: string
                                  description:
                                    description: A description for this rule. Restricted
                                      to 140 chars.
                                    type: string
                                  destination:
                                    description: Destination is the destination address
                                      prefix. CIDR or destination IP range. Asterix
                                      '*' can also be used to match all source IPs.
                                      Default tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                      and 'Internet' can also be used.
                                    type: string
                                  destinationPorts:
                                    description: DestinationPorts specifies the destination
                                      port or range. Integer or range between 0 and
                                      65535. Asterix '*' can also be used to match
                                      all ports.
                                    type: string
                                  direction:
                                    description: Direction indicates whether the rule
                                      applies to inbound, or outbound traffic. "Inbound"
                                      or "Outbound".
                                    enum:
                                    - Inbound
                                    - Outbound
                                    type: string
                                  name:
                                    description: Name is a unique name within the
                                      network security group.
                                    type: string
                                  priority:
                                    description: Priority is a number between 100
                                      and 4096. Each rule should have a unique value
                                      for priority. Rules are processed in priority
                                      order, with lower numbers processed before higher
                                      numbers. Once traffic matches a rule, processing
                                      stops.
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: Protocol specifies the protocol type.
                                      "Tcp", "Udp", "Icmp", or "*".
                                    enum:
                                    - Tcp
                                    - Udp
                                    - Icmp
                                    - '*'
                                    type: string
                                  source:
                                    description: Source specifies the CIDR or source
                                      IP range. Asterix '*' can also be used to match
                                      all source IPs. Default tags such as 'VirtualNetwork',
                                      'AzureLoadBalancer' and 'Internet' can also
                                      be used. If this is an ingress rule, specifies
                                      where network traffic originates from.
                                    type: string
                                  sourcePorts:
                                    description: SourcePorts specifies source port
                                      or range. Integer or range between 0 and 65535.
                                      Asterix '*' can also be used to match all ports.
                                    type: string
                                  sources:
                                    description: Sources specifies The CIDR or source
                                      IP ranges.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - description
                                - direction
                                - name
                                - protocol
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            tags:
                              additionalProperties:
                                type: string
                              description: Tags defines a map of tags.
                              type: object
                          required:
                          - name
                          type: object
                        serviceEndpoints:
                          description: ServiceEndpoints is a slice of Virtual Network
                            service endpoints to enable for the subnets.
                          items:
                            description: ServiceEndpointSpec configures an Azure Service
                              Endpoint.
                            properties:
                              locations:
                                items:
                                  type: string
                                type: array
                              service:
                                type: string
                            required:
                            - locations
                            - service
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - service
                          x-kubernetes-list-type: map
                      required:
                      - name
                      - role
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  vnet:
                    description: Vnet is the configuration for the Azure virtual network.
                    properties:
                      cidrBlocks:
                        description: CIDRBlocks defines the virtual network's address
                          space, specified as one or more address prefixes in CIDR
                          notation.
                        items:
                          type: string
                        type: array
                      id:
                        description: |-
                          ID is the Azure resource ID of the virtual network.
                          READ-ONLY
                        type: string
                      name:
                        description: Name defines a name for the virtual network resource.
                        type: string
                      peerings:
                        description: Peerings defines a list of peerings of the newly
                          created virtual network with existing virtual networks.
                        items:
                          description: VnetPeeringSpec specifies an existing remote
                            virtual network to peer with the AzureCluster's virtual
                            network.
                          properties:
                            forwardPeeringProperties:
                              description: |-
                                ForwardPeeringProperties specifies VnetPeeringProperties for peering from the cluster's virtual network to the
                                remote virtual network.
                              properties:
                                allowForwardedTraffic:
                                  description: |-
                                    AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                    allowed/disallowed in remote virtual network.
                                  type: boolean
                                allowGatewayTransit:
                                  description: |-
                                    AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                    network.
                                  type: boolean
                                allowVirtualNetworkAccess:
                                  description: |-
                                    AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                    the VMs in remote virtual network space.
                                  type: boolean
                                useRemoteGateways:
                                  description: |-
                                    UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                    If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                    will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                    This flag cannot be set if virtual network already has a gateway.
                                  type: boolean
                              type: object
                            remoteVnetName:
                              description: RemoteVnetName defines name of the remote
                                virtual network.
                              type: string
                            resourceGroup:
                              description: ResourceGroup is the resource group name
                                of the remote virtual network.
                              type: string
                            reversePeeringProperties:
                              description: |-
                                ReversePeeringProperties specifies VnetPeeringProperties for peering from the remote virtual network to the
                                cluster's virtual network.
                              properties:
                                allowForwardedTraffic:
                                  description: |-
                                    AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                    allowed/disallowed in remote virtual network.
                                  type: boolean
                                allowGatewayTransit:
                                  description: |-
                                    AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                    network.
                                  type: boolean
                                allowVirtualNetworkAccess:
                                  description: |-
                                    AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                    the VMs in remote virtual network space.
                                  type: boolean
                                useRemoteGateways:
                                  description: |-
                                    UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                    If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                    will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                    This flag cannot be set if virtual network already has a gateway.
                                  type: boolean
                              type: object
                          required:
                          - remoteVnetName
                          type: object
                        type: array
                      resourceGroup:
                        description: |-
                          ResourceGroup is the name of the resource group of the existing virtual network
                          or the resource group where a managed virtual network should be created.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    required:
                    - name
                    type: object
                type: object
              resourceGroup:
                type: string
              subscriptionID:
                type: string
            required:
            - location
            type: object
          status:
            description: AzureClusterStatus defines the observed state of AzureCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the AzureCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: |-
                  FailureDomains specifies the list of unique failure domains for the location/region of the cluster.
                  A FailureDomain maps to Availability Zone with an Azure Region (if the region support them). An
                  Availability Zone is a separate data center within a region and they can be used to ensure
                  the cluster is more resilient to failure.
                  See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
                  This list will be used by Cluster API to try and spread the machines across the failure domains.
                type: object
              longRunningOperationStates:
                description: |-
                  LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
                  next reconciliation loop.
                items:
                  description: Future contains the data needed for an Azure long-running
                    operation to continue across reconcile loops.
                  properties:
                    data:
                      description: Data is the base64 url encoded json Azure AutoRest
                        Future.
                      type: string
                    name:
                      description: |-
                        Name is the name of the Azure resource.
                        Together with the service name, this forms the unique identifier for the future.
                      type: string
                    resourceGroup:
                      description: ResourceGroup is the Azure resource group for the
                        resource.
                      type: string
                    serviceName:
                      description: |-
                        ServiceName is the name of the Azure service.
                        Together with the name of the resource, this forms the unique identifier for the future.
                      type: string
                    type:
                      description: Type describes the type of future, such as update,
                        create, delete, etc.
                      type: string
                  required:
                  - data
                  - name
                  - serviceName
                  - type
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azureclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureClusterTemplate
    listKind: AzureClusterTemplateList
    plural: azureclustertemplates
    singular: azureclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureClusterTemplate is the Schema for the azureclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterTemplateSpec defines the desired state of AzureClusterTemplate.
            properties:
              template:
                description: AzureClusterTemplateResource describes the data needed
                  to create an AzureCluster from a template.
                properties:
                  spec:
                    description: AzureClusterTemplateResourceSpec specifies an Azure
                      cluster template resource.
                    properties:
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: |-
                          AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
                          ones added by default.
                        type: object
                      azureEnvironment:
                        description: |-
                          AzureEnvironment is the name of the AzureCloud to be used.
                          The default value that would be used by most users is "AzurePublicCloud", other values are:
                          - ChinaCloud: "AzureChinaCloud"
                          - GermanCloud: "AzureGermanCloud"
                          - PublicCloud: "AzurePublicCloud"
                          - USGovernmentCloud: "AzureUSGovernmentCloud"


                          Note that values other than the default must also be accompanied by corresponding changes to the
                          aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
                          not support referring to multiple different clouds in a single installation. The following fields must
                          be defined in the Secret:
                          - AZURE_AUTHORITY_HOST
                          - AZURE_RESOURCE_MANAGER_ENDPOINT
                          - AZURE_RESOURCE_MANAGER_AUDIENCE


                          See the [ASO docs] for more details.


                          [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
                        type: string
                      bastionSpec:
                        description: BastionSpec encapsulates all things related to
                          the Bastions in the cluster.
                        properties:
                          azureBastion:
                            description: AzureBastionTemplateSpec specifies a template
                              for an Azure Bastion host.
                            properties:
                              subnet:
                                description: SubnetTemplateSpec specifies a template
                                  for a subnet.
                                properties:
                                  cidrBlocks:
                                    description: CIDRBlocks defines the subnet's address
                                      space, specified as one or more address prefixes
                                      in CIDR notation.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: Name defines a name for the subnet
                                      resource.
                                    type: string
                                  natGateway:
                                    description: NatGateway associated with this subnet.
                                    properties:
                                      name:
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  privateEndpoints:
                                    description: PrivateEndpoints defines a list of
                                      private endpoints that should be attached to
                                      this subnet.
                                    items:
                                      description: PrivateEndpointSpec configures
                                        an Azure Private Endpoint.
                                      properties:
                                        applicationSecurityGroups:
                                          description: ApplicationSecurityGroups specifies
                                            the Application security group in which
                                            the private endpoint IP configuration
                                            is included.
                                          items:
                                            type: string
                                          type: array
                                        customNetworkInterfaceName:
                                          description: CustomNetworkInterfaceName
                                            specifies the network interface name associated
                                            with the private endpoint.
                                          type: string
                                        location:
                                          description: Location specifies the region
                                            to create the private endpoint.
                                          type: string
                                        manualApproval:
                                          description: |-
                                            ManualApproval specifies if the connection approval needs to be done manually or not.
                                            Set it true when the network admin does not have access to approve connections to the remote resource.
                                            Defaults to false.
                                          type: boolean
                                        name:
                                          description: Name specifies the name of
                                            the private endpoint.
                                          type: string
                                        privateIPAddresses:
                                          description: |-
                                            PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                            They have to be part of the subnet where the private endpoint is linked.
                                          items:
                                            type: string
                                          type: array
                                        privateLinkServiceConnections:
                                          description: PrivateLinkServiceConnections
                                            specifies Private Link Service Connections
                                            of the private endpoint.
                                          items:
                                            description: PrivateLinkServiceConnection
                                              defines the specification for a private
                                              link service connection associated with
                                              a private endpoint.
                                            properties:
                                              groupIDs:
                                                description: GroupIDs specifies the
                                                  ID(s) of the group(s) obtained from
                                                  the remote resource that this private
                                                  endpoint should connect to.
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: Name specifies the name
                                                  of the private link service.
                                                type: string
                                              privateLinkServiceID:
                                                description: PrivateLinkServiceID
                                                  specifies the resource ID of the
                                                  private link service.
                                                type: string
                                              requestMessage:
                                                description: RequestMessage specifies
                                                  a message passed to the owner of
                                                  the remote resource with the private
                                                  endpoint connection request.
                                                maxLength: 140
                                                type: string
                                            type: object
                                          type: array
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  role:
                                    description: Role defines the subnet role (eg.
                                      Node, ControlPlane)
                                    enum:
                                    - node
                                    - control-plane
                                    - bastion
                                    - all
                                    type: string
                                  securityGroup:
                                    description: SecurityGroup defines the NSG (network
                                      security group) that should be attached to this
                                      subnet.
                                    properties:
                                      securityRules:
                                        description: SecurityRules is a slice of Azure
                                          security rules for security groups.
                                        items:
                                          description: SecurityRule defines an Azure
                                            security rule for security groups.
                                          properties:
                                            action:
                                              default: Allow
                                              description: Action specifies whether
                                                network traffic is allowed or denied.
                                                Can either be "Allow" or "Deny". Defaults
                                                to "Allow".
                                              enum:
                                              - Allow
                                              - Deny
                                              type: string
                                            description:
                                              description: A description for this
                                                rule. Restricted to 140 chars.
                                              type: string
                                            destination:
                                              description: Destination is the destination
                                                address prefix. CIDR or destination
                                                IP range. Asterix '*' can also be
                                                used to match all source IPs. Default
                                                tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                                and 'Internet' can also be used.
                                              type: string
                                            destinationPorts:
                                              description: DestinationPorts specifies
                                                the destination port or range. Integer
                                                or range between 0 and 65535. Asterix
                                                '*' can also be used to match all
                                                ports.
                                              type: string
                                            direction:
                                              description: Direction indicates whether
                                                the rule applies to inbound, or outbound
                                                traffic. "Inbound" or "Outbound".
                                              enum:
                                              - Inbound
                                              - Outbound
                                              type: string
                                            name:
                                              description: Name is a unique name within
                                                the network security group.
                                              type: string
                                            priority:
                                              description: Priority is a number between
                                                100 and 4096. Each rule should have
                                                a unique value for priority. Rules
                                                are processed in priority order, with
                                                lower numbers processed before higher
                                                numbers. Once traffic matches a rule,
                                                processing stops.
                                              format: int32
                                              type: integer
                                            protocol:
                                              description: Protocol specifies the
                                                protocol type. "Tcp", "Udp", "Icmp",
                                                or "*".
                                              enum:
                                              - Tcp
                                              - Udp
                                              - Icmp
                                              - '*'
                                              type: string
                                            source:
                                              description: Source specifies the CIDR
                                                or source IP range. Asterix '*' can
                                                also be used to match all source IPs.
                                                Default tags such as 'VirtualNetwork',
                                                'AzureLoadBalancer' and 'Internet'
                                                can also be used. If this is an ingress
                                                rule, specifies where network traffic
                                                originates from.
                                              type: string
                                            sourcePorts:
                                              description: SourcePorts specifies source
                                                port or range. Integer or range between
                                                0 and 65535. Asterix '*' can also
                                                be used to match all ports.
                                              type: string
                                            sources:
                                              description: Sources specifies The CIDR
                                                or source IP ranges.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - description
                                          - direction
                                          - name
                                          - protocol
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      tags:
                                        additionalProperties:
                                          type: string
                                        description: Tags defines a map of tags.
                                        type: object
                                    type: object
                                  serviceEndpoints:
                                    description: ServiceEndpoints is a slice of Virtual
                                      Network service endpoints to enable for the
                                      subnets.
                                    items:
                                      description: ServiceEndpointSpec configures
                                        an Azure Service Endpoint.
                                      properties:
                                        locations:
                                          items:
                                            type: string
                                          type: array
                                        service:
                                          type: string
                                      required:
                                      - locations
                                      - service
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - service
                                    x-kubernetes-list-type: map
                                required:
                                - name
                                - role
                                type: object
                            type: object
                        type: object
                      cloudProviderConfigOverrides:
                        description: |-
                          CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config.
                          This is only a subset of options that are available in azure cloud provider config.
                          Some values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides.
                          See: https://cloud-provider-azure.sigs.k8s.io/install/configs
                          Note: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.
                        properties:
                          backOffs:
                            description: BackOffConfig indicates the back-off config
                              options.
                            properties:
                              cloudProviderBackoff:
                                type: boolean
                              cloudProviderBackoffDuration:
                                type: integer
                              cloudProviderBackoffExponent:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              cloudProviderBackoffJitter:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              cloudProviderBackoffRetries:
                                type: integer
                            type: object
                          rateLimits:
                            items:
                              description: |-
                                RateLimitSpec represents the rate limit configuration for a particular kind of resource.
                                Eg. loadBalancerRateLimit is used to configure rate limits for load balancers.
                                This eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects.
                                See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
                                We cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools.
                                See: https://github.com/kubernetes-sigs/controller-tools/issues/245
                              properties:
                                config:
                                  description: RateLimitConfig indicates the rate
                                    limit config options.
                                  properties:
                                    cloudProviderRateLimit:
                                      type: boolean
                                    cloudProviderRateLimitBucket:
                                      type: integer
                                    cloudProviderRateLimitBucketWrite:
                                      type: integer
                                    cloudProviderRateLimitQPS:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    cloudProviderRateLimitQPSWrite:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                name:
                                  description: Name is the name of the rate limit
                                    spec.
                                  enum:
                                  - defaultRateLimit
                                  - routeRateLimit
                                  - subnetsRateLimit
                                  - interfaceRateLimit
                                  - routeTableRateLimit
                                  - loadBalancerRateLimit
                                  - publicIPAddressRateLimit
                                  - securityGroupRateLimit
                                  - virtualMachineRateLimit
                                  - storageAccountRateLimit
                                  - diskRateLimit
                                  - snapshotRateLimit
                                  - virtualMachineScaleSetRateLimit
                                  - virtualMachineSizesRateLimit
                                  - availabilitySetRateLimit
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      extendedLocation:
                        description: ExtendedLocation is an optional set of ExtendedLocation
                          properties for clusters on Azure public MEC.
                        properties:
                          name:
                            description: Name defines the name for the extended location.
                            type: string
                          type:
                            description: Type defines the type for the extended location.
                            enum:
                            - EdgeZone
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      failureDomains:
                        additionalProperties:
                          description: |-
                            FailureDomainSpec is the Schema for Cluster API failure domains.
                            It allows controllers to understand how many failure domains a cluster can optionally span across.
                          properties:
                            attributes:
                              additionalProperties:
                                type: string
                              description: Attributes is a free form map of attributes
                                an infrastructure provider might use or require.
                              type: object
                            controlPlane:
                              description: ControlPlane determines if this failure
                                domain is suitable for use by control plane machines.
                              type: boolean
                          type: object
                        description: |-
                          FailureDomains is a list of failure domains in the cluster's region, used to restrict
                          eligibility to host the control plane. A FailureDomain maps to an availability zone,
                          which is a separated group of datacenters within a region.
                          See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
                        type: object
                      identityRef:
                        description: IdentityRef is a reference to an AzureIdentity
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                              TODO: this design is not final and this field is subject to change in the future.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      location:
                        type: string
                      networkSpec:
                        description: NetworkSpec encapsulates all things related to
                          Azure network.
                        properties:
                          apiServerLB:
                            description: APIServerLB is the configuration for the
                              control-plane load balancer.
                            properties:
                              idleTimeoutInMinutes:
                                description: IdleTimeoutInMinutes specifies the timeout
                                  for the TCP idle connection.
                                format: int32
                                type: integer
                              sku:
                                description: SKU defines an Azure load balancer SKU.
                                type: string
                              type:
                                description: LBType defines an Azure load balancer
                                  Type.
                                type: string
                            type: object
                          controlPlaneOutboundLB:
                            description: |-
                              ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer.
                              This is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.
                            properties:
                              idleTimeoutInMinutes:
                                description: IdleTimeoutInMinutes specifies the timeout
                                  for the TCP idle connection.
                                format: int32
                                type: integer
                              sku:
                                description: SKU defines an Azure load balancer SKU.
                                type: string
                              type:
                                description: LBType defines an Azure load balancer
                                  Type.
                                type: string
                            type: object
                          nodeOutboundLB:
                            description: NodeOutboundLB is the configuration for the
                              node outbound load balancer.
                            properties:
                              idleTimeoutInMinutes:
                                description: IdleTimeoutInMinutes specifies the timeout
                                  for the TCP idle connection.
                                format: int32
                                type: integer
                              sku:
                                description: SKU defines an Azure load balancer SKU.
                                type: string
                              type:
                                description: LBType defines an Azure load balancer
                                  Type.
                                type: string
                            type: object
                          privateDNSZoneName:
                            description: PrivateDNSZoneName defines the zone name
                              for the Azure Private DNS.
                            type: string
                          subnets:
                            description: Subnets is the configuration for the control-plane
                              subnet and the node subnet.
                            items:
                              description: SubnetTemplateSpec specifies a template
                                for a subnet.
                              properties:
                                cidrBlocks:
                                  description: CIDRBlocks defines the subnet's address
                                    space, specified as one or more address prefixes
                                    in CIDR notation.
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name defines a name for the subnet
                                    resource.
                                  type: string
                                natGateway:
                                  description: NatGateway associated with this subnet.
                                  properties:
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                privateEndpoints:
                                  description: PrivateEndpoints defines a list of
                                    private endpoints that should be attached to this
                                    subnet.
                                  items:
                                    description: PrivateEndpointSpec configures an
                                      Azure Private Endpoint.
                                    properties:
                                      applicationSecurityGroups:
                                        description: ApplicationSecurityGroups specifies
                                          the Application security group in which
                                          the private endpoint IP configuration is
                                          included.
                                        items:
                                          type: string
                                        type: array
                                      customNetworkInterfaceName:
                                        description: CustomNetworkInterfaceName specifies
                                          the network interface name associated with
                                          the private endpoint.
                                        type: string
                                      location:
                                        description: Location specifies the region
                                          to create the private endpoint.
                                        type: string
                                      manualApproval:
                                        description: |-
                                          ManualApproval specifies if the connection approval needs to be done manually or not.
                                          Set it true when the network admin does not have access to approve connections to the remote resource.
                                          Defaults to false.
                                        type: boolean
                                      name:
                                        description: Name specifies the name of the
                                          private endpoint.
                                        type: string
                                      privateIPAddresses:
                                        description: |-
                                          PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                          They have to be part of the subnet where the private endpoint is linked.
                                        items:
                                          type: string
                                        type: array
                                      privateLinkServiceConnections:
                                        description: PrivateLinkServiceConnections
                                          specifies Private Link Service Connections
                                          of the private endpoint.
                                        items:
                                          description: PrivateLinkServiceConnection
                                            defines the specification for a private
                                            link service connection associated with
                                            a private endpoint.
                                          properties:
                                            groupIDs:
                                              description: GroupIDs specifies the
                                                ID(s) of the group(s) obtained from
                                                the remote resource that this private
                                                endpoint should connect to.
                                              items:
                                                type: string
                                              type: array
                                            name:
                                              description: Name specifies the name
                                                of the private link service.
                                              type: string
                                            privateLinkServiceID:
                                              description: PrivateLinkServiceID specifies
                                                the resource ID of the private link
                                                service.
                                              type: string
                                            requestMessage:
                                              description: RequestMessage specifies
                                                a message passed to the owner of the
                                                remote resource with the private endpoint
                                                connection request.
                                              maxLength: 140
                                              type: string
                                          type: object
                                        type: array
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                role:
                                  description: Role defines the subnet role (eg. Node,
                                    ControlPlane)
                                  enum:
                                  - node
                                  - control-plane
                                  - bastion
                                  - all
                                  type: string
                                securityGroup:
                                  description: SecurityGroup defines the NSG (network
                                    security group) that should be attached to this
                                    subnet.
                                  properties:
                                    securityRules:
                                      description: SecurityRules is a slice of Azure
                                        security rules for security groups.
                                      items:
                                        description: SecurityRule defines an Azure
                                          security rule for security groups.
                                        properties:
                                          action:
                                            default: Allow
                                            description: Action specifies whether
                                              network traffic is allowed or denied.
                                              Can either be "Allow" or "Deny". Defaults
                                              to "Allow".
                                            enum:
                                            - Allow
                                            - Deny
                                            type: string
                                          description:
                                            description: A description for this rule.
                                              Restricted to 140 chars.
                                            type: string
                                          destination:
                                            description: Destination is the destination
                                              address prefix. CIDR or destination
                                              IP range. Asterix '*' can also be used
                                              to match all source IPs. Default tags
                                              such as 'VirtualNetwork', 'AzureLoadBalancer'
                                              and 'Internet' can also be used.
                                            type: string
                                          destinationPorts:
                                            description: DestinationPorts specifies
                                              the destination port or range. Integer
                                              or range between 0 and 65535. Asterix
                                              '*' can also be used to match all ports.
                                            type: string
                                          direction:
                                            description: Direction indicates whether
                                              the rule applies to inbound, or outbound
                                              traffic. "Inbound" or "Outbound".
                                            enum:
                                            - Inbound
                                            - Outbound
                                            type: string
                                          name:
                                            description: Name is a unique name within
                                              the network security group.
                                            type: string
                                          priority:
                                            description: Priority is a number between
                                              100 and 4096. Each rule should have
                                              a unique value for priority. Rules are
                                              processed in priority order, with lower
                                              numbers processed before higher numbers.
                                              Once traffic matches a rule, processing
                                              stops.
                                            format: int32
                                            type: integer
                                          protocol:
                                            description: Protocol specifies the protocol
                                              type. "Tcp", "Udp", "Icmp", or "*".
                                            enum:
                                            - Tcp
                                            - Udp
                                            - Icmp
                                            - '*'
                                            type: string
                                          source:
                                            description: Source specifies the CIDR
                                              or source IP range. Asterix '*' can
                                              also be used to match all source IPs.
                                              Default tags such as 'VirtualNetwork',
                                              'AzureLoadBalancer' and 'Internet' can
                                              also be used. If this is an ingress
                                              rule, specifies where network traffic
                                              originates from.
                                            type: string
                                          sourcePorts:
                                            description: SourcePorts specifies source
                                              port or range. Integer or range between
                                              0 and 65535. Asterix '*' can also be
                                              used to match all ports.
                                            type: string
                                          sources:
                                            description: Sources specifies The CIDR
                                              or source IP ranges.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - description
                                        - direction
                                        - name
                                        - protocol
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    tags:
                                      additionalProperties:
                                        type: string
                                      description: Tags defines a map of tags.
                                      type: object
                                  type: object
                                serviceEndpoints:
                                  description: ServiceEndpoints is a slice of Virtual
                                    Network service endpoints to enable for the subnets.
                                  items:
                                    description: ServiceEndpointSpec configures an
                                      Azure Service Endpoint.
                                    properties:
                                      locations:
                                        items:
                                          type: string
                                        type: array
                                      service:
                                        type: string
                                    required:
                                    - locations
                                    - service
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - service
                                  x-kubernetes-list-type: map
                              required:
                              - name
                              - role
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          vnet:
                            description: Vnet is the configuration for the Azure virtual
                              network.
                            properties:
                              cidrBlocks:
                                description: CIDRBlocks defines the virtual network's
                                  address space, specified as one or more address
                                  prefixes in CIDR notation.
                                items:
                                  type: string
                                type: array
                              peerings:
                                description: Peerings defines a list of peerings of
                                  the newly created virtual network with existing
                                  virtual networks.
                                items:
                                  description: VnetPeeringClassSpec specifies a virtual
                                    network peering class.
                                  properties:
                                    forwardPeeringProperties:
                                      description: |-
                                        ForwardPeeringProperties specifies VnetPeeringProperties for peering from the cluster's virtual network to the
                                        remote virtual network.
                                      properties:
                                        allowForwardedTraffic:
                                          description: |-
                                            AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                            allowed/disallowed in remote virtual network.
                                          type: boolean
                                        allowGatewayTransit:
                                          description: |-
                                            AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                            network.
                                          type: boolean
                                        allowVirtualNetworkAccess:
                                          description: |-
                                            AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                            the VMs in remote virtual network space.
                                          type: boolean
                                        useRemoteGateways:
                                          description: |-
                                            UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                            If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                            will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                            This flag cannot be set if virtual network already has a gateway.
                                          type: boolean
                                      type: object
                                    remoteVnetName:
                                      description: RemoteVnetName defines name of
                                        the remote virtual network.
                                      type: string
                                    resourceGroup:
                                      description: ResourceGroup is the resource group
                                        name of the remote virtual network.
                                      type: string
                                    reversePeeringProperties:
                                      description: |-
                                        ReversePeeringProperties specifies VnetPeeringProperties for peering from the remote virtual network to the
                                        cluster's virtual network.
                                      properties:
                                        allowForwardedTraffic:
                                          description: |-
                                            AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                            allowed/disallowed in remote virtual network.
                                          type: boolean
                                        allowGatewayTransit:
                                          description: |-
                                            AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                            network.
                                          type: boolean
                                        allowVirtualNetworkAccess:
                                          description: |-
                                            AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                            the VMs in remote virtual network space.
                                          type: boolean
                                        useRemoteGateways:
                                          description: |-
                                            UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                            If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                            will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                            This flag cannot be set if virtual network already has a gateway.
                                          type: boolean
                                      type: object
                                  required:
                                  - remoteVnetName
                                  type: object
                                type: array
                              tags:
                                additionalProperties:
                                  type: string
                                description: Tags is a collection of tags describing
                                  the resource.
                                type: object
                            type: object
                        type: object
                      subscriptionID:
                        type: string
                    required:
                    - location
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachineTemplate
    listKind: AzureMachineTemplateList
    plural: azuremachinetemplates
    singular: azuremachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureMachineTemplate is the Schema for the azuremachinetemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate.
            properties:
              template:
                description: AzureMachineTemplateResource describes the data needed
                  to create an AzureMachine from a template.
                properties:
                  metadata:
                    description: |-
                      ObjectMeta is metadata that all persisted resources must have, which includes all objects
                      users must create. This is a copy of customizable fields from metav1.ObjectMeta.


                      ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`,
                      which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases
                      and read-only fields which end up in the generated CRD validation, having it as a subset simplifies
                      the API and some issues that can impact user experience.


                      During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                      for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs,
                      specifically `spec.metadata.creationTimestamp in body must be of type string: "null"`.
                      The investigation showed that `controller-tools@v2` behaves differently than its previous version
                      when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.


                      In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta`
                      had validation properties, including for `creationTimestamp` (metav1.Time).
                      The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null`
                      which breaks validation because the field isn't marked as nullable.


                      In future versions, controller-tools@v2 might allow overriding the type and validation for embedded
                      types. When that happens, this hack should be revisited.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      acceleratedNetworking:
                        description: 'Deprecated: AcceleratedNetworking should be
                          set in the networkInterfaces field.'
                        type: boolean
                      additionalCapabilities:
                        description: AdditionalCapabilities specifies additional capabilities
                          enabled or disabled on the virtual machine.
                        properties:
                          ultraSSDEnabled:
                            description: |-
                              UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.
                              Defaults to true if Ultra SSD data disks are specified,
                              otherwise it doesn't set the capability on the VM.
                            type: boolean
                        type: object
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: |-
                          AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                          Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
                          AzureMachine's value takes precedence.
                        type: object
                      allocatePublicIP:
                        description: AllocatePublicIP allows the ability to create
                          dynamic public ips for machines where this value is true.
                        type: boolean
                      capacityReservationGroupID:
                        description: |-
                          CapacityReservationGroupID specifies the capacity reservation group resource id that should be
                          used for allocating the virtual machine.
                        type: string
                      dataDisks:
                        description: DataDisk specifies the parameters that are used
                          to add one or more data disks to the machine
                        items:
                          description: DataDisk specifies the parameters that are
                            used to add one or more data disks to the machine.
                          properties:
                            cachingType:
                              description: CachingType specifies the caching requirements.
                              enum:
                              - None
                              - ReadOnly
                              - ReadWrite
                              type: string
                            diskSizeGB:
                              description: DiskSizeGB is the size in GB to assign
                                to the data disk.
                              format: int32
                              type: integer
                            lun:
                              description: |-
                                Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
                                The value must be between 0 and 63.
                              format: int32
                              type: integer
                            managedDisk:
                              description: ManagedDisk specifies the Managed Disk
                                parameters for the data disk.
                              properties:
                                diskEncryptionSet:
                                  description: DiskEncryptionSet specifies the customer-managed
                                    disk encryption set resource id for the managed
                                    disk.
                                  properties:
                                    id:
                                      description: ID defines resourceID for diskEncryptionSet
                                        resource. It must be in the same subscription
                                      type: string
                                  type: object
                                securityProfile:
                                  description: SecurityProfile specifies the security
                                    profile for the managed disk.
                                  properties:
                                    diskEncryptionSet:
                                      description: |-
                                        DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                        managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                        VMGuest blob.
                                      properties:
                                        id:
                                          description: ID defines resourceID for diskEncryptionSet
                                            resource. It must be in the same subscription
                                          type: string
                                      type: object
                                    securityEncryptionType:
                                      description: |-
                                        SecurityEncryptionType specifies the encryption type of the managed disk.
                                        It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                        blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                        When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                        When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                        VirtualizedTrustedPlatformModule should be set to Enabled.
                                        It can be set only for Confidential VMs.
                                      enum:
                                      - VMGuestStateOnly
                                      - DiskWithVMGuestState
                                      type: string
                                  type: object
                                storageAccountType:
                                  type: string
                              type: object
                            nameSuffix:
                              description: |-
                                NameSuffix is the suffix to be appended to the machine name to generate the disk name.
                                Each disk name will be in format <machineName>_<nameSuffix>.
                              type: string
                          required:
                          - diskSizeGB
                          - nameSuffix
                          type: object
                        type: array
                      diagnostics:
                        description: |-
                          Diagnostics specifies the diagnostics settings for a virtual machine.
                          If not specified then Boot diagnostics (Managed) will be enabled.
                        properties:
                          boot:
                            description: |-
                              Boot configures the boot diagnostics settings for the virtual machine.
                              This allows to configure capturing serial output from the virtual machine on boot.
                              This is useful for debugging software based launch issues.
                              If not specified then Boot diagnostics (Managed) will be enabled.
                            properties:
                              storageAccountType:
                                description: |-
                                  StorageAccountType determines if the storage account for storing the diagnostics data
                                  should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                                enum:
                                - Managed
                                - UserManaged
                                - Disabled
                                type: string
                              userManaged:
                                description: UserManaged provides a reference to the
                                  user-managed storage account.
                                properties:
                                  storageAccountURI:
                                    description: |-
                                      StorageAccountURI is the URI of the user-managed storage account.
                                      The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                                      but may differ if you are using Azure DNS zone endpoints.
                                      You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                                      endpoints tab in the Azure console or with the CLI by issuing
                                      `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                                    maxLength: 1024
                                    pattern: ^https://
                                    type: string
                                required:
                                - storageAccountURI
                                type: object
                            required:
                            - storageAccountType
                            type: object
                        type: object
                      disableExtensionOperations:
                        description: |-
                          DisableExtensionOperations specifies whether extension operations should be disabled on the virtual machine.
                          Use this setting only if VMExtensions are not supported by your image, as it disables CAPZ bootstrapping extension used for detecting Kubernetes bootstrap failure.
                          This may only be set to True when no extensions are configured on the virtual machine.
                        type: boolean
                      dnsServers:
                        description: DNSServers adds a list of DNS Server IP addresses
                          to the VM NICs.
                        items:
                          type: string
                        type: array
                      enableIPForwarding:
                        description: |-
                          EnableIPForwarding enables IP Forwarding in Azure which is required for some CNI's to send traffic from a pods on one machine
                          to another. This is required for IpV6 with Calico in combination with User Defined Routes (set by the Azure Cloud Controller
                          manager). Default is false for disabled.
                        type: boolean
                      failureDomain:
                        description: |-
                          FailureDomain is the failure domain unique identifier this Machine should be attached to,
                          as defined in Cluster API. This relates to an Azure Availability Zone
                        type: string
                      identity:
                        default: None
                        description: |-
                          Identity is the type of identity used for the virtual machine.
                          The type 'SystemAssigned' is an implicitly created identity.
                          The generated identity will be assigned a Subscription contributor role.
                          The type 'UserAssigned' is a standalone Azure resource provided by the user
                          and assigned to the VM
                        enum:
                        - None
                        - SystemAssigned
                        - UserAssigned
                        type: string
                      image:
                        description: |-
                          Image is used to provide details of an image to use during VM creation.
                          If image details are omitted the image will default the Azure Marketplace "capi" offer,
                          which is based on Ubuntu.
                        properties:
                          computeGallery:
                            description: ComputeGallery specifies an image to use
                              from the Azure Compute Gallery
                            properties:
                              gallery:
                                description: Gallery specifies the name of the compute
                                  image gallery that contains the image
                                minLength: 1
                                type: string
                              name:
                                description: Name is the name of the image
                                minLength: 1
                                type: string
                              plan:
                                description: Plan contains plan information.
                                properties:
                                  offer:
                                    description: |-
                                      Offer specifies the name of a group of related images created by the publisher.
                                      For example, UbuntuServer, WindowsServer
                                    minLength: 1
                                    type: string
                                  publisher:
                                    description: Publisher is the name of the organization
                                      that created the image
                                    minLength: 1
                                    type: string
                                  sku:
                                    description: |-
                                      SKU specifies an instance of an offer, such as a major release of a distribution.
                                      For example, 18.04-LTS, 2019-Datacenter
                                    minLength: 1
                                    type: string
                                required:
                                - offer
                                - publisher
                                - sku
                                type: object
                              resourceGroup:
                                description: ResourceGroup specifies the resource
                                  group containing the private compute gallery.
                                type: string
                              subscriptionID:
                                description: SubscriptionID is the identifier of the
                                  subscription that contains the private compute gallery.
                                type: string
                              version:
                                description: |-
                                  Version specifies the version of the marketplace image. The allowed formats
                                  are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                                  Specify 'latest' to use the latest version of an image available at deploy time.
                                  Even if you use 'latest', the VM image will not automatically update after deploy
                                  time even if a new version becomes available.
                                minLength: 1
                                type: string
                            required:
                            - gallery
                            - name
                            - version
                            type: object
                          id:
                            description: ID specifies an image to use by ID
                            type: string
                          marketplace:
                            description: Marketplace specifies an image to use from
                              the Azure Marketplace
                            properties:
                              offer:
                                description: |-
                                  Offer specifies the name of a group of related images created by the publisher.
                                  For example, UbuntuServer, WindowsServer
                                minLength: 1
                                type: string
                              publisher:
                                description: Publisher is the name of the organization
                                  that created the image
                                minLength: 1
                                type: string
                              sku:
                                description: |-
                                  SKU specifies an instance of an offer, such as a major release of a distribution.
                                  For example, 18.04-LTS, 2019-Datacenter
                                minLength: 1
                                type: string
                              thirdPartyImage:
                                default: false
                                description: |-
                                  ThirdPartyImage indicates the image is published by a third party publisher and a Plan
                                  will be generated for it.
                                type: boolean
                              version:
                                description: |-
                                  Version specifies the version of an image sku. The allowed formats
                                  are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                                  Specify 'latest' to use the latest version of an image available at deploy time.
                                  Even if you use 'latest', the VM image will not automatically update after deploy
                                  time even if a new version becomes available.
                                minLength: 1
                                type: string
                            required:
                            - offer
                            - publisher
                            - sku
                            - version
                            type: object
                          sharedGallery:
                            description: |-
                              SharedGallery specifies an image to use from an Azure Shared Image Gallery
                              Deprecated: use ComputeGallery instead.
                            properties:
                              gallery:
                                description: Gallery specifies the name of the shared
                                  image gallery that contains the image
                                minLength: 1
                                type: string
                              name:
                                description: Name is the name of the image
                                minLength: 1
                                type: string
                              offer:
                                description: |-
                                  Offer specifies the name of a group of related images created by the publisher.
                                  For example, UbuntuServer, WindowsServer
                                  This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                                  This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                                type: string
                              publisher:
                                description: |-
                                  Publisher is the name of the organization that created the image.
                                  This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                                  This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                                type: string
                              resourceGroup:
                                description: ResourceGroup specifies the resource
                                  group containing the shared image gallery
                                minLength: 1
                                type: string
                              sku:
                                description: |-
                                  SKU specifies an instance of an offer, such as a major release of a distribution.
                                  For example, 18.04-LTS, 2019-Datacenter
                                  This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                                  This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                                type: string
                              subscriptionID:
                                description: SubscriptionID is the identifier of the
                                  subscription that contains the shared image gallery
                                minLength: 1
                                type: string
                              version:
                                description: |-
                                  Version specifies the version of the marketplace image. The allowed formats
                                  are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                                  Specify 'latest' to use the latest version of an image available at deploy time.
                                  Even if you use 'latest', the VM image will not automatically update after deploy
                                  time even if a new version becomes available.
                                minLength: 1
                                type: string
                            required:
                            - gallery
                            - name
                            - resourceGroup
                            - subscriptionID
                            - version
                            type: object
                        type: object
                      networkInterfaces:
                        description: |-
                          NetworkInterfaces specifies a list of network interface configurations.
                          If left unspecified, the VM will get a single network interface with a
                          single IPConfig in the subnet specified in the cluster's node subnet field.
                          The primary interface will be the first networkInterface specified (index 0) in the list.
                        items:
                          description: NetworkInterface defines a network interface.
                          properties:
                            acceleratedNetworking:
                              description: |-
                                AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
                                whether the requested VMSize supports accelerated networking.
                                If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                              type: boolean
                            privateIPConfigs:
                              description: |-
                                PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
                                Defaults to 1 if not specified.
                              type: integer
                            subnetName:
                              description: SubnetName specifies the subnet in which
                                the new network interface will be placed.
                              type: string
                          type: object
                        type: array
                      osDisk:
                        description: OSDisk specifies the parameters for the operating
                          system disk of the machine
                        properties:
                          cachingType:
                            description: CachingType specifies the caching requirements.
                            enum:
                            - None
                            - ReadOnly
                            - ReadWrite
                            type: string
                          diffDiskSettings:
                            description: DiffDiskSettings describe ephemeral disk
                              settings for the os disk.
                            properties:
                              option:
                                description: |-
                                  Option enables ephemeral OS when set to "Local"
                                  See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
                                enum:
                                - Local
                                type: string
                            required:
                            - option
                            type: object
                          diskSizeGB:
                            description: |-
                              DiskSizeGB is the size in GB to assign to the OS disk.
                              Will have a default of 30GB if not provided
                            format: int32
                            type: integer
                          managedDisk:
                            description: ManagedDisk specifies the Managed Disk parameters
                              for the OS disk.
                            properties:
                              diskEncryptionSet:
                                description: DiskEncryptionSet specifies the customer-managed
                                  disk encryption set resource id for the managed
                                  disk.
                                properties:
                                  id:
                                    description: ID defines resourceID for diskEncryptionSet
                                      resource. It must be in the same subscription
                                    type: string
                                type: object
                              securityProfile:
                                description: SecurityProfile specifies the security
                                  profile for the managed disk.
                                properties:
                                  diskEncryptionSet:
                                    description: |-
                                      DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                      managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                      VMGuest blob.
                                    properties:
                                      id:
                                        description: ID defines resourceID for diskEncryptionSet
                                          resource. It must be in the same subscription
                                        type: string
                                    type: object
                                  securityEncryptionType:
                                    description: |-
                                      SecurityEncryptionType specifies the encryption type of the managed disk.
                                      It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                      blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                      When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                      When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                      VirtualizedTrustedPlatformModule should be set to Enabled.
                                      It can be set only for Confidential VMs.
                                    enum:
                                    - VMGuestStateOnly
                                    - DiskWithVMGuestState
                                    type: string
                                type: object
                              storageAccountType:
                                type: string
                            type: object
                          osType:
                            type: string
                        required:
                        - osType
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      roleAssignmentName:
                        description: 'Deprecated: RoleAssignmentName should be set
                          in the systemAssignedIdentityRole field.'
                        type: string
                      securityProfile:
                        description: SecurityProfile specifies the Security profile
                          settings for a virtual machine.
                        properties:
                          encryptionAtHost:
                            description: |-
                              This field indicates whether Host Encryption should be enabled
                              or disabled for a virtual machine or virtual machine scale set.
                              This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
                              Default is disabled.
                            type: boolean
                          securityType:
                            description: |-
                              SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
                              enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
                            enum:
                            - ConfidentialVM
                            - TrustedLaunch
                            type: string
                          uefiSettings:
                            description: UefiSettings specifies the security settings
                              like secure boot and vTPM used while creating the virtual
                              machine.
                            properties:
                              secureBootEnabled:
                                description: |-
                                  SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
                                  Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
                                  If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                                type: boolean
                              vTpmEnabled:
                                description: |-
                                  VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
                                  When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
                                  The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
                                  This is required to be set to Enabled if SecurityEncryptionType is defined.
                                  If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                                type: boolean
                            type: object
                        type: object
                      spotVMOptions:
                        description: SpotVMOptions allows the ability to specify the
                          Machine should use a Spot VM
                        properties:
                          evictionPolicy:
                            description: EvictionPolicy defines the behavior of the
                              virtual machine when it is evicted. It can be either
                              Delete or Deallocate.
                            enum:
                            - Deallocate
                            - Delete
                            type: string
                          maxPrice:
                            anyOf:
                            - type: integer
                            - type: string
                            description: MaxPrice defines the maximum price the user
                              is willing to pay for Spot VM instances
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      sshPublicKey:
                        description: |-
                          SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
                          Refer to documentation on how to set up SSH access on Windows instances.
                        type: string
                      subnetName:
                        description: 'Deprecated: SubnetName should be set in the
                          networkInterfaces field.'
                        type: string
                      systemAssignedIdentityRole:
                        description: SystemAssignedIdentityRole defines the role and
                          scope to assign to the system-assigned identity.
                        properties:
                          definitionID:
                            description: |-
                              DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
                              Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
                            type: string
                          name:
                            description: |-
                              Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
                              If not specified, a random UUID will be generated.
                            type: string
                          scope:
                            description: |-
                              Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
                              If not specified, the scope will be the subscription.
                            type: string
                        type: object
                      userAssignedIdentities:
                        description: |-
                          UserAssignedIdentities is a list of standalone Azure identities provided by the user
                          The lifecycle of a user-assigned identity is managed separately from the lifecycle of
                          the AzureMachine.
                          See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                        items:
                          description: |-
                            UserAssignedIdentity defines the user-assigned identities provided
                            by the user to be assigned to Azure resources.
                          properties:
                            providerID:
                              description: |-
                                ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
                                'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
                              type: string
                          required:
                          - providerID
                          type: object
                        type: array
                      vmExtensions:
                        description: VMExtensions specifies a list of extensions to
                          be added to the virtual machine.
                        items:
                          description: VMExtension specifies the parameters for a
                            custom VM extension.
                          properties:
                            name:
                              description: Name is the name of the extension.
                              type: string
                            protectedSettings:
                              additionalProperties:
                                type: string
                              description: ProtectedSettings is a JSON formatted protected
                                settings for the extension.
                              type: object
                            publisher:
                              description: Publisher is the name of the extension
                                handler publisher.
                              type: string
                            settings:
                              additionalProperties:
                                type: string
                              description: Settings is a JSON formatted public settings
                                for the extension.
                              type: object
                            version:
                              description: Version specifies the version of the script
                                handler.
                              type: string
                          required:
                          - name
                          - publisher
                          - version
                          type: object
                        type: array
                      vmSize:
                        type: string
                    required:
                    - osDisk
                    - vmSize
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azureclusteridentities.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureClusterIdentity
    listKind: AzureClusterIdentityList
    plural: azureclusteridentities
    singular: azureclusteridentity
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Type of AzureClusterIdentity
      jsonPath: .spec.type
      name: Type
      type: string
    - description: Time duration since creation of this AzureClusterIdentity
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureClusterIdentity is the Schema for the azureclustersidentities
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterIdentitySpec defines the parameters that are
              used to create an AzureIdentity.
            properties:
              allowedNamespaces:
                description: |-
                  AllowedNamespaces is used to identify the namespaces the clusters are allowed to use the identity from.
                  Namespaces can be selected either using an array of namespaces or with label selector.
                  An empty allowedNamespaces object indicates that AzureClusters can use this identity from any namespace.
                  If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                  A namespace should be either in the NamespaceList or match with Selector to use the identity.
                nullable: true
                properties:
                  list:
                    description: A nil or empty list indicates that AzureCluster cannot
                      use the identity from any namespace.
                    items:
                      type: string
                    nullable: true
                    type: array
                  selector:
                    description: |-
                      Selector is a selector of namespaces that AzureCluster can
                      use this Identity from. This is a standard Kubernetes LabelSelector,
                      a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed.


                      A nil or empty selector indicates that AzureCluster cannot use this
                      AzureClusterIdentity from any namespace.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              clientID:
                description: |-
                  ClientID is the service principal client ID.
                  Both User Assigned MSI and SP can use this field.
                type: string
              clientSecret:
                description: ClientSecret is a secret reference which should contain
                  either a Service Principal password or certificate secret.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              resourceID:
                description: |-
                  ResourceID is the Azure resource ID for the User Assigned MSI resource.
                  Only applicable when type is UserAssignedMSI.
                type: string
              tenantID:
                description: TenantID is the service principal primary tenant id.
                type: string
              type:
                description: |-
                  Type is the type of Azure Identity used.
                  ServicePrincipal, ServicePrincipalCertificate, UserAssignedMSI, ManualServicePrincipal or WorkloadIdentity.
                enum:
                - ServicePrincipal
                - UserAssignedMSI
                - ManualServicePrincipal
                - ServicePrincipalCertificate
                - WorkloadIdentity
                type: string
            required:
            - clientID
            - tenantID
            - type
            type: object
          status:
            description: AzureClusterIdentityStatus defines the observed state of
              AzureClusterIdentity.
            properties:
              conditions:
                description: Conditions defines current service state of the AzureClusterIdentity.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachinePool
    listKind: AzureMachinePoolList
    plural: azuremachinepools
    shortNames:
    - amp
    singular: azuremachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: AzureMachinePool replicas count
      jsonPath: .status.replicas
      name: Replicas
      type: string
    - description: AzureMachinePool replicas count
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VMSS provisioning state
      jsonPath: .status.provisioningState
      name: State
      type: string
    - description: Cluster to which this AzureMachinePool belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: MachinePool object to which this AzureMachinePool belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="MachinePool")].name
      name: MachinePool
      priority: 1
      type: string
    - description: Azure VMSS ID
      jsonPath: .spec.providerID
      name: VMSS ID
      priority: 1
      type: string
    - description: Azure VM Size
      jsonPath: .spec.template.vmSize
      name: VM Size
      priority: 1
      type: string
    - description: Time duration since creation of this AzureMachinePool
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureMachinePool is the Schema for the azuremachinepools API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachinePoolSpec defines the desired state of AzureMachinePool.
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                  Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
                  AzureMachine's value takes precedence.
                type: object
              identity:
                default: None
                description: |-
                  Identity is the type of identity used for the Virtual Machine Scale Set.
                  The type 'SystemAssigned' is an implicitly created identity.
                  The generated identity will be assigned a Subscription contributor role.
                  The type 'UserAssigned' is a standalone Azure resource provided by the user
                  and assigned to the VM
                enum:
                - None
                - SystemAssigned
                - UserAssigned
                type: string
              location:
                description: Location is the Azure region location e.g. westus2
                type: string
              orchestrationMode:
                default: Uniform
                description: OrchestrationMode specifies the orchestration mode for
                  the Virtual Machine Scale Set
                enum:
                - Flexible
                - Uniform
                type: string
              platformFaultDomainCount:
                description: |-
                  PlatformFaultDomainCount specifies the number of fault domains that the Virtual Machine Scale Set can use.
                  The count determines the spreading algorithm of the Azure fault domain.
                format: int32
                type: integer
              providerID:
                description: ProviderID is the identification ID of the Virtual Machine
                  Scale Set
                type: string
              providerIDList:
                description: |-
                  ProviderIDList are the identification IDs of machine instances provided by the provider.
                  This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              roleAssignmentName:
                description: 'Deprecated: RoleAssignmentName should be set in the
                  systemAssignedIdentityRole field.'
                type: string
              strategy:
                default:
                  rollingUpdate:
                    deletePolicy: Oldest
                    maxSurge: 1
                    maxUnavailable: 0
                  type: RollingUpdate
                description: The deployment strategy to use to replace existing AzureMachinePoolMachines
                  with new ones.
                properties:
                  rollingUpdate:
                    description: |-
                      Rolling update config params. Present only if
                      MachineDeploymentStrategyType = RollingUpdate.
                    properties:
                      deletePolicy:
                        default: Oldest
                        description: |-
                          DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                          Valid values are "Random, "Newest", "Oldest"
                          When no value is supplied, the default is Oldest
                        enum:
                        - Random
                        - Newest
                        - Oldest
                        type: string
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 1
                        description: |-
                          The maximum number of machines that can be scheduled above the
                          desired number of machines.
                          Value can be an absolute number (ex: 5) or a percentage of
                          desired machines (ex: 10%).
                          This can not be 0 if MaxUnavailable is 0.
                          Absolute number is calculated from percentage by rounding up.
                          Defaults to 1.
                          Example: when this is set to 30%, the new MachineSet can be scaled
                          up immediately when the rolling update starts, such that the total
                          number of old and new machines do not exceed 130% of desired
                          machines. Once old machines have been killed, new MachineSet can
                          be scaled up further, ensuring that total number of machines running
                          at any time during the update is at most 130% of desired machines.
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 0
                        description: |-
                          The maximum number of machines that can be unavailable during the update.
                          Value can be an absolute number (ex: 5) or a percentage of desired
                          machines (ex: 10%).
                          Absolute number is calculated from percentage by rounding down.
                          This can not be 0 if MaxSurge is 0.
                          Defaults to 0.
                          Example: when this is set to 30%, the old MachineSet can be scaled
                          down to 70% of desired machines immediately when the rolling update
                          starts. Once new machines are ready, old MachineSet can be scaled
                          down further, followed by scaling up the new MachineSet, ensuring
                          that the total number of machines available at all times
                          during the update is at least 70% of desired machines.
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    default: RollingUpdate
                    description: Type of deployment. Currently the only supported
                      strategy is RollingUpdate
                    enum:
                    - RollingUpdate
                    type: string
                type: object
              systemAssignedIdentityRole:
                description: SystemAssignedIdentityRole defines the role and scope
                  to assign to the system assigned identity.
                properties:
                  definitionID:
                    description: |-
                      DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
                      Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
                    type: string
                  name:
                    description: |-
                      Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
                      If not specified, a random UUID will be generated.
                    type: string
                  scope:
                    description: |-
                      Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
                      If not specified, the scope will be the subscription.
                    type: string
                type: object
              template:
                description: Template contains the details used to build a replica
                  virtual machine within the Machine Pool
                properties:
                  acceleratedNetworking:
                    description: 'Deprecated: AcceleratedNetworking should be set
                      in the networkInterfaces field.'
                    type: boolean
                  dataDisks:
                    description: DataDisks specifies the list of data disks to be
                      created for a Virtual Machine
                    items:
                      description: DataDisk specifies the parameters that are used
                        to add one or more data disks to the machine.
                      properties:
                        cachingType:
                          description: CachingType specifies the caching requirements.
                          enum:
                          - None
                          - ReadOnly
                          - ReadWrite
                          type: string
                        diskSizeGB:
                          description: DiskSizeGB is the size in GB to assign to the
                            data disk.
                          format: int32
                          type: integer
                        lun:
                          description: |-
                            Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
                            The value must be between 0 and 63.
                          format: int32
                          type: integer
                        managedDisk:
                          description: ManagedDisk specifies the Managed Disk parameters
                            for the data disk.
                          properties:
                            diskEncryptionSet:
                              description: DiskEncryptionSet specifies the customer-managed
                                disk encryption set resource id for the managed disk.
                              properties:
                                id:
                                  description: ID defines resourceID for diskEncryptionSet
                                    resource. It must be in the same subscription
                                  type: string
                              type: object
                            securityProfile:
                              description: SecurityProfile specifies the security
                                profile for the managed disk.
                              properties:
                                diskEncryptionSet:
                                  description: |-
                                    DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                    managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                    VMGuest blob.
                                  properties:
                                    id:
                                      description: ID defines resourceID for diskEncryptionSet
                                        resource. It must be in the same subscription
                                      type: string
                                  type: object
                                securityEncryptionType:
                                  description: |-
                                    SecurityEncryptionType specifies the encryption type of the managed disk.
                                    It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                    blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                    When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                    When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                    VirtualizedTrustedPlatformModule should be set to Enabled.
                                    It can be set only for Confidential VMs.
                                  enum:
                                  - VMGuestStateOnly
                                  - DiskWithVMGuestState
                                  type: string
                              type: object
                            storageAccountType:
                              type: string
                          type: object
                        nameSuffix:
                          description: |-
                            NameSuffix is the suffix to be appended to the machine name to generate the disk name.
                            Each disk name will be in format <machineName>_<nameSuffix>.
                          type: string
                      required:
                      - diskSizeGB
                      - nameSuffix
                      type: object
                    type: array
                  diagnostics:
                    description: |-
                      Diagnostics specifies the diagnostics settings for a virtual machine.
                      If not specified then Boot diagnostics (Managed) will be enabled.
                    properties:
                      boot:
                        description: |-
                          Boot configures the boot diagnostics settings for the virtual machine.
                          This allows to configure capturing serial output from the virtual machine on boot.
                          This is useful for debugging software based launch issues.
                          If not specified then Boot diagnostics (Managed) will be enabled.
                        properties:
                          storageAccountType:
                            description: |-
                              StorageAccountType determines if the storage account for storing the diagnostics data
                              should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                            enum:
                            - Managed
                            - UserManaged
                            - Disabled
                            type: string
                          userManaged:
                            description: UserManaged provides a reference to the user-managed
                              storage account.
                            properties:
                              storageAccountURI:
                                description: |-
                                  StorageAccountURI is the URI of the user-managed storage account.
                                  The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                                  but may differ if you are using Azure DNS zone endpoints.
                                  You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                                  endpoints tab in the Azure console or with the CLI by issuing
                                  `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                                maxLength: 1024
                                pattern: ^https://
                                type: string
                            required:
                            - storageAccountURI
                            type: object
                        required:
                        - storageAccountType
                        type: object
                    type: object
                  image:
                    description: |-
                      Image is used to provide details of an image to use during VM creation.
                      If image details are omitted the image will default the Azure Marketplace "capi" offer,
                      which is based on Ubuntu.
                    properties:
                      computeGallery:
                        description: ComputeGallery specifies an image to use from
                          the Azure Compute Gallery
                        properties:
                          gallery:
                            description: Gallery specifies the name of the compute
                              image gallery that contains the image
                            minLength: 1
                            type: string
                          name:
                            description: Name is the name of the image
                            minLength: 1
                            type: string
                          plan:
                            description: Plan contains plan information.
                            properties:
                              offer:
                                description: |-
                                  Offer specifies the name of a group of related images created by the publisher.
                                  For example, UbuntuServer, WindowsServer
                                minLength: 1
                                type: string
                              publisher:
                                description: Publisher is the name of the organization
                                  that created the image
                                minLength: 1
                                type: string
                              sku:
                                description: |-
                                  SKU specifies an instance of an offer, such as a major release of a distribution.
                                  For example, 18.04-LTS, 2019-Datacenter
                                minLength: 1
                                type: string
                            required:
                            - offer
                            - publisher
                            - sku
                            type: object
                          resourceGroup:
                            description: ResourceGroup specifies the resource group
                              containing the private compute gallery.
                            type: string
                          subscriptionID:
                            description: SubscriptionID is the identifier of the subscription
                              that contains the private compute gallery.
                            type: string
                          version:
                            description: |-
                              Version specifies the version of the marketplace image. The allowed formats
                              are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                              Specify 'latest' to use the latest version of an image available at deploy time.
                              Even if you use 'latest', the VM image will not automatically update after deploy
                              time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - gallery
                        - name
                        - version
                        type: object
                      id:
                        description: ID specifies an image to use by ID
                        type: string
                      marketplace:
                        description: Marketplace specifies an image to use from the
                          Azure Marketplace
                        properties:
                          offer:
                            description: |-
                              Offer specifies the name of a group of related images created by the publisher.
                              For example, UbuntuServer, WindowsServer
                            minLength: 1
                            type: string
                          publisher:
                            description: Publisher is the name of the organization
                              that created the image
                            minLength: 1
                            type: string
                          sku:
                            description: |-
                              SKU specifies an instance of an offer, such as a major release of a distribution.
                              For example, 18.04-LTS, 2019-Datacenter
                            minLength: 1
                            type: string
                          thirdPartyImage:
                            default: false
                            description: |-
                              ThirdPartyImage indicates the image is published by a third party publisher and a Plan
                              will be generated for it.
                            type: boolean
                          version:
                            description: |-
                              Version specifies the version of an image sku. The allowed formats
                              are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                              Specify 'latest' to use the latest version of an image available at deploy time.
                              Even if you use 'latest', the VM image will not automatically update after deploy
                              time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      sharedGallery:
                        description: |-
                          SharedGallery specifies an image to use from an Azure Shared Image Gallery
                          Deprecated: use ComputeGallery instead.
                        properties:
                          gallery:
                            description: Gallery specifies the name of the shared
                              image gallery that contains the image
                            minLength: 1
                            type: string
                          name:
                            description: Name is the name of the image
                            minLength: 1
                            type: string
                          offer:
                            description: |-
                              Offer specifies the name of a group of related images created by the publisher.
                              For example, UbuntuServer, WindowsServer
                              This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                              This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                            type: string
                          publisher:
                            description: |-
                              Publisher is the name of the organization that created the image.
                              This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                              This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                            type: string
                          resourceGroup:
                            description: ResourceGroup specifies the resource group
                              containing the shared image gallery
                            minLength: 1
                            type: string
                          sku:
                            description: |-
                              SKU specifies an instance of an offer, such as a major release of a distribution.
                              For example, 18.04-LTS, 2019-Datacenter
                              This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                              This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                            type: string
                          subscriptionID:
                            description: SubscriptionID is the identifier of the subscription
                              that contains the shared image gallery
                            minLength: 1
                            type: string
                          version:
                            description: |-
                              Version specifies the version of the marketplace image. The allowed formats
                              are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                              Specify 'latest' to use the latest version of an image available at deploy time.
                              Even if you use 'latest', the VM image will not automatically update after deploy
                              time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - gallery
                        - name
                        - resourceGroup
                        - subscriptionID
                        - version
                        type: object
                    type: object
                  networkInterfaces:
                    description: |-
                      NetworkInterfaces specifies a list of network interface configurations.
                      If left unspecified, the VM will get a single network interface with a
                      single IPConfig in the subnet specified in the cluster's node subnet field.
                      The primary interface will be the first networkInterface specified (index 0) in the list.
                    items:
                      description: NetworkInterface defines a network interface.
                      properties:
                        acceleratedNetworking:
                          description: |-
                            AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
                            whether the requested VMSize supports accelerated networking.
                            If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                          type: boolean
                        privateIPConfigs:
                          description: |-
                            PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
                            Defaults to 1 if not specified.
                          type: integer
                        subnetName:
                          description: SubnetName specifies the subnet in which the
                            new network interface will be placed.
                          type: string
                      type: object
                    type: array
                  osDisk:
                    description: OSDisk contains the operating system disk information
                      for a Virtual Machine
                    properties:
                      cachingType:
                        description: CachingType specifies the caching requirements.
                        enum:
                        - None
                        - ReadOnly
                        - ReadWrite
                        type: string
                      diffDiskSettings:
                        description: DiffDiskSettings describe ephemeral disk settings
                          for the os disk.
                        properties:
                          option:
                            description: |-
                              Option enables ephemeral OS when set to "Local"
                              See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
                            enum:
                            - Local
                            type: string
                        required:
                        - option
                        type: object
                      diskSizeGB:
                        description: |-
                          DiskSizeGB is the size in GB to assign to the OS disk.
                          Will have a default of 30GB if not provided
                        format: int32
                        type: integer
                      managedDisk:
                        description: ManagedDisk specifies the Managed Disk parameters
                          for the OS disk.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSet specifies the customer-managed
                              disk encryption set resource id for the managed disk.
                            properties:
                              id:
                                description: ID defines resourceID for diskEncryptionSet
                                  resource. It must be in the same subscription
                                type: string
                            type: object
                          securityProfile:
                            description: SecurityProfile specifies the security profile
                              for the managed disk.
                            properties:
                              diskEncryptionSet:
                                description: |-
                                  DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                  managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                  VMGuest blob.
                                properties:
                                  id:
                                    description: ID defines resourceID for diskEncryptionSet
                                      resource. It must be in the same subscription
                                    type: string
                                type: object
                              securityEncryptionType:
                                description: |-
                                  SecurityEncryptionType specifies the encryption type of the managed disk.
                                  It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                  blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                  When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                  When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                  VirtualizedTrustedPlatformModule should be set to Enabled.
                                  It can be set only for Confidential VMs.
                                enum:
                                - VMGuestStateOnly
                                - DiskWithVMGuestState
                                type: string
                            type: object
                          storageAccountType:
                            type: string
                        type: object
                      osType:
                        type: string
                    required:
                    - osType
                    type: object
                  securityProfile:
                    description: SecurityProfile specifies the Security profile settings
                      for a virtual machine.
                    properties:
                      encryptionAtHost:
                        description: |-
                          This field indicates whether Host Encryption should be enabled
                          or disabled for a virtual machine or virtual machine scale set.
                          This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
                          Default is disabled.
                        type: boolean
                      securityType:
                        description: |-
                          SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
                          enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
                        enum:
                        - ConfidentialVM
                        - TrustedLaunch
                        type: string
                      uefiSettings:
                        description: UefiSettings specifies the security settings
                          like secure boot and vTPM used while creating the virtual
                          machine.
                        properties:
                          secureBootEnabled:
                            description: |-
                              SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
                              Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
                              If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                            type: boolean
                          vTpmEnabled:
                            description: |-
                              VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
                              When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
                              The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
                              This is required to be set to Enabled if SecurityEncryptionType is defined.
                              If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                            type: boolean
                        type: object
                    type: object
                  spotVMOptions:
                    description: SpotVMOptions allows the ability to specify the Machine
                      should use a Spot VM
                    properties:
                      evictionPolicy:
                        description: EvictionPolicy defines the behavior of the virtual
                          machine when it is evicted. It can be either Delete or Deallocate.
                        enum:
                        - Deallocate
                        - Delete
                        type: string
                      maxPrice:
                        anyOf:
                        - type: integer
                        - type: string
                        description: MaxPrice defines the maximum price the user is
                          willing to pay for Spot VM instances
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  sshPublicKey:
                    description: |-
                      SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
                      Refer to documentation on how to set up SSH access on Windows instances.
                    type: string
                  subnetName:
                    description: 'Deprecated: SubnetName should be set in the networkInterfaces
                      field.'
                    type: string
                  terminateNotificationTimeout:
                    description: |-
                      TerminateNotificationTimeout enables or disables VMSS scheduled events termination notification with specified timeout
                      allowed values are between 5 and 15 (mins)
                    type: integer
                  vmExtensions:
                    description: VMExtensions specifies a list of extensions to be
                      added to the scale set.
                    items:
                      description: VMExtension specifies the parameters for a custom
                        VM extension.
                      properties:
                        name:
                          description: Name is the name of the extension.
                          type: string
                        protectedSettings:
                          additionalProperties:
                            type: string
                          description: ProtectedSettings is a JSON formatted protected
                            settings for the extension.
                          type: object
                        publisher:
                          description: Publisher is the name of the extension handler
                            publisher.
                          type: string
                        settings:
                          additionalProperties:
                            type: string
                          description: Settings is a JSON formatted public settings
                            for the extension.
                          type: object
                        version:
                          description: Version specifies the version of the script
                            handler.
                          type: string
                      required:
                      - name
                      - publisher
                      - version
                      type: object
                    type: array
                  vmSize:
                    description: |-
                      VMSize is the size of the Virtual Machine to build.
                      See https://learn.microsoft.com/rest/api/compute/virtualmachines/createorupdate#virtualmachinesizetypes
                    type: string
                required:
                - osDisk
                - vmSize
                type: object
              userAssignedIdentities:
                description: |-
                  UserAssignedIdentities is a list of standalone Azure identities provided by the user
                  The lifecycle of a user-assigned identity is managed separately from the lifecycle of
                  the AzureMachinePool.
                  See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                items:
                  description: |-
                    UserAssignedIdentity defines the user-assigned identities provided
                    by the user to be assigned to Azure resources.
                  properties:
                    providerID:
                      description: |-
                        ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
                        'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
                      type: string
                  required:
                  - providerID
                  type: object
                type: array
              zoneBalance:
                description: ZoneBalane dictates whether to force strictly even Virtual
                  Machine distribution cross x-zones in case there is zone outage.
                type: boolean
            required:
            - location
            - template
            type: object
          status:
            description: AzureMachinePoolStatus defines the observed state of AzureMachinePool.
            properties:
              conditions:
                description: Conditions defines current service state of the AzureMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the MachinePool and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the MachinePool's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the MachinePool and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the MachinePool's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in the
                  controller's output.
                type: string
              image:
                description: |-
                  Image is the current image used in the AzureMachinePool. When the spec image is nil, this image is populated
                  with the details of the defaulted Azure Marketplace "capi" offer.
                properties:
                  computeGallery:
                    description: ComputeGallery specifies an image to use from the
                      Azure Compute Gallery
                    properties:
                      gallery:
                        description: Gallery specifies the name of the compute image
                          gallery that contains the image
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the image
                        minLength: 1
                        type: string
                      plan:
                        description: Plan contains plan information.
                        properties:
                          offer:
                            description: |-
                              Offer specifies the name of a group of related images created by the publisher.
                              For example, UbuntuServer, WindowsServer
                            minLength: 1
                            type: string
                          publisher:
                            description: Publisher is the name of the organization
                              that created the image
                            minLength: 1
                            type: string
                          sku:
                            description: |-
                              SKU specifies an instance of an offer, such as a major release of a distribution.
                              For example, 18.04-LTS, 2019-Datacenter
                            minLength: 1
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        type: object
                      resourceGroup:
                        description: ResourceGroup specifies the resource group containing
                          the private compute gallery.
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the identifier of the subscription
                          that contains the private compute gallery.
                        type: string
                      version:
                        description: |-
                          Version specifies the version of the marketplace image. The allowed formats
                          are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                          Specify 'latest' to use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically update after deploy
                          time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - gallery
                    - name
                    - version
                    type: object
                  id:
                    description: ID specifies an image to use by ID
                    type: string
                  marketplace:
                    description: Marketplace specifies an image to use from the Azure
                      Marketplace
                    properties:
                      offer:
                        description: |-
                          Offer specifies the name of a group of related images created by the publisher.
                          For example, UbuntuServer, WindowsServer
                        minLength: 1
                        type: string
                      publisher:
                        description: Publisher is the name of the organization that
                          created the image
                        minLength: 1
                        type: string
                      sku:
                        description: |-
                          SKU specifies an instance of an offer, such as a major release of a distribution.
                          For example, 18.04-LTS, 2019-Datacenter
                        minLength: 1
                        type: string
                      thirdPartyImage:
                        default: false
                        description: |-
                          ThirdPartyImage indicates the image is published by a third party publisher and a Plan
                          will be generated for it.
                        type: boolean
                      version:
                        description: |-
                          Version specifies the version of an image sku. The allowed formats
                          are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                          Specify 'latest' to use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically update after deploy
                          time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - offer
                    - publisher
                    - sku
                    - version
                    type: object
                  sharedGallery:
                    description: |-
                      SharedGallery specifies an image to use from an Azure Shared Image Gallery
                      Deprecated: use ComputeGallery instead.
                    properties:
                      gallery:
                        description: Gallery specifies the name of the shared image
                          gallery that contains the image
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the image
                        minLength: 1
                        type: string
                      offer:
                        description: |-
                          Offer specifies the name of a group of related images created by the publisher.
                          For example, UbuntuServer, WindowsServer
                          This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                          This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                        type: string
                      publisher:
                        description: |-
                          Publisher is the name of the organization that created the image.
                          This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                          This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                        type: string
                      resourceGroup:
                        description: ResourceGroup specifies the resource group containing
                          the shared image gallery
                        minLength: 1
                        type: string
                      sku:
                        description: |-
                          SKU specifies an instance of an offer, such as a major release of a distribution.
                          For example, 18.04-LTS, 2019-Datacenter
                          This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                          This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the identifier of the subscription
                          that contains the shared image gallery
                        minLength: 1
                        type: string
                      version:
                        description: |-
                          Version specifies the version of the marketplace image. The allowed formats
                          are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                          Specify 'latest' to use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically update after deploy
                          time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - gallery
                    - name
                    - resourceGroup
                    - subscriptionID
                    - version
                    type: object
                type: object
              infrastructureMachineKind:
                description: InfrastructureMachineKind is the kind of the infrastructure
                  resources behind MachinePool Machines.
                type: string
              instances:
                description: Instances is the VM instance status for each VM in the
                  VMSS
                items:
                  description: AzureMachinePoolInstanceStatus provides status information
                    for each instance in the VMSS.
                  properties:
                    instanceID:
                      description: InstanceID is the identification of the Machine
                        Instance within the VMSS
                      type: string
                    instanceName:
                      description: InstanceName is the name of the Machine Instance
                        within the VMSS
                      type: string
                    latestModelApplied:
                      description: |-
                        LatestModelApplied indicates the instance is running the most up-to-date VMSS model. A VMSS model describes
                        the image version the VM is running. If the instance is not running the latest model, it means the instance
                        may not be running the version of Kubernetes the Machine Pool has specified and needs to be updated.
                      type: boolean
                    providerID:
                      description: ProviderID is the provider identification of the
                        VMSS Instance
                      type: string
                    provisioningState:
                      description: ProvisioningState is the provisioning state of
                        the Azure virtual machine instance.
                      type: string
                    version:
                      description: Version defines the Kubernetes version for the
                        VM Instance
                      type: string
                  required:
                  - latestModelApplied
                  type: object
                type: array
              longRunningOperationStates:
                description: |-
                  LongRunningOperationStates saves the state for Azure long-running operations so they can be continued on the
                  next reconciliation loop.
                items:
                  description: Future contains the data needed for an Azure long-running
                    operation to continue across reconcile loops.
                  properties:
                    data:
                      description: Data is the base64 url encoded json Azure AutoRest
                        Future.
                      type: string
                    name:
                      description: |-
                        Name is the name of the Azure resource.
                        Together with the service name, this forms the unique identifier for the future.
                      type: string
                    resourceGroup:
                      description: ResourceGroup is the Azure resource group for the
                        resource.
                      type: string
                    serviceName:
                      description: |-
                        ServiceName is the name of the Azure service.
                        Together with the name of the resource, this forms the unique identifier for the future.
                      type: string
                    type:
                      description: Type describes the type of future, such as update,
                        create, delete, etc.
                      type: string
                  required:
                  - data
                  - name
                  - serviceName
                  - type
                  type: object
                type: array
              provisioningState:
                description: ProvisioningState is the provisioning state of the Azure
                  virtual machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
              version:
                description: Version is the Kubernetes version for the current VMSS
                  model
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremanagedmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedMachinePool
    listKind: AzureManagedMachinePoolList
    plural: azuremanagedmachinepools
    shortNames:
    - ammp
    singular: azuremanagedmachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AzureManagedMachinePool belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      priority: 1
      type: string
    - description: Time duration since creation of this AzureManagedMachinePool
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.mode
      name: Mode
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedMachinePool is the Schema for the azuremanagedmachinepools
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedMachinePoolSpec defines the desired state of
              AzureManagedMachinePool.
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to Azure resources managed by the
                  Azure provider, in addition to the ones added by default.
                type: object
              asoManagedClustersAgentPoolPatches:
                description: |-
                  ASOManagedClustersAgentPoolPatches defines JSON merge patches to be applied to the generated ASO ManagedClustersAgentPool resource.
                  WARNING: This is meant to be used sparingly to enable features for development and testing that are not
                  otherwise represented in the CAPZ API. Misconfiguration that conflicts with CAPZ's normal mode of
                  operation is possible.
                items:
                  type: string
                type: array
              availabilityZones:
                description: |-
                  AvailabilityZones - Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
                  Immutable.
                items:
                  type: string
                type: array
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost indicates whether host encryption is enabled on the node pool.
                  Immutable.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/en-us/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS indicates whether FIPS is enabled on the node pool.
                  Immutable.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP controls whether or not nodes in the pool each have a public IP address.
                  Immutable.
                type: boolean
              enableUltraSSD:
                description: |-
                  EnableUltraSSD enables the storage type UltraSSD_LRS for the agent pool.
                  Immutable.
                type: boolean
              kubeletConfig:
                description: |-
                  KubeletConfig specifies the kubelet configurations for nodes.
                  Immutable.
                properties:
                  allowedUnsafeSysctls:
                    description: |-
                      AllowedUnsafeSysctls - Allowlist of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
                      Valid values match `kernel.shm*`, `kernel.msg*`, `kernel.sem`, `fs.mqueue.*`, or `net.*`.
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: ContainerLogMaxFiles - The maximum number of container
                      log files that can be present for a container. The number must
                      be ≥ 2.
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    description: ContainerLogMaxSizeMB - The maximum size in MB of
                      a container log file before it is rotated.
                    type: integer
                  cpuCfsQuota:
                    description: CPUCfsQuota - Enable CPU CFS quota enforcement for
                      containers that specify CPU limits.
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CPUCfsQuotaPeriod - Sets CPU CFS quota period value.
                      Must end in "ms", e.g. "100ms"
                    type: string
                  cpuManagerPolicy:
                    description: CPUManagerPolicy - CPU Manager policy to use.
                    enum:
                    - none
                    - static
                    type: string
                  failSwapOn:
                    description: FailSwapOn - If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.
                    type: boolean
                  imageGcHighThreshold:
                    description: |-
                      ImageGcHighThreshold - The percent of disk usage after which image garbage collection is always run.
                      Valid values are 0-100 (inclusive).
                    maximum: 100
                    minimum: 0
                    type: integer
                  imageGcLowThreshold:
                    description: |-
                      ImageGcLowThreshold - The percent of disk usage before which image garbage collection is never run.
                      Valid values are 0-100 (inclusive) and must be less than `imageGcHighThreshold`.
                    maximum: 100
                    minimum: 0
                    type: integer
                  podMaxPids:
                    description: |-
                      PodMaxPids - The maximum number of processes per pod.
                      Must not exceed kernel PID limit. -1 disables the limit.
                    minimum: -1
                    type: integer
                  topologyManagerPolicy:
                    description: TopologyManagerPolicy - Topology Manager policy to
                      use.
                    enum:
                    - none
                    - best-effort
                    - restricted
                    - single-numa-node
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType specifies the kubelet disk type. Default to OS. Possible values include: 'OS', 'Temporary'.
                  Requires Microsoft.ContainerService/KubeletDisk preview feature to be set.
                  Immutable.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/rest/api/aks/agent-pools/create-or-update?tabs=HTTP#kubeletdisktype
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: |-
                  LinuxOSConfig specifies the custom Linux OS settings and configurations.
                  Immutable.
                properties:
                  swapFileSizeMB:
                    description: |-
                      SwapFileSizeMB specifies size in MB of a swap file will be created on the agent nodes from this node pool.
                      Max value of SwapFileSizeMB should be the size of temporary disk(/dev/sdb).
                      Must be at least 1.
                      See also [AKS doc].


                      [AKS doc]: https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview#temporary-disk
                    minimum: 1
                    type: integer
                  sysctls:
                    description: Sysctl specifies the settings for Linux agent nodes.
                    properties:
                      fsAioMaxNr:
                        description: |-
                          FsAioMaxNr specifies the maximum number of system-wide asynchronous io requests.
                          Valid values are 65536-6553500 (inclusive).
                          Maps to fs.aio-max-nr.
                        maximum: 6553500
                        minimum: 65536
                        type: integer
                      fsFileMax:
                        description: |-
                          FsFileMax specifies the max number of file-handles that the Linux kernel will allocate, by increasing increases the maximum number of open files permitted.
                          Valid values are 8192-12000500 (inclusive).
                          Maps to fs.file-max.
                        maximum: 12000500
                        minimum: 8192
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: |-
                          FsInotifyMaxUserWatches specifies the number of file watches allowed by the system. Each watch is roughly 90 bytes on a 32-bit kernel, and roughly 160 bytes on a 64-bit kernel.
                          Valid values are 781250-2097152 (inclusive).
                          Maps to fs.inotify.max_user_watches.
                        maximum: 2097152
                        minimum: 781250
                        type: integer
                      fsNrOpen:
                        description: |-
                          FsNrOpen specifies the maximum number of file-handles a process can allocate.
                          Valid values are 8192-20000500 (inclusive).
                          Maps to fs.nr_open.
                        maximum: 20000500
                        minimum: 8192
                        type: integer
                      kernelThreadsMax:
                        description: |-
                          KernelThreadsMax specifies the maximum number of all threads that can be created.
                          Valid values are 20-513785 (inclusive).
                          Maps to kernel.threads-max.
                        maximum: 513785
                        minimum: 20
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: |-
                          NetCoreNetdevMaxBacklog specifies maximum number of packets, queued on the INPUT side, when the interface receives packets faster than kernel can process them.
                          Valid values are 1000-3240000 (inclusive).
                          Maps to net.core.netdev_max_backlog.
                        maximum: 3240000
                        minimum: 1000
                        type: integer
                      netCoreOptmemMax:
                        description: |-
                          NetCoreOptmemMax specifies the maximum ancillary buffer size (option memory buffer) allowed per socket.
                          Socket option memory is used in a few cases to store extra structures relating to usage of the socket.
                          Valid values are 20480-4194304 (inclusive).
                          Maps to net.core.optmem_max.
                        maximum: 4194304
                        minimum: 20480
                        type: integer
                      netCoreRmemDefault:
                        description: |-
                          NetCoreRmemDefault specifies the default receive socket buffer size in bytes.
                          Valid values are 212992-134217728 (inclusive).
                          Maps to net.core.rmem_default.
                        maximum: 134217728
                        minimum: 212992
                        type: integer
                      netCoreRmemMax:
                        description: |-
                          NetCoreRmemMax specifies the maximum receive socket buffer size in bytes.
                          Valid values are 212992-134217728 (inclusive).
                          Maps to net.core.rmem_max.
                        maximum: 134217728
                        minimum: 212992
                        type: integer
                      netCoreSomaxconn:
                        description: |-
                          NetCoreSomaxconn specifies maximum number of connection requests that can be queued for any given listening socket.
                          An upper limit for the value of the backlog parameter passed to the listen(2)(https://man7.org/linux/man-pages/man2/listen.2.html) function.
                          If the backlog argument is greater than the somaxconn, then it's silently truncated to this limit.
                          Valid values are 4096-3240000 (inclusive).
                          Maps to net.core.somaxconn.
                        maximum: 3240000
                        minimum: 4096
                        type: integer
                      netCoreWmemDefault:
                        description: |-
                          NetCoreWmemDefault specifies the default send socket buffer size in bytes.
                          Valid values are 212992-134217728 (inclusive).
                          Maps to net.core.wmem_default.
                        maximum: 134217728
                        minimum: 212992
                        type: integer
                      netCoreWmemMax:
                        description: |-
                          NetCoreWmemMax specifies the maximum send socket buffer size in bytes.
                          Valid values are 212992-134217728 (inclusive).
                          Maps to net.core.wmem_max.
                        maximum: 134217728
                        minimum: 212992
                        type: integer
                      netIpv4IPLocalPortRange:
                        description: |-
                          NetIpv4IPLocalPortRange is used by TCP and UDP traffic to choose the local port on the agent node.
                          PortRange should be specified in the format "first last".
                          First, being an integer, must be between [1024 - 60999].
                          Last, being an integer, must be between [32768 - 65000].
                          Maps to net.ipv4.ip_local_port_range.
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: |-
                          NetIpv4NeighDefaultGcThresh1 specifies the minimum number of entries that may be in the ARP cache.
                          Garbage collection won't be triggered if the number of entries is below this setting.
                          Valid values are 128-80000 (inclusive).
                          Maps to net.ipv4.neigh.default.gc_thresh1.
                        maximum: 80000
                        minimum: 128
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: |-
                          NetIpv4NeighDefaultGcThresh2 specifies soft maximum number of entries that may be in the ARP cache.
                          ARP garbage collection will be triggered about 5 seconds after reaching this soft maximum.
                          Valid values are 512-90000 (inclusive).
                          Maps to net.ipv4.neigh.default.gc_thresh2.
                        maximum: 90000
                        minimum: 512
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: |-
                          NetIpv4NeighDefaultGcThresh3 specified hard maximum number of entries in the ARP cache.
                          Valid values are 1024-100000 (inclusive).
                          Maps to net.ipv4.neigh.default.gc_thresh3.
                        maximum: 100000
                        minimum: 1024
                        type: integer
                      netIpv4TCPFinTimeout:
                        description: |-
                          NetIpv4TCPFinTimeout specifies the length of time an orphaned connection will remain in the FIN_WAIT_2 state before it's aborted at the local end.
                          Valid values are 5-120 (inclusive).
                          Maps to net.ipv4.tcp_fin_timeout.
                        maximum: 120
                        minimum: 5
                        type: integer
                      netIpv4TCPKeepaliveProbes:
                        description: |-
                          NetIpv4TCPKeepaliveProbes specifies the number of keepalive probes TCP sends out, until it decides the connection is broken.
                          Valid values are 1-15 (inclusive).
                          Maps to net.ipv4.tcp_keepalive_probes.
                        maximum: 15
                        minimum: 1
                        type: integer
                      netIpv4TCPKeepaliveTime:
                        description: |-
                          NetIpv4TCPKeepaliveTime specifies the rate at which TCP sends out a keepalive message when keepalive is enabled.
                          Valid values are 30-432000 (inclusive).
                          Maps to net.ipv4.tcp_keepalive_time.
                        maximum: 432000
                        minimum: 30
                        type: integer
                      netIpv4TCPMaxSynBacklog:
                        description: |-
                          NetIpv4TCPMaxSynBacklog specifies the maximum number of queued connection requests that have still not received an acknowledgment from the connecting client.
                          If this number is exceeded, the kernel will begin dropping requests.
                          Valid values are 128-3240000 (inclusive).
                          Maps to net.ipv4.tcp_max_syn_backlog.
                        maximum: 3240000
                        minimum: 128
                        type: integer
                      netIpv4TCPMaxTwBuckets:
                        description: |-
                          NetIpv4TCPMaxTwBuckets specifies maximal number of timewait sockets held by system simultaneously.
                          If this number is exceeded, time-wait socket is immediately destroyed and warning is printed.
                          Valid values are 8000-1440000 (inclusive).
                          Maps to net.ipv4.tcp_max_tw_buckets.
                        maximum: 1440000
                        minimum: 8000
                        type: integer
                      netIpv4TCPTwReuse:
                        description: |-
                          NetIpv4TCPTwReuse is used to allow to reuse TIME-WAIT sockets for new connections when it's safe from protocol viewpoint.
                          Maps to net.ipv4.tcp_tw_reuse.
                        type: boolean
                      netIpv4TCPkeepaliveIntvl:
                        description: |-
                          NetIpv4TCPkeepaliveIntvl specifies the frequency of the probes sent out.
                          Multiplied by tcpKeepaliveprobes, it makes up the time to kill a connection that isn't responding, after probes started.
                          Valid values are 1-75 (inclusive).
                          Maps to net.ipv4.tcp_keepalive_intvl.
                        maximum: 75
                        minimum: 1
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: |-
                          NetNetfilterNfConntrackBuckets specifies the size of hash table used by nf_conntrack module to record the established connection record of the TCP protocol.
                          Valid values are 65536-147456 (inclusive).
                          Maps to net.netfilter.nf_conntrack_buckets.
                        maximum: 147456
                        minimum: 65536
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: |-
                          NetNetfilterNfConntrackMax specifies the maximum number of connections supported by the nf_conntrack module or the size of connection tracking table.
                          Valid values are 131072-1048576 (inclusive).
                          Maps to net.netfilter.nf_conntrack_max.
                        maximum: 1048576
                        minimum: 131072
                        type: integer
                      vmMaxMapCount:
                        description: |-
                          VMMaxMapCount specifies the maximum number of memory map areas a process may have.
                          Maps to vm.max_map_count.
                          Valid values are 65530-262144 (inclusive).
                        maximum: 262144
                        minimum: 65530
                        type: integer
                      vmSwappiness:
                        description: |-
                          VMSwappiness specifies aggressiveness of the kernel in swapping memory pages.
                          Higher values will increase aggressiveness, lower values decrease the amount of swap.
                          Valid values are 0-100 (inclusive).
                          Maps to vm.swappiness.
                        maximum: 100
                        minimum: 0
                        type: integer
                      vmVfsCachePressure:
                        description: |-
                          VMVfsCachePressure specifies the percentage value that controls tendency of the kernel to reclaim the memory, which is used for caching of directory and inode objects.
                          Valid values are 1-500 (inclusive).
                          Maps to vm.vfs_cache_pressure.
                        maximum: 500
                        minimum: 1
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag specifies whether the kernel should make aggressive use of memory compaction to make more hugepages available.
                      See also [Linux doc].


                      [Linux doc]: https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge for more details.
                    enum:
                    - always
                    - defer
                    - defer+madvise
                    - madvise
                    - never
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled specifies various modes of Transparent Hugepages.
                      See also [Linux doc].


                      [Linux doc]: https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge for more details.
                    enum:
                    - always
                    - madvise
                    - never
                    type: string
                type: object
              maxPods:
                description: |-
                  MaxPods specifies the kubelet `--max-pods` configuration for the node pool.
                  Immutable.
                  See also [AKS doc], [K8s doc].


                  [AKS doc]: https://learn.microsoft.com/azure/aks/configure-azure-cni#configure-maximum---new-clusters
                  [K8s doc]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
                type: integer
              mode:
                description: 'Mode represents the mode of an agent pool. Possible
                  values include: System, User.'
                enum:
                - System
                - User
                type: string
              name:
                description: |-
                  Name is the name of the agent pool. If not specified, CAPZ uses the name of the CR as the agent pool name.
                  Immutable.
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: |-
                  Node labels represent the labels for all of the nodes present in node pool.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/azure/aks/use-labels
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID specifies the public IP prefix resource ID which VM nodes should use IPs from.
                  Immutable.
                type: string
              osDiskSizeGB:
                description: |-
                  OSDiskSizeGB is the disk size for every machine in this agent pool.
                  If you specify 0, it will apply the default osDisk size according to the vmSize specified.
                  Immutable.
                type: integer
              osDiskType:
                default: Managed
                description: |-
                  OsDiskType specifies the OS disk type for each node in the pool. Allowed values are 'Ephemeral' and 'Managed' (default).
                  Immutable.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/azure/aks/cluster-configuration#ephemeral-os
                enum:
                - Ephemeral
                - Managed
                type: string
              osType:
                description: |-
                  OSType specifies the virtual machine operating system. Default to Linux. Possible values include: 'Linux', 'Windows'.
                  'Windows' requires the AzureManagedControlPlane's `spec.networkPlugin` to be `azure`.
                  Immutable.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/rest/api/aks/agent-pools/create-or-update?tabs=HTTP#ostype
                enum:
                - Linux
                - Windows
                type: string
              providerIDList:
                description: ProviderIDList is the unique identifier as specified
                  by the cloud provider.
                items:
                  type: string
                type: array
              scaleDownMode:
                default: Delete
                description: 'ScaleDownMode affects the cluster autoscaler behavior.
                  Default to Delete. Possible values include: ''Deallocate'', ''Delete'''
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: |-
                  ScaleSetPriority specifies the ScaleSetPriority value. Default to Regular. Possible values include: 'Regular', 'Spot'
                  Immutable.
                enum:
                - Regular
                - Spot
                type: string
              scaling:
                description: Scaling specifies the autoscaling parameters for the
                  node pool.
                properties:
                  maxSize:
                    description: MaxSize is the maximum number of nodes for auto-scaling.
                    type: integer
                  minSize:
                    description: MinSize is the minimum number of nodes for auto-scaling.
                    type: integer
                type: object
              sku:
                description: |-
                  SKU is the size of the VMs in the node pool.
                  Immutable.
                type: string
              spotMaxPrice:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  SpotMaxPrice defines max price to pay for spot instance. Possible values are any decimal value greater than zero or -1.
                  If you set the max price to be -1, the VM won't be evicted based on price. The price for the VM will be the current price
                  for spot or the price for a standard VM, which ever is less, as long as there's capacity and quota available.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              subnetName:
                description: |-
                  SubnetName specifies the Subnet where the MachinePool will be placed
                  Immutable.
                type: string
              taints:
                description: |-
                  Taints specifies the taints for nodes present in this agent pool.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/azure/aks/use-multiple-node-pools#setting-node-pool-taints
                items:
                  description: Taint represents a Kubernetes taint.
                  properties:
                    effect:
                      description: Effect specifies the effect for the taint
                      enum:
                      - NoSchedule
                      - NoExecute
                      - PreferNoSchedule
                      type: string
                    key:
                      description: Key is the key of the taint
                      type: string
                    value:
                      description: Value is the value of the taint
                      type: string
                  required:
                  - effect
                  - key
                  - value
                  type: object
                type: array
            required:
            - mode
            - sku
            type: object
          status:
            description: AzureManagedMachinePoolStatus defines the observed state
              of AzureManagedMachinePool.
            properties:
              conditions:
                description: Conditions defines current service state of the AzureManagedControlPlane.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              errorMessage:
                description: |-
                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              errorReason:
                description: |-
                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              longRunningOperationStates:
                description: |-
                  LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
                  next reconciliation loop.
                items:
                  description: Future contains the data needed for an Azure long-running
                    operation to continue across reconcile loops.
                  properties:
                    data:
                      description: Data is the base64 url encoded json Azure AutoRest
                        Future.
                      type: string
                    name:
                      description: |-
                        Name is the name of the Azure resource.
                        Together with the service name, this forms the unique identifier for the future.
                      type: string
                    resourceGroup:
                      description: ResourceGroup is the Azure resource group for the
                        resource.
                      type: string
                    serviceName:
                      description: |-
                        ServiceName is the name of the Azure service.
                        Together with the name of the resource, this forms the unique identifier for the future.
                      type: string
                    type:
                      description: Type describes the type of future, such as update,
                        create, delete, etc.
                      type: string
                  required:
                  - data
                  - name
                  - serviceName
                  - type
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremanagedclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedCluster
    listKind: AzureManagedClusterList
    plural: azuremanagedclusters
    shortNames:
    - amc
    singular: azuremanagedcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AzureManagedCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    - description: Time duration since creation of this AzureManagedCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedCluster is the Schema for the azuremanagedclusters
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedClusterSpec defines the desired state of AzureManagedCluster.
            properties:
              controlPlaneEndpoint:
                description: |-
                  ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  Immutable, populated by the AKS API at create.
                  Because this field is programmatically set by CAPZ after resource creation, we define it as +optional
                  in the API schema to permit resource admission.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
            type: object
          status:
            description: AzureManagedClusterStatus defines the observed state of AzureManagedCluster.
            properties:
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremanagedcontrolplanes.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedControlPlane
    listKind: AzureManagedControlPlaneList
    plural: azuremanagedcontrolplanes
    shortNames:
    - amcp
    singular: azuremanagedcontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AzureManagedControlPlane belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      priority: 1
      type: string
    - description: Time duration since creation of this AzureManagedControlPlane
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedControlPlane is the Schema for the azuremanagedcontrolplanes
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedControlPlaneSpec defines the desired state of
              AzureManagedControlPlane.
            properties:
              aadProfile:
                description: AadProfile is Azure Active Directory configuration to
                  integrate with AKS for aad authentication.
                properties:
                  adminGroupObjectIDs:
                    description: AdminGroupObjectIDs - AAD group object IDs that will
                      have admin role of the cluster.
                    items:
                      type: string
                    type: array
                  managed:
                    description: Managed - Whether to enable managed AAD.
                    type: boolean
                required:
                - adminGroupObjectIDs
                - managed
                type: object
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
                  ones added by default.
                type: object
              addonProfiles:
                description: AddonProfiles are the profiles of managed cluster add-on.
                items:
                  description: AddonProfile represents a managed cluster add-on.
                  properties:
                    config:
                      additionalProperties:
                        type: string
                      description: Config - Key-value pairs for configuring the add-on.
                      type: object
                    enabled:
                      description: Enabled - Whether the add-on is enabled or not.
                      type: boolean
                    name:
                      description: Name - The name of the managed cluster add-on.
                      type: string
                  required:
                  - enabled
                  - name
                  type: object
                type: array
              apiServerAccessProfile:
                description: |-
                  APIServerAccessProfile is the access profile for AKS API server.
                  Immutable except for `authorizedIPRanges`.
                properties:
                  authorizedIPRanges:
                    description: AuthorizedIPRanges - Authorized IP Ranges to kubernetes
                      API server.
                    items:
                      type: string
                    type: array
                  enablePrivateCluster:
                    description: EnablePrivateCluster indicates whether to create
                      the cluster as a private cluster or not.
                    type: boolean
                  enablePrivateClusterPublicFQDN:
                    description: EnablePrivateClusterPublicFQDN indicates whether
                      to create additional public FQDN for private cluster or not.
                    type: boolean
                  privateDNSZone:
                    description: PrivateDNSZone enables private dns zone mode for
                      private cluster.
                    type: string
                type: object
              asoManagedClusterPatches:
                description: |-
                  ASOManagedClusterPatches defines JSON merge patches to be applied to the generated ASO ManagedCluster resource.
                  WARNING: This is meant to be used sparingly to enable features for development and testing that are not
                  otherwise represented in the CAPZ API. Misconfiguration that conflicts with CAPZ's normal mode of
                  operation is possible.
                items:
                  type: string
                type: array
              autoUpgradeProfile:
                description: AutoUpgradeProfile defines the auto upgrade configuration.
                properties:
                  upgradeChannel:
                    description: UpgradeChannel determines the type of upgrade channel
                      for automatically upgrading the cluster.
                    enum:
                    - node-image
                    - none
                    - patch
                    - rapid
                    - stable
                    type: string
                type: object
              autoscalerProfile:
                description: AutoscalerProfile is the parameters to be applied to
                  the cluster-autoscaler when enabled
                properties:
                  balanceSimilarNodeGroups:
                    description: BalanceSimilarNodeGroups - Valid values are 'true'
                      and 'false'. The default is false.
                    enum:
                    - "true"
                    - "false"
                    type: string
                  expander:
                    description: Expander - If not specified, the default is 'random'.
                      See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
                      for more information.
                    enum:
                    - least-waste
                    - most-pods
                    - priority
                    - random
                    type: string
                  maxEmptyBulkDelete:
                    description: MaxEmptyBulkDelete - The default is 10.
                    type: string
                  maxGracefulTerminationSec:
                    description: MaxGracefulTerminationSec - The default is 600.
                    pattern: ^(\d+)$
                    type: string
                  maxNodeProvisionTime:
                    description: MaxNodeProvisionTime - The default is '15m'. Values
                      must be an integer followed by an 'm'. No unit of time other
                      than minutes (m) is supported.
                    pattern: ^(\d+)m$
                    type: string
                  maxTotalUnreadyPercentage:
                    description: MaxTotalUnreadyPercentage - The default is 45. The
                      maximum is 100 and the minimum is 0.
                    maxLength: 3
                    minLength: 1
                    pattern: ^(\d+)$
                    type: string
                  newPodScaleUpDelay:
                    description: NewPodScaleUpDelay - For scenarios like burst/batch
                      scale where you don't want CA to act before the kubernetes scheduler
                      could schedule all the pods, you can tell CA to ignore unscheduled
                      pods before they're a certain age. The default is '0s'. Values
                      must be an integer followed by a unit ('s' for seconds, 'm'
                      for minutes, 'h' for hours, etc).
                    type: string
                  okTotalUnreadyCount:
                    description: OkTotalUnreadyCount - This must be an integer. The
                      default is 3.
                    pattern: ^(\d+)$
                    type: string
                  scaleDownDelayAfterAdd:
                    description: ScaleDownDelayAfterAdd - The default is '10m'. Values
                      must be an integer followed by an 'm'. No unit of time other
                      than minutes (m) is supported.
                    pattern: ^(\d+)m$
                    type: string
                  scaleDownDelayAfterDelete:
                    description: ScaleDownDelayAfterDelete - The default is the scan-interval.
                      Values must be an integer followed by an 's'. No unit of time
                      other than seconds (s) is supported.
                    pattern: ^(\d+)s$
                    type: string
                  scaleDownDelayAfterFailure:
                    description: ScaleDownDelayAfterFailure - The default is '3m'.
                      Values must be an integer followed by an 'm'. No unit of time
                      other than minutes (m) is supported.
                    pattern: ^(\d+)m$
                    type: string
                  scaleDownUnneededTime:
                    description: ScaleDownUnneededTime - The default is '10m'. Values
                      must be an integer followed by an 'm'. No unit of time other
                      than minutes (m) is supported.
                    pattern: ^(\d+)m$
                    type: string
                  scaleDownUnreadyTime:
                    description: ScaleDownUnreadyTime - The default is '20m'. Values
                      must be an integer followed by an 'm'. No unit of time other
                      than minutes (m) is supported.
                    pattern: ^(\d+)m$
                    type: string
                  scaleDownUtilizationThreshold:
                    description: ScaleDownUtilizationThreshold - The default is '0.5'.
                    type: string
                  scanInterval:
                    description: ScanInterval - How often cluster is reevaluated for
                      scale up or down. The default is '10s'.
                    pattern: ^(\d+)s$
                    type: string
                  skipNodesWithLocalStorage:
                    description: SkipNodesWithLocalStorage - The default is false.
                    enum:
                    - "true"
                    - "false"
                    type: string
                  skipNodesWithSystemPods:
                    description: SkipNodesWithSystemPods - The default is true.
                    enum:
                    - "true"
                    - "false"
                    type: string
                type: object
              azureEnvironment:
                description: |-
                  AzureEnvironment is the name of the AzureCloud to be used.
                  The default value that would be used by most users is "AzurePublicCloud", other values are:
                  - ChinaCloud: "AzureChinaCloud"
                  - PublicCloud: "AzurePublicCloud"
                  - USGovernmentCloud: "AzureUSGovernmentCloud"


                  Note that values other than the default must also be accompanied by corresponding changes to the
                  aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
                  not support referring to multiple different clouds in a single installation. The following fields must
                  be defined in the Secret:
                  - AZURE_AUTHORITY_HOST
                  - AZURE_RESOURCE_MANAGER_ENDPOINT
                  - AZURE_RESOURCE_MANAGER_AUDIENCE


                  See the [ASO docs] for more details.


                  [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
                type: string
              controlPlaneEndpoint:
                description: |-
                  ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  Immutable, populated by the AKS API at create.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              disableLocalAccounts:
                description: DisableLocalAccounts disables getting static credentials
                  for this cluster when set. Expected to only be used for AAD clusters.
                type: boolean
              dnsPrefix:
                description: |-
                  DNSPrefix allows the user to customize dns prefix.
                  Immutable.
                type: string
              dnsServiceIP:
                description: |-
                  DNSServiceIP is an IP address assigned to the Kubernetes DNS service.
                  It must be within the Kubernetes service address range specified in serviceCidr.
                  Immutable.
                type: string
              enablePreviewFeatures:
                description: EnablePreviewFeatures enables preview features for the
                  cluster.
                type: boolean
              extensions:
                description: Extensions is a list of AKS extensions to be installed
                  on the cluster.
                items:
                  description: |-
                    AKSExtension represents the configuration for an AKS cluster extension.
                    See also [AKS doc].


                    [AKS doc]: https://learn.microsoft.com/en-us/azure/aks/cluster-extensions
                  properties:
                    aksAssignedIdentityType:
                      description: AKSAssignedIdentityType is the type of the AKS
                        assigned identity.
                      enum:
                      - SystemAssigned
                      - UserAssigned
                      type: string
                    autoUpgradeMinorVersion:
                      default: true
                      description: AutoUpgradeMinorVersion is a flag to note if this
                        extension participates in auto upgrade of minor version, or
                        not.
                      type: boolean
                    configurationSettings:
                      additionalProperties:
                        type: string
                      description: ConfigurationSettings are the name-value pairs
                        for configuring this extension.
                      type: object
                    extensionType:
                      description: |-
                        ExtensionType is the type of the Extension of which this resource is an instance.
                        It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
                      type: string
                    identity:
                      description: Identity is the identity type of the Extension
                        resource in an AKS cluster.
                      enum:
                      - SystemAssigned
                      type: string
                    name:
                      description: Name is the name of the extension.
                      type: string
                    plan:
                      description: Plan is the plan of the extension.
                      properties:
                        name:
                          description: Name is the user-defined name of the 3rd Party
                            Artifact that is being procured.
                          type: string
                        product:
                          description: Product is the name of the 3rd Party artifact
                            that is being procured.
                          type: string
                        promotionCode:
                          description: PromotionCode is a publisher-provided promotion
                            code as provisioned in Data Market for the said product/artifact.
                          type: string
                        publisher:
                          description: Publisher is the name of the publisher of the
                            3rd Party Artifact that is being bought.
                          type: string
                        version:
                          description: Version is the version of the plan.
                          type: string
                      type: object
                    releaseTrain:
                      description: |-
                        ReleaseTrain is the release train this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.)
                        This is only used if autoUpgradeMinorVersion is ‘true’.
                      type: string
                    scope:
                      description: Scope is the scope at which this extension is enabled.
                      properties:
                        releaseNamespace:
                          description: |-
                            ReleaseNamespace is the namespace where the extension Release must be placed, for a Cluster-scoped extension.
                            Required for Cluster-scoped extensions.
                          type: string
                        scopeType:
                          description: ScopeType is the scope of the extension. It
                            can be either Cluster or Namespace, but not both.
                          enum:
                          - Cluster
                          - Namespace
                          type: string
                        targetNamespace:
                          description: |-
                            TargetNamespace is the namespace where the extension will be created for a Namespace-scoped extension.
                            Required for Namespace-scoped extensions.
                          type: string
                      required:
                      - scopeType
                      type: object
                    version:
                      description: Version is the version of the extension.
                      type: string
                  required:
                  - extensionType
                  - name
                  type: object
                type: array
              fleetsMember:
                description: |-
                  FleetsMember is the spec for the fleet this cluster is a member of.
                  See also [AKS doc].


                  [AKS doc]: https://learn.microsoft.com/en-us/azure/templates/microsoft.containerservice/2023-03-15-preview/fleets/members
                properties:
                  group:
                    description: Group is the group this member belongs to for multi-cluster
                      update management.
                    type: string
                  managerName:
                    description: ManagerName is the name of the fleet manager.
                    type: string
                  managerResourceGroup:
                    description: ManagerResourceGroup is the resource group of the
                      fleet manager.
                    type: string
                  name:
                    description: Name is the name of the member.
                    type: string
                required:
                - managerName
                - managerResourceGroup
                type: object
              httpProxyConfig:
                description: |-
                  HTTPProxyConfig is the HTTP proxy configuration for the cluster.
                  Immutable.
                properties:
                  httpProxy:
                    description: HTTPProxy is the HTTP proxy server endpoint to use.
                    type: string
                  httpsProxy:
                    description: HTTPSProxy is the HTTPS proxy server endpoint to
                      use.
                    type: string
                  noProxy:
                    description: NoProxy indicates the endpoints that should not go
                      through proxy.
                    items:
                      type: string
                    type: array
                  trustedCa:
                    description: TrustedCA is the alternative CA cert to use for connecting
                      to proxy servers.
                    type: string
                type: object
              identity:
                description: Identity configuration used by the AKS control plane.
                properties:
                  type:
                    description: Type - The Identity type to use.
                    enum:
                    - SystemAssigned
                    - UserAssigned
                    type: string
                  userAssignedIdentityResourceID:
                    description: UserAssignedIdentityResourceID - Identity ARM resource
                      ID when using user-assigned identity.
                    type: string
                type: object
              identityRef:
                description: IdentityRef is a reference to a AzureClusterIdentity
                  to be used when reconciling this cluster
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              kubeletUserAssignedIdentity:
                description: |-
                  KubeletUserAssignedIdentity is the user-assigned identity for kubelet.
                  For authentication with Azure Container Registry.
                type: string
              loadBalancerProfile:
                description: LoadBalancerProfile is the profile of the cluster load
                  balancer.
                properties:
                  allocatedOutboundPorts:
                    description: AllocatedOutboundPorts - Desired number of allocated
                      SNAT ports per VM. Allowed values must be in the range of 0
                      to 64000 (inclusive). The default value is 0 which results in
                      Azure dynamically allocating ports.
                    type: integer
                  idleTimeoutInMinutes:
                    description: IdleTimeoutInMinutes - Desired outbound flow idle
                      timeout in minutes. Allowed values must be in the range of 4
                      to 120 (inclusive). The default value is 30 minutes.
                    type: integer
                  managedOutboundIPs:
                    description: ManagedOutboundIPs - Desired managed outbound IPs
                      for the cluster load balancer.
                    type: integer
                  outboundIPPrefixes:
                    description: OutboundIPPrefixes - Desired outbound IP Prefix resources
                      for the cluster load balancer.
                    items:
                      type: string
                    type: array
                  outboundIPs:
                    description: OutboundIPs - Desired outbound IP resources for the
                      cluster load balancer.
                    items:
                      type: string
                    type: array
                type: object
              loadBalancerSKU:
                default: Standard
                description: |-
                  LoadBalancerSKU is the SKU of the loadBalancer to be provisioned.
                  Immutable.
                enum:
                - Basic
                - Standard
                type: string
              location:
                description: 'Location is a string matching one of the canonical Azure
                  region names. Examples: "westus2", "eastus".'
                type: string
              machineTemplate:
                description: |-
                  MachineTemplate contains information about how machines
                  should be shaped when creating or updating a control plane.
                  For the AzureManagedControlPlaneTemplate, this field is used
                  only to fulfill the CAPI contract.
                type: object
              networkDataplane:
                description: NetworkDataplane is the dataplane used for building the
                  Kubernetes network.
                enum:
                - azure
                - cilium
                type: string
              networkPlugin:
                description: NetworkPlugin used for building Kubernetes network.
                enum:
                - azure
                - kubenet
                - none
                type: string
              networkPluginMode:
                description: |-
                  NetworkPluginMode is the mode the network plugin should use.
                  Allowed value is "overlay".
                enum:
                - overlay
                type: string
              networkPolicy:
                description: NetworkPolicy used for building Kubernetes network.
                enum:
                - azure
                - calico
                - cilium
                type: string
              nodeResourceGroupName:
                description: |-
                  NodeResourceGroupName is the name of the resource group
                  containing cluster IaaS resources. Will be populated to default
                  in webhook.
                  Immutable.
                type: string
              oidcIssuerProfile:
                description: OIDCIssuerProfile is the OIDC issuer profile of the Managed
                  Cluster.
                properties:
                  enabled:
                    description: Enabled is whether the OIDC issuer is enabled.
                    type: boolean
                type: object
              outboundType:
                description: Outbound configuration used by Nodes.
                enum:
                - loadBalancer
                - managedNATGateway
                - userAssignedNATGateway
                - userDefinedRouting
                type: string
              resourceGroupName:
                description: |-
                  ResourceGroupName is the name of the Azure resource group for this AKS Cluster.
                  Immutable.
                type: string
              securityProfile:
                description: SecurityProfile defines the security profile for cluster.
                properties:
                  azureKeyVaultKms:
                    description: AzureKeyVaultKms defines Azure Key Vault Management
                      Services Profile for the security profile.
                    properties:
                      enabled:
                        description: Enabled enables the Azure Key Vault key management
                          service. The default is false.
                        type: boolean
                      keyID:
                        description: |-
                          KeyID defines the Identifier of Azure Key Vault key.
                          When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier.
                        type: string
                      keyVaultNetworkAccess:
                        default: Public
                        description: |-
                          KeyVaultNetworkAccess defines the network access of key vault.
                          The possible values are Public and Private.
                          Public means the key vault allows public access from all networks.
                          Private means the key vault disables public access and enables private link. The default value is Public.
                        type: string
                      keyVaultResourceID:
                        description: KeyVaultResourceID is the Resource ID of key
                          vault. When keyVaultNetworkAccess is Private, this field
                          is required and must be a valid resource ID.
                        type: string
                    required:
                    - enabled
                    - keyID
                    type: object
                  defender:
                    description: Defender settings for the security profile.
                    properties:
                      logAnalyticsWorkspaceResourceID:
                        description: |-
                          LogAnalyticsWorkspaceResourceID is the ID of the Log Analytics workspace that has to be associated with Microsoft Defender.
                          When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID.
                        type: string
                      securityMonitoring:
                        description: SecurityMonitoring profile defines the Microsoft
                          Defender threat detection for Cloud settings for the security
                          profile.
                        properties:
                          enabled:
                            description: Enabled enables Defender threat detection
                            type: boolean
                        required:
                        - enabled
                        type: object
                    required:
                    - logAnalyticsWorkspaceResourceID
                    - securityMonitoring
                    type: object
                  imageCleaner:
                    description: ImageCleaner settings for the security profile.
                    properties:
                      enabled:
                        description: Enabled enables the Image Cleaner on AKS cluster.
                        type: boolean
                      intervalHours:
                        description: IntervalHours defines Image Cleaner scanning
                          interval in hours. Default value is 24 hours.
                        maximum: 2160
                        minimum: 24
                        type: integer
                    required:
                    - enabled
                    type: object
                  workloadIdentity:
                    description: Workloadidentity enables Kubernetes applications
                      to access Azure cloud resources securely with Azure AD. Ensure
                      to enable OIDC issuer while enabling Workload Identity
                    properties:
                      enabled:
                        description: Enabled enables the workload identity.
                        type: boolean
                    required:
                    - enabled
                    type: object
                type: object
              sku:
                description: SKU is the SKU of the AKS to be provisioned.
                properties:
                  tier:
                    description: Tier - Tier of an AKS cluster.
                    enum:
                    - Free
                    - Paid
                    - Standard
                    type: string
                required:
                - tier
                type: object
              sshPublicKey:
                description: |-
                  SSHPublicKey is a string literal containing an ssh public key base64 encoded.
                  Use empty string to autogenerate new key. Use null value to not set key.
                  Immutable.
                type: string
              subscriptionID:
                description: SubscriptionID is the GUID of the Azure subscription
                  that owns this cluster.
                type: string
              version:
                description: Version defines the desired Kubernetes version.
                minLength: 2
                type: string
              virtualNetwork:
                description: VirtualNetwork describes the virtual network for the
                  AKS cluster. It will be created if it does not already exist.
                properties:
                  cidrBlock:
                    type: string
                  name:
                    description: Name is the name of the virtual network.
                    type: string
                  resourceGroup:
                    description: ResourceGroup is the name of the Azure resource group
                      for the VNet and Subnet.
                    type: string
                  subnet:
                    description: ManagedControlPlaneSubnet describes a subnet for
                      an AKS cluster.
                    properties:
                      cidrBlock:
                        type: string
                      name:
                        type: string
                      privateEndpoints:
                        description: PrivateEndpoints is a slice of Virtual Network
                          private endpoints to create for the subnets.
                        items:
                          description: PrivateEndpointSpec configures an Azure Private
                            Endpoint.
                          properties:
                            applicationSecurityGroups:
                              description: ApplicationSecurityGroups specifies the
                                Application security group in which the private endpoint
                                IP configuration is included.
                              items:
                                type: string
                              type: array
                            customNetworkInterfaceName:
                              description: CustomNetworkInterfaceName specifies the
                                network interface name associated with the private
                                endpoint.
                              type: string
                            location:
                              description: Location specifies the region to create
                                the private endpoint.
                              type: string
                            manualApproval:
                              description: |-
                                ManualApproval specifies if the connection approval needs to be done manually or not.
                                Set it true when the network admin does not have access to approve connections to the remote resource.
                                Defaults to false.
                              type: boolean
                            name:
                              description: Name specifies the name of the private
                                endpoint.
                              type: string
                            privateIPAddresses:
                              description: |-
                                PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                They have to be part of the subnet where the private endpoint is linked.
                              items:
                                type: string
                              type: array
                            privateLinkServiceConnections:
                              description: PrivateLinkServiceConnections specifies
                                Private Link Service Connections of the private endpoint.
                              items:
                                description: PrivateLinkServiceConnection defines
                                  the specification for a private link service connection
                                  associated with a private endpoint.
                                properties:
                                  groupIDs:
                                    description: GroupIDs specifies the ID(s) of the
                                      group(s) obtained from the remote resource that
                                      this private endpoint should connect to.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: Name specifies the name of the private
                                      link service.
                                    type: string
                                  privateLinkServiceID:
                                    description: PrivateLinkServiceID specifies the
                                      resource ID of the private link service.
                                    type: string
                                  requestMessage:
                                    description: RequestMessage specifies a message
                                      passed to the owner of the remote resource with
                                      the private endpoint connection request.
                                    maxLength: 140
                                    type: string
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      serviceEndpoints:
                        description: ServiceEndpoints is a slice of Virtual Network
                          service endpoints to enable for the subnets.
                        items:
                          description: ServiceEndpointSpec configures an Azure Service
                            Endpoint.
                          properties:
                            locations:
                              items:
                                type: string
                              type: array
                            service:
                              type: string
                          required:
                          - locations
                          - service
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - service
                        x-kubernetes-list-type: map
                    required:
                    - cidrBlock
                    - name
                    type: object
                required:
                - cidrBlock
                - name
                type: object
            required:
            - identityRef
            - location
            - resourceGroupName
            - version
            type: object
          status:
            description: AzureManagedControlPlaneStatus defines the observed state
              of AzureManagedControlPlane.
            properties:
              autoUpgradeVersion:
                description: AutoUpgradeVersion is the Kubernetes version populated
                  after auto-upgrade based on the upgrade channel.
                minLength: 2
                type: string
              conditions:
                description: Conditions defines current service state of the AzureManagedControlPlane.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initialized:
                description: |-
                  Initialized is true when the control plane is available for initial contact.
                  This may occur before the control plane is fully ready.
                  In the AzureManagedControlPlane implementation, these are identical.
                type: boolean
              longRunningOperationStates:
                description: |-
                  LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
                  next reconciliation loop.
                items:
                  description: Future contains the data needed for an Azure long-running
                    operation to continue across reconcile loops.
                  properties:
                    data:
                      description: Data is the base64 url encoded json Azure AutoRest
                        Future.
                      type: string
                    name:
                      description: |-
                        Name is the name of the Azure resource.
                        Together with the service name, this forms the unique identifier for the future.
                      type: string
                    resourceGroup:
                      description: ResourceGroup is the Azure resource group for the
                        resource.
                      type: string
                    serviceName:
                      description: |-
                        ServiceName is the name of the Azure service.
                        Together with the name of the resource, this forms the unique identifier for the future.
                      type: string
                    type:
                      description: Type describes the type of future, such as update,
                        create, delete, etc.
                      type: string
                  required:
                  - data
                  - name
                  - serviceName
                  - type
                  type: object
                type: array
              oidcIssuerProfile:
                description: OIDCIssuerProfile is the OIDC issuer profile of the Managed
                  Cluster.
                properties:
                  issuerURL:
                    description: IssuerURL is the OIDC issuer url of the Managed Cluster.
                    type: string
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              version:
                description: Version defines the Kubernetes version for the control
                  plane instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremachinepoolmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachinePoolMachine
    listKind: AzureMachinePoolMachineList
    plural: azuremachinepoolmachines
    shortNames:
    - ampm
    singular: azuremachinepoolmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Kubernetes version
      jsonPath: .status.version
      name: Version
      type: string
    - description: Flag indicating infrastructure is successfully provisioned
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VMSS VM provisioning state
      jsonPath: .status.provisioningState
      name: State
      type: string
    - description: Cluster to which this AzureMachinePoolMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: Azure VMSS VM ID
      jsonPath: .spec.providerID
      name: VMSS VM ID
      priority: 1
      type: string
    - description: Time duration since creation of this AzureMachinePoolMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureMachinePoolMachine is the Schema for the azuremachinepoolmachines
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachinePoolMachineSpec defines the desired state of
              AzureMachinePoolMachine.
            properties:
              instanceID:
                description: InstanceID is the identification of the Machine Instance
                  within the VMSS
                type: string
              providerID:
                description: ProviderID is the identification ID of the Virtual Machine
                  Scale Set
                type: string
            required:
            - providerID
            type: object
          status:
            description: AzureMachinePoolMachineStatus defines the observed state
              of AzureMachinePoolMachine.
            properties:
              conditions:
                description: Conditions defines current service state of the AzureMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the MachinePool and will contain a more verbose string suitable
                  for logging and human consumption.


                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the MachinePool machine and will contain a succinct value suitable
                  for machine interpretation.


                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in the
                  controller's output.
                type: string
              instanceName:
                description: InstanceName is the name of the Machine Instance within
                  the VMSS
                type: string
              latestModelApplied:
                description: |-
                  LatestModelApplied indicates the instance is running the most up-to-date VMSS model. A VMSS model describes
                  the image version the VM is running. If the instance is not running the latest model, it means the instance
                  may not be running the version of Kubernetes the Machine Pool has specified and needs to be updated.
                type: boolean
              longRunningOperationStates:
                description: |-
                  LongRunningOperationStates saves the state for Azure long running operations so they can be continued on the
                  next reconciliation loop.
                items:
                  description: Future contains the data needed for an Azure long-running
                    operation to continue across reconcile loops.
                  properties:
                    data:
                      description: Data is the base64 url encoded json Azure AutoRest
                        Future.
                      type: string
                    name:
                      description: |-
                        Name is the name of the Azure resource.
                        Together with the service name, this forms the unique identifier for the future.
                      type: string
                    resourceGroup:
                      description: ResourceGroup is the Azure resource group for the
                        resource.
                      type: string
                    serviceName:
                      description: |-
                        ServiceName is the name of the Azure service.
                        Together with the name of the resource, this forms the unique identifier for the future.
                      type: string
                    type:
                      description: Type describes the type of future, such as update,
                        create, delete, etc.
                      type: string
                  required:
                  - data
                  - name
                  - serviceName
                  - type
                  type: object
                type: array
              nodeRef:
                description: NodeRef will point to the corresponding Node if it exists.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              provisioningState:
                description: ProvisioningState is the provisioning state of the Azure
                  virtual machine instance.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              version:
                description: Version defines the Kubernetes version for the VM Instance
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremanagedclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedClusterTemplate
    listKind: AzureManagedClusterTemplateList
    plural: azuremanagedclustertemplates
    shortNames:
    - amct
    singular: azuremanagedclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedClusterTemplate is the Schema for the AzureManagedClusterTemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedClusterTemplateSpec defines the desired state
              of AzureManagedClusterTemplate.
            properties:
              template:
                description: AzureManagedClusterTemplateResource describes the data
                  needed to create an AzureManagedCluster from a template.
                properties:
                  spec:
                    description: AzureManagedClusterTemplateResourceSpec specifies
                      an Azure managed cluster template resource.
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedControlPlaneTemplate
    listKind: AzureManagedControlPlaneTemplateList
    plural: azuremanagedcontrolplanetemplates
    shortNames:
    - amcpt
    singular: azuremanagedcontrolplanetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedControlPlaneTemplate is the Schema for the AzureManagedControlPlaneTemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedControlPlaneTemplateSpec defines the desired
              state of AzureManagedControlPlaneTemplate.
            properties:
              template:
                description: AzureManagedControlPlaneTemplateResource describes the
                  data needed to create an AzureManagedCluster from a template.
                properties:
                  spec:
                    description: AzureManagedControlPlaneTemplateResourceSpec specifies
                      an Azure managed control plane template resource.
                    properties:
                      aadProfile:
                        description: AadProfile is Azure Active Directory configuration
                          to integrate with AKS for aad authentication.
                        properties:
                          adminGroupObjectIDs:
                            description: AdminGroupObjectIDs - AAD group object IDs
                              that will have admin role of the cluster.
                            items:
                              type: string
                            type: array
                          managed:
                            description: Managed - Whether to enable managed AAD.
                            type: boolean
                        required:
                        - adminGroupObjectIDs
                        - managed
                        type: object
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: |-
                          AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
                          ones added by default.
                        type: object
                      addonProfiles:
                        description: AddonProfiles are the profiles of managed cluster
                          add-on.
                        items:
                          description: AddonProfile represents a managed cluster add-on.
                          properties:
                            config:
                              additionalProperties:
                                type: string
                              description: Config - Key-value pairs for configuring
                                the add-on.
                              type: object
                            enabled:
                              description: Enabled - Whether the add-on is enabled
                                or not.
                              type: boolean
                            name:
                              description: Name - The name of the managed cluster
                                add-on.
                              type: string
                          required:
                          - enabled
                          - name
                          type: object
                        type: array
                      apiServerAccessProfile:
                        description: |-
                          APIServerAccessProfile is the access profile for AKS API server.
                          Immutable except for `authorizedIPRanges`.
                        properties:
                          authorizedIPRanges:
                            description: AuthorizedIPRanges - Authorized IP Ranges
                              to kubernetes API server.
                            items:
                              type: string
                            type: array
                          enablePrivateCluster:
                            description: EnablePrivateCluster indicates whether to
                              create the cluster as a private cluster or not.
                            type: boolean
                          enablePrivateClusterPublicFQDN:
                            description: EnablePrivateClusterPublicFQDN indicates
                              whether to create additional public FQDN for private
                              cluster or not.
                            type: boolean
                          privateDNSZone:
                            description: PrivateDNSZone enables private dns zone mode
                              for private cluster.
                            type: string
                        type: object
                      asoManagedClusterPatches:
                        description: |-
                          ASOManagedClusterPatches defines JSON merge patches to be applied to the generated ASO ManagedCluster resource.
                          WARNING: This is meant to be used sparingly to enable features for development and testing that are not
                          otherwise represented in the CAPZ API. Misconfiguration that conflicts with CAPZ's normal mode of
                          operation is possible.
                        items:
                          type: string
                        type: array
                      autoUpgradeProfile:
                        description: AutoUpgradeProfile defines the auto upgrade configuration.
                        properties:
                          upgradeChannel:
                            description: UpgradeChannel determines the type of upgrade
                              channel for automatically upgrading the cluster.
                            enum:
                            - node-image
                            - none
                            - patch
                            - rapid
                            - stable
                            type: string
                        type: object
                      autoscalerProfile:
                        description: AutoscalerProfile is the parameters to be applied
                          to the cluster-autoscaler when enabled
                        properties:
                          balanceSimilarNodeGroups:
                            description: BalanceSimilarNodeGroups - Valid values are
                              'true' and 'false'. The default is false.
                            enum:
                            - "true"
                            - "false"
                            type: string
                          expander:
                            description: Expander - If not specified, the default
                              is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
                              for more information.
                            enum:
                            - least-waste
                            - most-pods
                            - priority
                            - random
                            type: string
                          maxEmptyBulkDelete:
                            description: MaxEmptyBulkDelete - The default is 10.
                            type: string
                          maxGracefulTerminationSec:
                            description: MaxGracefulTerminationSec - The default is
                              600.
                            pattern: ^(\d+)$
                            type: string
                          maxNodeProvisionTime:
                            description: MaxNodeProvisionTime - The default is '15m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          maxTotalUnreadyPercentage:
                            description: MaxTotalUnreadyPercentage - The default is
                              45. The maximum is 100 and the minimum is 0.
                            maxLength: 3
                            minLength: 1
                            pattern: ^(\d+)$
                            type: string
                          newPodScaleUpDelay:
                            description: NewPodScaleUpDelay - For scenarios like burst/batch
                              scale where you don't want CA to act before the kubernetes
                              scheduler could schedule all the pods, you can tell
                              CA to ignore unscheduled pods before they're a certain
                              age. The default is '0s'. Values must be an integer
                              followed by a unit ('s' for seconds, 'm' for minutes,
                              'h' for hours, etc).
                            type: string
                          okTotalUnreadyCount:
                            description: OkTotalUnreadyCount - This must be an integer.
                              The default is 3.
                            pattern: ^(\d+)$
                            type: string
                          scaleDownDelayAfterAdd:
                            description: ScaleDownDelayAfterAdd - The default is '10m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownDelayAfterDelete:
                            description: ScaleDownDelayAfterDelete - The default is
                              the scan-interval. Values must be an integer followed
                              by an 's'. No unit of time other than seconds (s) is
                              supported.
                            pattern: ^(\d+)s$
                            type: string
                          scaleDownDelayAfterFailure:
                            description: ScaleDownDelayAfterFailure - The default
                              is '3m'. Values must be an integer followed by an 'm'.
                              No unit of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownUnneededTime:
                            description: ScaleDownUnneededTime - The default is '10m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownUnreadyTime:
                            description: ScaleDownUnreadyTime - The default is '20m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownUtilizationThreshold:
                            description: ScaleDownUtilizationThreshold - The default
                              is '0.5'.
                            type: string
                          scanInterval:
                            description: ScanInterval - How often cluster is reevaluated
                              for scale up or down. The default is '10s'.
                            pattern: ^(\d+)s$
                            type: string
                          skipNodesWithLocalStorage:
                            description: SkipNodesWithLocalStorage - The default is
                              false.
                            enum:
                            - "true"
                            - "false"
                            type: string
                          skipNodesWithSystemPods:
                            description: SkipNodesWithSystemPods - The default is
                              true.
                            enum:
                            - "true"
                            - "false"
                            type: string
                        type: object
                      azureEnvironment:
                        description: |-
                          AzureEnvironment is the name of the AzureCloud to be used.
                          The default value that would be used by most users is "AzurePublicCloud", other values are:
                          - ChinaCloud: "AzureChinaCloud"
                          - PublicCloud: "AzurePublicCloud"
                          - USGovernmentCloud: "AzureUSGovernmentCloud"


                          Note that values other than the default must also be accompanied by corresponding changes to the
                          aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
                          not support referring to multiple different clouds in a single installation. The following fields must
                          be defined in the Secret:
                          - AZURE_AUTHORITY_HOST
                          - AZURE_RESOURCE_MANAGER_ENDPOINT
                          - AZURE_RESOURCE_MANAGER_AUDIENCE


                          See the [ASO docs] for more details.


                          [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
                        type: string
                      disableLocalAccounts:
                        description: DisableLocalAccounts disables getting static
                          credentials for this cluster when set. Expected to only
                          be used for AAD clusters.
                        type: boolean
                      dnsServiceIP:
                        description: |-
                          DNSServiceIP is an IP address assigned to the Kubernetes DNS service.
                          It must be within the Kubernetes service address range specified in serviceCidr.
                          Immutable.
                        type: string
                      enablePreviewFeatures:
                        description: EnablePreviewFeatures enables preview features
                          for the cluster.
                        type: boolean
                      extensions:
                        description: Extensions is a list of AKS extensions to be
                          installed on the cluster.
                        items:
                          description: |-
                            AKSExtension represents the configuration for an AKS cluster extension.
                            See also [AKS doc].


                            [AKS doc]: https://learn.microsoft.com/en-us/azure/aks/cluster-extensions
                          properties:
                            aksAssignedIdentityType:
                              description: AKSAssignedIdentityType is the type of
                                the AKS assigned identity.
                              enum:
                              - SystemAssigned
                              - UserAssigned
                              type: string
                            autoUpgradeMinorVersion:
                              default: true
                              description: AutoUpgradeMinorVersion is a flag to note
                                if this extension participates in auto upgrade of
                                minor version, or not.
                              type: boolean
                            configurationSettings:
                              additionalProperties:
                                type: string
                              description: ConfigurationSettings are the name-value
                                pairs for configuring this extension.
                              type: object
                            extensionType:
                              description: |-
                                ExtensionType is the type of the Extension of which this resource is an instance.
                                It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
                              type: string
                            identity:
                              description: Identity is the identity type of the Extension
                                resource in an AKS cluster.
                              enum:
                              - SystemAssigned
                              type: string
                            name:
                              description: Name is the name of the extension.
                              type: string
                            plan:
                              description: Plan is the plan of the extension.
                              properties:
                                name:
                                  description: Name is the user-defined name of the
                                    3rd Party Artifact that is being procured.
                                  type: string
                                product:
                                  description: Product is the name of the 3rd Party
                                    artifact that is being procured.
                                  type: string
                                promotionCode:
                                  description: PromotionCode is a publisher-provided
                                    promotion code as provisioned in Data Market for
                                    the said product/artifact.
                                  type: string
                                publisher:
                                  description: Publisher is the name of the publisher
                                    of the 3rd Party Artifact that is being bought.
                                  type: string
                                version:
                                  description: Version is the version of the plan.
                                  type: string
                              type: object
                            releaseTrain:
                              description: |-
                                ReleaseTrain is the release train this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.)
                                This is only used if autoUpgradeMinorVersion is ‘true’.
                              type: string
                            scope:
                              description: Scope is the scope at which this extension
                                is enabled.
                              properties:
                                releaseNamespace:
                                  description: |-
                                    ReleaseNamespace is the namespace where the extension Release must be placed, for a Cluster-scoped extension.
                                    Required for Cluster-scoped extensions.
                                  type: string
                                scopeType:
                                  description: ScopeType is the scope of the extension.
                                    It can be either Cluster or Namespace, but not
                                    both.
                                  enum:
                                  - Cluster
                                  - Namespace
                                  type: string
                                targetNamespace:
                                  description: |-
                                    TargetNamespace is the namespace where the extension will be created for a Namespace-scoped extension.
                                    Required for Namespace-scoped extensions.
                                  type: string
                              required:
                              - scopeType
                              type: object
                            version:
                              description: Version is the version of the extension.
                              type: string
                          required:
                          - extensionType
                          - name
                          type: object
                        type: array
                      fleetsMember:
                        description: |-
                          FleetsMember is the spec for the fleet this cluster is a member of.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/en-us/azure/templates/microsoft.containerservice/2023-03-15-preview/fleets/members
                        properties:
                          group:
                            description: Group is the group this member belongs to
                              for multi-cluster update management.
                            type: string
                          managerName:
                            description: ManagerName is the name of the fleet manager.
                            type: string
                          managerResourceGroup:
                            description: ManagerResourceGroup is the resource group
                              of the fleet manager.
                            type: string
                        required:
                        - managerName
                        - managerResourceGroup
                        type: object
                      httpProxyConfig:
                        description: |-
                          HTTPProxyConfig is the HTTP proxy configuration for the cluster.
                          Immutable.
                        properties:
                          httpProxy:
                            description: HTTPProxy is the HTTP proxy server endpoint
                              to use.
                            type: string
                          httpsProxy:
                            description: HTTPSProxy is the HTTPS proxy server endpoint
                              to use.
                            type: string
                          noProxy:
                            description: NoProxy indicates the endpoints that should
                              not go through proxy.
                            items:
                              type: string
                            type: array
                          trustedCa:
                            description: TrustedCA is the alternative CA cert to use
                              for connecting to proxy servers.
                            type: string
                        type: object
                      identity:
                        description: Identity configuration used by the AKS control
                          plane.
                        properties:
                          type:
                            description: Type - The Identity type to use.
                            enum:
                            - SystemAssigned
                            - UserAssigned
                            type: string
                          userAssignedIdentityResourceID:
                            description: UserAssignedIdentityResourceID - Identity
                              ARM resource ID when using user-assigned identity.
                            type: string
                        type: object
                      identityRef:
                        description: IdentityRef is a reference to a AzureClusterIdentity
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                              TODO: this design is not final and this field is subject to change in the future.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      kubeletUserAssignedIdentity:
                        description: |-
                          KubeletUserAssignedIdentity is the user-assigned identity for kubelet.
                          For authentication with Azure Container Registry.
                        type: string
                      loadBalancerProfile:
                        description: LoadBalancerProfile is the profile of the cluster
                          load balancer.
                        properties:
                          allocatedOutboundPorts:
                            description: AllocatedOutboundPorts - Desired number of
                              allocated SNAT ports per VM. Allowed values must be
                              in the range of 0 to 64000 (inclusive). The default
                              value is 0 which results in Azure dynamically allocating
                              ports.
                            type: integer
                          idleTimeoutInMinutes:
                            description: IdleTimeoutInMinutes - Desired outbound flow
                              idle timeout in minutes. Allowed values must be in the
                              range of 4 to 120 (inclusive). The default value is
                              30 minutes.
                            type: integer
                          managedOutboundIPs:
                            description: ManagedOutboundIPs - Desired managed outbound
                              IPs for the cluster load balancer.
                            type: integer
                          outboundIPPrefixes:
                            description: OutboundIPPrefixes - Desired outbound IP
                              Prefix resources for the cluster load balancer.
                            items:
                              type: string
                            type: array
                          outboundIPs:
                            description: OutboundIPs - Desired outbound IP resources
                              for the cluster load balancer.
                            items:
                              type: string
                            type: array
                        type: object
                      loadBalancerSKU:
                        default: Standard
                        description: |-
                          LoadBalancerSKU is the SKU of the loadBalancer to be provisioned.
                          Immutable.
                        enum:
                        - Basic
                        - Standard
                        type: string
                      location:
                        description: 'Location is a string matching one of the canonical
                          Azure region names. Examples: "westus2", "eastus".'
                        type: string
                      machineTemplate:
                        description: |-
                          MachineTemplate contains information about how machines
                          should be shaped when creating or updating a control plane.
                          For the AzureManagedControlPlaneTemplate, this field is used
                          only to fulfill the CAPI contract.
                        type: object
                      networkDataplane:
                        description: NetworkDataplane is the dataplane used for building
                          the Kubernetes network.
                        enum:
                        - azure
                        - cilium
                        type: string
                      networkPlugin:
                        description: NetworkPlugin used for building Kubernetes network.
                        enum:
                        - azure
                        - kubenet
                        - none
                        type: string
                      networkPluginMode:
                        description: |-
                          NetworkPluginMode is the mode the network plugin should use.
                          Allowed value is "overlay".
                        enum:
                        - overlay
                        type: string
                      networkPolicy:
                        description: NetworkPolicy used for building Kubernetes network.
                        enum:
                        - azure
                        - calico
                        - cilium
                        type: string
                      oidcIssuerProfile:
                        description: OIDCIssuerProfile is the OIDC issuer profile
                          of the Managed Cluster.
                        properties:
                          enabled:
                            description: Enabled is whether the OIDC issuer is enabled.
                            type: boolean
                        type: object
                      outboundType:
                        description: Outbound configuration used by Nodes.
                        enum:
                        - loadBalancer
                        - managedNATGateway
                        - userAssignedNATGateway
                        - userDefinedRouting
                        type: string
                      resourceGroupName:
                        description: |-
                          ResourceGroupName is the name of the Azure resource group for this AKS Cluster.
                          Immutable.
                        type: string
                      securityProfile:
                        description: SecurityProfile defines the security profile
                          for cluster.
                        properties:
                          azureKeyVaultKms:
                            description: AzureKeyVaultKms defines Azure Key Vault
                              Management Services Profile for the security profile.
                            properties:
                              enabled:
                                description: Enabled enables the Azure Key Vault key
                                  management service. The default is false.
                                type: boolean
                              keyID:
                                description: |-
                                  KeyID defines the Identifier of Azure Key Vault key.
                                  When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier.
                                type: string
                              keyVaultNetworkAccess:
                                default: Public
                                description: |-
                                  KeyVaultNetworkAccess defines the network access of key vault.
                                  The possible values are Public and Private.
                                  Public means the key vault allows public access from all networks.
                                  Private means the key vault disables public access and enables private link. The default value is Public.
                                type: string
                              keyVaultResourceID:
                                description: KeyVaultResourceID is the Resource ID
                                  of key vault. When keyVaultNetworkAccess is Private,
                                  this field is required and must be a valid resource
                                  ID.
                                type: string
                            required:
                            - enabled
                            - keyID
                            type: object
                          defender:
                            description: Defender settings for the security profile.
                            properties:
                              logAnalyticsWorkspaceResourceID:
                                description: |-
                                  LogAnalyticsWorkspaceResourceID is the ID of the Log Analytics workspace that has to be associated with Microsoft Defender.
                                  When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID.
                                type: string
                              securityMonitoring:
                                description: SecurityMonitoring profile defines the
                                  Microsoft Defender threat detection for Cloud settings
                                  for the security profile.
                                properties:
                                  enabled:
                                    description: Enabled enables Defender threat detection
                                    type: boolean
                                required:
                                - enabled
                                type: object
                            required:
                            - logAnalyticsWorkspaceResourceID
                            - securityMonitoring
                            type: object
                          imageCleaner:
                            description: ImageCleaner settings for the security profile.
                            properties:
                              enabled:
                                description: Enabled enables the Image Cleaner on
                                  AKS cluster.
                                type: boolean
                              intervalHours:
                                description: IntervalHours defines Image Cleaner scanning
                                  interval in hours. Default value is 24 hours.
                                maximum: 2160
                                minimum: 24
                                type: integer
                            required:
                            - enabled
                            type: object
                          workloadIdentity:
                            description: Workloadidentity enables Kubernetes applications
                              to access Azure cloud resources securely with Azure
                              AD. Ensure to enable OIDC issuer while enabling Workload
                              Identity
                            properties:
                              enabled:
                                description: Enabled enables the workload identity.
                                type: boolean
                            required:
                            - enabled
                            type: object
                        type: object
                      sku:
                        description: SKU is the SKU of the AKS to be provisioned.
                        properties:
                          tier:
                            description: Tier - Tier of an AKS cluster.
                            enum:
                            - Free
                            - Paid
                            - Standard
                            type: string
                        required:
                        - tier
                        type: object
                      subscriptionID:
                        description: SubscriptionID is the GUID of the Azure subscription
                          that owns this cluster.
                        type: string
                      version:
                        description: Version defines the desired Kubernetes version.
                        minLength: 2
                        type: string
                      virtualNetwork:
                        description: VirtualNetwork describes the virtual network
                          for the AKS cluster. It will be created if it does not already
                          exist.
                        properties:
                          cidrBlock:
                            type: string
                          name:
                            description: Name is the name of the virtual network.
                            type: string
                          resourceGroup:
                            description: ResourceGroup is the name of the Azure resource
                              group for the VNet and Subnet.
                            type: string
                          subnet:
                            description: ManagedControlPlaneSubnet describes a subnet
                              for an AKS cluster.
                            properties:
                              cidrBlock:
                                type: string
                              name:
                                type: string
                              privateEndpoints:
                                description: PrivateEndpoints is a slice of Virtual
                                  Network private endpoints to create for the subnets.
                                items:
                                  description: PrivateEndpointSpec configures an Azure
                                    Private Endpoint.
                                  properties:
                                    applicationSecurityGroups:
                                      description: ApplicationSecurityGroups specifies
                                        the Application security group in which the
                                        private endpoint IP configuration is included.
                                      items:
                                        type: string
                                      type: array
                                    customNetworkInterfaceName:
                                      description: CustomNetworkInterfaceName specifies
                                        the network interface name associated with
                                        the private endpoint.
                                      type: string
                                    location:
                                      description: Location specifies the region to
                                        create the private endpoint.
                                      type: string
                                    manualApproval:
                                      description: |-
                                        ManualApproval specifies if the connection approval needs to be done manually or not.
                                        Set it true when the network admin does not have access to approve connections to the remote resource.
                                        Defaults to false.
                                      type: boolean
                                    name:
                                      description: Name specifies the name of the
                                        private endpoint.
                                      type: string
                                    privateIPAddresses:
                                      description: |-
                                        PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                        They have to be part of the subnet where the private endpoint is linked.
                                      items:
                                        type: string
                                      type: array
                                    privateLinkServiceConnections:
                                      description: PrivateLinkServiceConnections specifies
                                        Private Link Service Connections of the private
                                        endpoint.
                                      items:
                                        description: PrivateLinkServiceConnection
                                          defines the specification for a private
                                          link service connection associated with
                                          a private endpoint.
                                        properties:
                                          groupIDs:
                                            description: GroupIDs specifies the ID(s)
                                              of the group(s) obtained from the remote
                                              resource that this private endpoint
                                              should connect to.
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: Name specifies the name of
                                              the private link service.
                                            type: string
                                          privateLinkServiceID:
                                            description: PrivateLinkServiceID specifies
                                              the resource ID of the private link
                                              service.
                                            type: string
                                          requestMessage:
                                            description: RequestMessage specifies
                                              a message passed to the owner of the
                                              remote resource with the private endpoint
                                              connection request.
                                            maxLength: 140
                                            type: string
                                        type: object
                                      type: array
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              serviceEndpoints:
                                description: ServiceEndpoints is a slice of Virtual
                                  Network service endpoints to enable for the subnets.
                                items:
                                  description: ServiceEndpointSpec configures an Azure
                                    Service Endpoint.
                                  properties:
                                    locations:
                                      items:
                                        type: string
                                      type: array
                                    service:
                                      type: string
                                  required:
                                  - locations
                                  - service
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - service
                                x-kubernetes-list-type: map
                            required:
                            - cidrBlock
                            - name
                            type: object
                        required:
                        - cidrBlock
                        - name
                        type: object
                    required:
                    - identityRef
                    - location
                    - resourceGroupName
                    - version
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io: ""
  name: azuremanagedmachinepooltemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedMachinePoolTemplate
    listKind: AzureManagedMachinePoolTemplateList
    plural: azuremanagedmachinepooltemplates
    shortNames:
    - ammpt
    singular: azuremanagedmachinepooltemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedMachinePoolTemplate is the Schema for the AzureManagedMachinePoolTemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedMachinePoolTemplateSpec defines the desired state
              of AzureManagedMachinePoolTemplate.
            properties:
              template:
                description: AzureManagedMachinePoolTemplateResource describes the
                  data needed to create an AzureManagedCluster from a template.
                properties:
                  spec:
                    description: AzureManagedMachinePoolTemplateResourceSpec specifies
                      an Azure managed control plane template resource.
                    properties:
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: |-
                          AdditionalTags is an optional set of tags to add to Azure resources managed by the
                          Azure provider, in addition to the ones added by default.
                        type: object
                      asoManagedClustersAgentPoolPatches:
                        description: |-
                          ASOManagedClustersAgentPoolPatches defines JSON merge patches to be applied to the generated ASO ManagedClustersAgentPool resource.
                          WARNING: This is meant to be used sparingly to enable features for development and testing that are not
                          otherwise represented in the CAPZ API. Misconfiguration that conflicts with CAPZ's normal mode of
                          operation is possible.
                        items:
                          type: string
                        type: array
                      availabilityZones:
                        description: |-
                          AvailabilityZones - Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
                          Immutable.
                        items:
                          type: string
                        type: array
                      enableEncryptionAtHost:
                        description: |-
                          EnableEncryptionAtHost indicates whether host encryption is enabled on the node pool.
                          Immutable.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/en-us/azure/aks/enable-host-encryption
                        type: boolean
                      enableFIPS:
                        description: |-
                          EnableFIPS indicates whether FIPS is enabled on the node pool.
                          Immutable.
                        type: boolean
                      enableNodePublicIP:
                        description: |-
                          EnableNodePublicIP controls whether or not nodes in the pool each have a public IP address.
                          Immutable.
                        type: boolean
                      enableUltraSSD:
                        description: |-
                          EnableUltraSSD enables the storage type UltraSSD_LRS for the agent pool.
                          Immutable.
                        type: boolean
                      kubeletConfig:
                        description: |-
                          KubeletConfig specifies the kubelet configurations for nodes.
                          Immutable.
                        properties:
                          allowedUnsafeSysctls:
                            description: |-
                              AllowedUnsafeSysctls - Allowlist of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
                              Valid values match `kernel.shm*`, `kernel.msg*`, `kernel.sem`, `fs.mqueue.*`, or `net.*`.
                            items:
                              type: string
                            type: array
                          containerLogMaxFiles:
                            description: ContainerLogMaxFiles - The maximum number
                              of container log files that can be present for a container.
                              The number must be ≥ 2.
                            minimum: 2
                            type: integer
                          containerLogMaxSizeMB:
                            description: ContainerLogMaxSizeMB - The maximum size
                              in MB of a container log file before it is rotated.
                            type: integer
                          cpuCfsQuota:
                            description: CPUCfsQuota - Enable CPU CFS quota enforcement
                              for containers that specify CPU limits.
                            type: boolean
                          cpuCfsQuotaPeriod:
                            description: |-
                              CPUCfsQuotaPeriod - Sets CPU CFS quota period value.
                              Must end in "ms", e.g. "100ms"
                            type: string
                          cpuManagerPolicy:
                            description: CPUManagerPolicy - CPU Manager policy to
                              use.
                            enum:
                            - none
                            - static
                            type: string
                          failSwapOn:
                            description: FailSwapOn - If set to true it will make
                              the Kubelet fail to start if swap is enabled on the
                              node.
                            type: boolean
                          imageGcHighThreshold:
                            description: |-
                              ImageGcHighThreshold - The percent of disk usage after which image garbage collection is always run.
                              Valid values are 0-100 (inclusive).
                            maximum: 100
                            minimum: 0
                            type: integer
                          imageGcLowThreshold:
                            description: |-
                              ImageGcLowThreshold - The percent of disk usage before which image garbage collection is never run.
                              Valid values are 0-100 (inclusive) and must be less than `imageGcHighThreshold`.
                            maximum: 100
                            minimum: 0
                            type: integer
                          podMaxPids:
                            description: |-
                              PodMaxPids - The maximum number of processes per pod.
                              Must not exceed kernel PID limit. -1 disables the limit.
                            minimum: -1
                            type: integer
                          topologyManagerPolicy:
                            description: TopologyManagerPolicy - Topology Manager
                              policy to use.
                            enum:
                            - none
                            - best-effort
                            - restricted
                            - single-numa-node
                            type: string
                        type: object
                      kubeletDiskType:
                        description: |-
                          KubeletDiskType specifies the kubelet disk type. Default to OS. Possible values include: 'OS', 'Temporary'.
                          Requires Microsoft.ContainerService/KubeletDisk preview feature to be set.
                          Immutable.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/rest/api/aks/agent-pools/create-or-update?tabs=HTTP#kubeletdisktype
                        enum:
                        - OS
                        - Temporary
                        type: string
                      linuxOSConfig:
                        description: |-
                          LinuxOSConfig specifies the custom Linux OS settings and configurations.
                          Immutable.
                        properties:
                          swapFileSizeMB:
                            description: |-
                              SwapFileSizeMB specifies size in MB of a swap file will be created on the agent nodes from this node pool.
                              Max value of SwapFileSizeMB should be the size of temporary disk(/dev/sdb).
                              Must be at least 1.
                              See also [AKS doc].


                              [AKS doc]: https://learn.microsoft.com/azure/virtual-machines/managed-disks-overview#temporary-disk
                            minimum: 1
                            type: integer
                          sysctls:
                            description: Sysctl specifies the settings for Linux agent
                              nodes.
                            properties:
                              fsAioMaxNr:
                                description: |-
                                  FsAioMaxNr specifies the maximum number of system-wide asynchronous io requests.
                                  Valid values are 65536-6553500 (inclusive).
                                  Maps to fs.aio-max-nr.
                                maximum: 6553500
                                minimum: 65536
                                type: integer
                              fsFileMax:
                                description: |-
                                  FsFileMax specifies the max number of file-handles that the Linux kernel will allocate, by increasing increases the maximum number of open files permitted.
                                  Valid values are 8192-12000500 (inclusive).
                                  Maps to fs.file-max.
                                maximum: 12000500
                                minimum: 8192
                                type: integer
                              fsInotifyMaxUserWatches:
                                description: |-
                                  FsInotifyMaxUserWatches specifies the number of file watches allowed by the system. Each watch is roughly 90 bytes on a 32-bit kernel, and roughly 160 bytes on a 64-bit kernel.
                                  Valid values are 781250-2097152 (inclusive).
                                  Maps to fs.inotify.max_user_watches.
                                maximum: 2097152
                                minimum: 781250
                                type: integer
                              fsNrOpen:
                                description: |-
                                  FsNrOpen specifies the maximum number of file-handles a process can allocate.
                                  Valid values are 8192-20000500 (inclusive).
                                  Maps to fs.nr_open.
                                maximum: 20000500
                                minimum: 8192
                                type: integer
                              kernelThreadsMax:
                                description: |-
                                  KernelThreadsMax specifies the maximum number of all threads that can be created.
                                  Valid values are 20-513785 (inclusive).
                                  Maps to kernel.threads-max.
                                maximum: 513785
                                minimum: 20
                                type: integer
                              netCoreNetdevMaxBacklog:
                                description: |-
                                  NetCoreNetdevMaxBacklog specifies maximum number of packets, queued on the INPUT side, when the interface receives packets faster than kernel can process them.
                                  Valid values are 1000-3240000 (inclusive).
                                  Maps to net.core.netdev_max_backlog.
                                maximum: 3240000
                                minimum: 1000
                                type: integer
                              netCoreOptmemMax:
                                description: |-
                                  NetCoreOptmemMax specifies the maximum ancillary buffer size (option memory buffer) allowed per socket.
                                  Socket option memory is used in a few cases to store extra structures relating to usage of the socket.
                                  Valid values are 20480-4194304 (inclusive).
                                  Maps to net.core.optmem_max.
                                maximum: 4194304
                                minimum: 20480
                                type: integer
                              netCoreRmemDefault:
                                description: |-
                                  NetCoreRmemDefault specifies the default receive socket buffer size in bytes.
                                  Valid values are 212992-134217728 (inclusive).
                                  Maps to net.core.rmem_default.
                                maximum: 134217728
                                minimum: 212992
                                type: integer
                              netCoreRmemMax:
                                description: |-
                                  NetCoreRmemMax specifies the maximum receive socket buffer size in bytes.
                                  Valid values are 212992-134217728 (inclusive).
                                  Maps to net.core.rmem_max.
                                maximum: 134217728
                                minimum: 212992
                                type: integer
                              netCoreSomaxconn:
                                description: |-
                                  NetCoreSomaxconn specifies maximum number of connection requests that can be queued for any given listening socket.
                                  An upper limit for the value of the backlog parameter passed to the listen(2)(https://man7.org/linux/man-pages/man2/listen.2.html) function.
                                  If the backlog argument is greater than the somaxconn, then it's silently truncated to this limit.
                                  Valid values are 4096-3240000 (inclusive).
                                  Maps to net.core.somaxconn.
                                maximum: 3240000
                                minimum: 4096
                                type: integer
                              netCoreWmemDefault:
                                description: |-
                                  NetCoreWmemDefault specifies the default send socket buffer size in bytes.
                                  Valid values are 212992-134217728 (inclusive).
                                  Maps to net.core.wmem_default.
                                maximum: 134217728
                                minimum: 212992
                                type: integer
                              netCoreWmemMax:
                                description: |-
                                  NetCoreWmemMax specifies the maximum send socket buffer size in bytes.
                                  Valid values are 212992-134217728 (inclusive).
                                  Maps to net.core.wmem_max.
                                maximum: 134217728
                                minimum: 212992
                                type: integer
                              netIpv4IPLocalPortRange:
                                description: |-
                                  NetIpv4IPLocalPortRange is used by TCP and UDP traffic to choose the local port on the agent node.
                                  PortRange should be specified in the format "first last".
                                  First, being an integer, must be between [1024 - 60999].
                                  Last, being an integer, must be between [32768 - 65000].
                                  Maps to net.ipv4.ip_local_port_range.
                                type: string
                              netIpv4NeighDefaultGcThresh1:
                                description: |-
                                  NetIpv4NeighDefaultGcThresh1 specifies the minimum number of entries that may be in the ARP cache.
                                  Garbage collection won't be triggered if the number of entries is below this setting.
                                  Valid values are 128-80000 (inclusive).
                                  Maps to net.ipv4.neigh.default.gc_thresh1.
                                maximum: 80000
                                minimum: 128
                                type: integer
                              netIpv4NeighDefaultGcThresh2:
                                description: |-
                                  NetIpv4NeighDefaultGcThresh2 specifies soft maximum number of entries that may be in the ARP cache.
                                  ARP garbage collection will be triggered about 5 seconds after reaching this soft maximum.
                                  Valid values are 512-90000 (inclusive).
                                  Maps to net.ipv4.neigh.default.gc_thresh2.
                                maximum: 90000
                                minimum: 512
                                type: integer
                              netIpv4NeighDefaultGcThresh3:
                                description: |-
                                  NetIpv4NeighDefaultGcThresh3 specified hard maximum number of entries in the ARP cache.
                                  Valid values are 1024-100000 (inclusive).
                                  Maps to net.ipv4.neigh.default.gc_thresh3.
                                maximum: 100000
                                minimum: 1024
                                type: integer
                              netIpv4TCPFinTimeout:
                                description: |-
                                  NetIpv4TCPFinTimeout specifies the length of time an orphaned connection will remain in the FIN_WAIT_2 state before it's aborted at the local end.
                                  Valid values are 5-120 (inclusive).
                                  Maps to net.ipv4.tcp_fin_timeout.
                                maximum: 120
                                minimum: 5
                                type: integer
                              netIpv4TCPKeepaliveProbes:
                                description: |-
                                  NetIpv4TCPKeepaliveProbes specifies the number of keepalive probes TCP sends out, until it decides the connection is broken.
                                  Valid values are 1-15 (inclusive).
                                  Maps to net.ipv4.tcp_keepalive_probes.
                                maximum: 15
                                minimum: 1
                                type: integer
                              netIpv4TCPKeepaliveTime:
                                description: |-
                                  NetIpv4TCPKeepaliveTime specifies the rate at which TCP sends out a keepalive message when keepalive is enabled.
                                  Valid values are 30-432000 (inclusive).
                                  Maps to net.ipv4.tcp_keepalive_time.
                                maximum: 432000
                                minimum: 30
                                type: integer
                              netIpv4TCPMaxSynBacklog:
                                description: |-
                                  NetIpv4TCPMaxSynBacklog specifies the maximum number of queued connection requests that have still not received an acknowledgment from the connecting client.
                                  If this number is exceeded, the kernel will begin dropping requests.
                                  Valid values are 128-3240000 (inclusive).
                                  Maps to net.ipv4.tcp_max_syn_backlog.
                                maximum: 3240000
                                minimum: 128
                                type: integer
                              netIpv4TCPMaxTwBuckets:
                                description: |-
                                  NetIpv4TCPMaxTwBuckets specifies maximal number of timewait sockets held by system simultaneously.
                                  If this number is exceeded, time-wait socket is immediately destroyed and warning is printed.
                                  Valid values are 8000-1440000 (inclusive).
                                  Maps to net.ipv4.tcp_max_tw_buckets.
                                maximum: 1440000
                                minimum: 8000
                                type: integer
                              netIpv4TCPTwReuse:
                                description: |-
                                  NetIpv4TCPTwReuse is used to allow to reuse TIME-WAIT sockets for new connections when it's safe from protocol viewpoint.
                                  Maps to net.ipv4.tcp_tw_reuse.
                                type: boolean
                              netIpv4TCPkeepaliveIntvl:
                                description: |-
                                  NetIpv4TCPkeepaliveIntvl specifies the frequency of the probes sent out.
                                  Multiplied by tcpKeepaliveprobes, it makes up the time to kill a connection that isn't responding, after probes started.
                                  Valid values are 1-75 (inclusive).
                                  Maps to net.ipv4.tcp_keepalive_intvl.
                                maximum: 75
                                minimum: 1
                                type: integer
                              netNetfilterNfConntrackBuckets:
                                description: |-
                                  NetNetfilterNfConntrackBuckets specifies the size of hash table used by nf_conntrack module to record the established connection record of the TCP protocol.
                                  Valid values are 65536-147456 (inclusive).
                                  Maps to net.netfilter.nf_conntrack_buckets.
                                maximum: 147456
                                minimum: 65536
                                type: integer
                              netNetfilterNfConntrackMax:
                                description: |-
                                  NetNetfilterNfConntrackMax specifies the maximum number of connections supported by the nf_conntrack module or the size of connection tracking table.
                                  Valid values are 131072-1048576 (inclusive).
                                  Maps to net.netfilter.nf_conntrack_max.
                                maximum: 1048576
                                minimum: 131072
                                type: integer
                              vmMaxMapCount:
                                description: |-
                                  VMMaxMapCount specifies the maximum number of memory map areas a process may have.
                                  Maps to vm.max_map_count.
                                  Valid values are 65530-262144 (inclusive).
                                maximum: 262144
                                minimum: 65530
                                type: integer
                              vmSwappiness:
                                description: |-
                                  VMSwappiness specifies aggressiveness of the kernel in swapping memory pages.
                                  Higher values will increase aggressiveness, lower values decrease the amount of swap.
                                  Valid values are 0-100 (inclusive).
                                  Maps to vm.swappiness.
                                maximum: 100
                                minimum: 0
                                type: integer
                              vmVfsCachePressure:
                                description: |-
                                  VMVfsCachePressure specifies the percentage value that controls tendency of the kernel to reclaim the memory, which is used for caching of directory and inode objects.
                                  Valid values are 1-500 (inclusive).
                                  Maps to vm.vfs_cache_pressure.
                                maximum: 500
                                minimum: 1
                                type: integer
                            type: object
                          transparentHugePageDefrag:
                            description: |-
                              TransparentHugePageDefrag specifies whether the kernel should make aggressive use of memory compaction to make more hugepages available.
                              See also [Linux doc].


                              [Linux doc]: https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge for more details.
                            enum:
                            - always
                            - defer
                            - defer+madvise
                            - madvise
                            - never
                            type: string
                          transparentHugePageEnabled:
                            description: |-
                              TransparentHugePageEnabled specifies various modes of Transparent Hugepages.
                              See also [Linux doc].


                              [Linux doc]: https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge for more details.
                            enum:
                            - always
                            - madvise
                            - never
                            type: string
                        type: object
                      maxPods:
                        description: |-
                          MaxPods specifies the kubelet `--max-pods` configuration for the node pool.
                          Immutable.
                          See also [AKS doc], [K8s doc].


                          [AKS doc]: https://learn.microsoft.com/azure/aks/configure-azure-cni#configure-maximum---new-clusters
                          [K8s doc]: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
                        type: integer
                      mode:
                        description: 'Mode represents the mode of an agent pool. Possible
                          values include: System, User.'
                        enum:
                        - System
                        - User
                        type: string
                      name:
                        description: |-
                          Name is the name of the agent pool. If not specified, CAPZ uses the name of the CR as the agent pool name.
                          Immutable.
                        type: string
                      nodeLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          Node labels represent the labels for all of the nodes present in node pool.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/azure/aks/use-labels
                        type: object
                      nodePublicIPPrefixID:
                        description: |-
                          NodePublicIPPrefixID specifies the public IP prefix resource ID which VM nodes should use IPs from.
                          Immutable.
                        type: string
                      osDiskSizeGB:
                        description: |-
                          OSDiskSizeGB is the disk size for every machine in this agent pool.
                          If you specify 0, it will apply the default osDisk size according to the vmSize specified.
                          Immutable.
                        type: integer
                      osDiskType:
                        default: Managed
                        description: |-
                          OsDiskType specifies the OS disk type for each node in the pool. Allowed values are 'Ephemeral' and 'Managed' (default).
                          Immutable.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/azure/aks/cluster-configuration#ephemeral-os
                        enum:
                        - Ephemeral
                        - Managed
                        type: string
                      osType:
                        description: |-
                          OSType specifies the virtual machine operating system. Default to Linux. Possible values include: 'Linux', 'Windows'.
                          'Windows' requires the AzureManagedControlPlane's `spec.networkPlugin` to be `azure`.
                          Immutable.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/rest/api/aks/agent-pools/create-or-update?tabs=HTTP#ostype
                        enum:
                        - Linux
                        - Windows
                        type: string
                      scaleDownMode:
                        default: Delete
                        description: 'ScaleDownMode affects the cluster autoscaler
                          behavior. Default to Delete. Possible values include: ''Deallocate'',
                          ''Delete'''
                        enum:
                        - Deallocate
                        - Delete
                        type: string
                      scaleSetPriority:
                        description: |-
                          ScaleSetPriority specifies the ScaleSetPriority value. Default to Regular. Possible values include: 'Regular', 'Spot'
                          Immutable.
                        enum:
                        - Regular
                        - Spot
                        type: string
                      scaling:
                        description: Scaling specifies the autoscaling parameters
                          for the node pool.
                        properties:
                          maxSize:
                            description: MaxSize is the maximum number of nodes for
                              auto-scaling.
                            type: integer
                          minSize:
                            description: MinSize is the minimum number of nodes for
                              auto-scaling.
                            type: integer
                        type: object
                      sku:
                        description: |-
                          SKU is the size of the VMs in the node pool.
                          Immutable.
                        type: string
                      spotMaxPrice:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          SpotMaxPrice defines max price to pay for spot instance. Possible values are any decimal value greater than zero or -1.
                          If you set the max price to be -1, the VM won't be evicted based on price. The price for the VM will be the current price
                          for spot or the price for a standard VM, which ever is less, as long as there's capacity and quota available.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      subnetName:
                        description: |-
                          SubnetName specifies the Subnet where the MachinePool will be placed
                          Immutable.
                        type: string
                      taints:
                        description: |-
                          Taints specifies the taints for nodes present in this agent pool.
                          See also [AKS doc].


                          [AKS doc]: https://learn.microsoft.com/azure/aks/use-multiple-node-pools#setting-node-pool-taints
                        items:
                          description: Taint represents a Kubernetes taint.
                          properties:
                            effect:
                              description: Effect specifies the effect for the taint
                              enum:
                              - NoSchedule
                              - NoExecute
                              - PreferNoSchedule
                              type: string
                            key:
                              description: Key is the key of the taint
                              type: string
                            value:
                              description: Value is the value of the taint
                              type: string
                          required:
                          - effect
                          - key
                          - value
                          type: object
                        type: array
                    required:
                    - mode
                    - sku
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1alpha1
    clusterctl.cluster.x-k8s.io: ""
  name: azureasomanagedclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedCluster
    listKind: AzureASOManagedClusterList
    plural: azureasomanagedclusters
    singular: azureasomanagedcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureASOManagedCluster is the Schema for the azureasomanagedclusters
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureASOManagedClusterSpec defines the desired state of AzureASOManagedCluster.
            properties:
              controlPlaneEndpoint:
                description: |-
                  ControlPlaneEndpoint is the location of the API server within the control plane. CAPZ manages this field
                  and it should not be set by the user. It fulfills Cluster API's cluster infrastructure provider contract.
                  Because this field is programmatically set by CAPZ after resource creation, we define it as +optional
                  in the API schema to permit resource admission.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              resources:
                description: Resources are embedded ASO resources to be managed by
                  this resource.
                items:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            type: object
          status:
            description: AzureASOManagedClusterStatus defines the observed state of
              AzureASOManagedCluster.
            properties:
              ready:
                description: |-
                  Ready represents whether or not the cluster has been provisioned and is ready. It fulfills Cluster
                  API's cluster infrastructure provider contract.
                type: boolean
              resources:
                items:
                  description: ResourceStatus represents the status of a resource.
                  properties:
                    ready:
                      type: boolean
                    resource:
                      description: StatusResource is a handle to a resource.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - version
                      type: object
                  required:
                  - ready
                  - resource
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1alpha1
    clusterctl.cluster.x-k8s.io: ""
  name: azureasomanagedclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedClusterTemplate
    listKind: AzureASOManagedClusterTemplateList
    plural: azureasomanagedclustertemplates
    singular: azureasomanagedclustertemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureASOManagedClusterTemplate is the Schema for the azureasomanagedclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureASOManagedClusterTemplateSpec defines the desired state
              of AzureASOManagedClusterTemplate.
            properties:
              template:
                description: AzureASOManagedClusterTemplateResource defines the templated
                  resource.
                properties:
                  spec:
                    description: AzureASOManagedClusterTemplateResourceSpec defines
                      the desired state of the templated resource.
                    properties:
                      resources:
                        description: Resources are embedded ASO resources to be managed
                          by this resource.
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                    type: object
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1alpha1
    clusterctl.cluster.x-k8s.io: ""
  name: azureasomanagedcontrolplanes.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedControlPlane
    listKind: AzureASOManagedControlPlaneList
    plural: azureasomanagedcontrolplanes
    singular: azureasomanagedcontrolplane
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureASOManagedControlPlane is the Schema for the azureasomanagedcontrolplanes
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureASOManagedControlPlaneSpec defines the desired state
              of AzureASOManagedControlPlane.
            properties:
              resources:
                description: Resources are embedded ASO resources to be managed by
                  this resource.
                items:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              version:
                description: |-
                  Version is the Kubernetes version of the control plane. It fulfills Cluster API's control plane
                  provider contract.
                type: string
            type: object
          status:
            description: AzureASOManagedControlPlaneStatus defines the observed state
              of AzureASOManagedControlPlane.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint for the
                  cluster's API server.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              initialized:
                description: |-
                  Initialized represents whether or not the API server has been provisioned. It fulfills Cluster API's
                  control plane provider contract. For AKS, this is equivalent to `ready`.
                type: boolean
              ready:
                description: |-
                  Ready represents whether or not the API server is ready to receive requests. It fulfills Cluster API's
                  control plane provider contract. For AKS, this is equivalent to `initialized`.
                type: boolean
              resources:
                items:
                  description: ResourceStatus represents the status of a resource.
                  properties:
                    ready:
                      type: boolean
                    resource:
                      description: StatusResource is a handle to a resource.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - version
                      type: object
                  required:
                  - ready
                  - resource
                  type: object
                type: array
              version:
                description: |-
                  Version is the observed Kubernetes version of the control plane. It fulfills Cluster API's control
                  plane provider contract.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1alpha1
    clusterctl.cluster.x-k8s.io: ""
  name: azureasomanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedControlPlaneTemplate
    listKind: AzureASOManagedControlPlaneTemplateList
    plural: azureasomanagedcontrolplanetemplates
    singular: azureasomanagedcontrolplanetemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureASOManagedControlPlaneTemplate is the Schema for the azureasomanagedcontrolplanetemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureASOManagedControlPlaneTemplateSpec defines the desired
              state of AzureASOManagedControlPlane.
            properties:
              template:
                description: AzureASOManagedControlPlaneResource defines the templated
                  resource.
                properties:
                  spec:
                    description: AzureASOManagedControlPlaneTemplateResourceSpec defines
                      the desired state of the templated resource.
                    properties:
                      resources:
                        description: Resources are embedded ASO resources to be managed
                          by this resource.
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      version:
                        description: |-
                          Version is the Kubernetes version of the control plane. It fulfills Cluster API's control plane
                          provider contract.
                        type: string
                    type: object
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1alpha1
    clusterctl.cluster.x-k8s.io: ""
  name: azureasomanagedmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedMachinePool
    listKind: AzureASOManagedMachinePoolList
    plural: azureasomanagedmachinepools
    singular: azureasomanagedmachinepool
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureASOManagedMachinePool is the Schema for the azureasomanagedmachinepools
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureASOManagedMachinePoolSpec defines the desired state
              of AzureASOManagedMachinePool.
            properties:
              providerIDList:
                description: |-
                  ProviderIDList is the list of cloud provider IDs for the instances. It fulfills Cluster API's machine
                  pool infrastructure provider contract.
                items:
                  type: string
                type: array
              resources:
                description: Resources are embedded ASO resources to be managed by
                  this resource.
                items:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            type: object
          status:
            description: AzureASOManagedMachinePoolStatus defines the observed state
              of AzureASOManagedMachinePool.
            properties:
              ready:
                description: |-
                  Ready represents whether or not the infrastructure is ready to be used. It fulfills Cluster API's
                  machine pool infrastructure provider contract.
                type: boolean
              replicas:
                description: |-
                  Replicas is the current number of provisioned replicas. It fulfills Cluster API's machine pool
                  infrastructure provider contract.
                format: int32
                type: integer
              resources:
                items:
                  description: ResourceStatus represents the status of a resource.
                  properties:
                    ready:
                      type: boolean
                    resource:
                      description: StatusResource is a handle to a resource.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - version
                      type: object
                  required:
                  - ready
                  - resource
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1beta1: v1alpha1
    clusterctl.cluster.x-k8s.io: ""
  name: azureasomanagedmachinepooltemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedMachinePoolTemplate
    listKind: AzureASOManagedMachinePoolTemplateList
    plural: azureasomanagedmachinepooltemplates
    singular: azureasomanagedmachinepooltemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureASOManagedMachinePoolTemplate is the Schema for the azureasomanagedmachinepooltemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureASOManagedMachinePoolTemplateSpec defines the desired
              state of AzureASOManagedMachinePoolTemplate.
            properties:
              template:
                description: AzureASOManagedControlPlaneResource defines the templated
                  resource.
                properties:
                  spec:
                    description: AzureASOManagedControlPlaneTemplateResourceSpec defines
                      the desired state of the templated resource.
                    properties:
                      resources:
                        description: Resources are embedded ASO resources to be managed
                          by this resource.
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      version:
                        description: |-
                          Version is the Kubernetes version of the control plane. It fulfills Cluster API's control plane
                          provider contract.
                        type: string
                    type: object
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - kubeadmconfigs
  - kubeadmconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinepools
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinepools
  - machinepools/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - containerservice.azure.com
  resources:
  - fleetsmembers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - containerservice.azure.com
  resources:
  - fleetsmembers/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - containerservice.azure.com
  resources:
  - managedclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - containerservice.azure.com
  resources:
  - managedclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - containerservice.azure.com
  resources:
  - managedclustersagentpools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - containerservice.azure.com
  resources:
  - managedclustersagentpools/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedcontrolplanes/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedcontrolplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedmachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedmachinepools/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureasomanagedmachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureclusteridentities
  - azureclusteridentities/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinepoolmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinepoolmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinetemplates
  - azuremachinetemplates/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedcontrolplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedmachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedmachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kubernetesconfiguration.azure.com
  resources:
  - extensions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubernetesconfiguration.azure.com
  resources:
  - extensions/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - network.azure.com
  resources:
  - bastionhosts
  - natgateways
  - privateendpoints
  - virtualnetworks
  - virtualnetworkssubnets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.azure.com
  resources:
  - bastionhosts/status
  - natgateways/status
  - privateendpoints/status
  - virtualnetworks/status
  - virtualnetworkssubnets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - network.azure.com
  resources:
  - privateendpoints
  - virtualnetworks
  - virtualnetworkssubnets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.azure.com
  resources:
  - privateendpoints/status
  - virtualnetworks/status
  - virtualnetworkssubnets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - resources.azure.com
  resources:
  - resourcegroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - resources.azure.com
  resources:
  - resourcegroups/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capz-manager-role
subjects:
- kind: ServiceAccount
  name: capz-manager
  namespace: openshift-cluster-api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-manager
  namespace: openshift-cluster-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-leader-election-role
  namespace: openshift-cluster-api
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-leader-election-rolebinding
  namespace: openshift-cluster-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capz-leader-election-role
subjects:
- kind: ServiceAccount
  name: capz-manager
  namespace: openshift-cluster-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
    control-plane: capz-controller-manager
  name: capz-controller-manager
  namespace: openshift-cluster-api
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-azure
      control-plane: capz-controller-manager
  strategy: {}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        azure.workload.identity/use: "true"
        cluster.x-k8s.io/provider: infrastructure-azure
        control-plane: capz-controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --diagnostics-address=${CAPZ_DIAGNOSTICS_ADDRESS:=:8443}
        - --insecure-diagnostics=${CAPZ_INSECURE_DIAGNOSTICS:=false}
        - --feature-gates=MachinePool=${EXP_MACHINE_POOL:=false},AKSResourceHealth=${EXP_AKS_RESOURCE_HEALTH:=false},EdgeZone=${EXP_EDGEZONE:=false},ASOAPI=${EXP_ASO_API:=false}
        - --v=0
        env:
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: azure_subscription_id
              name: capz-manager-bootstrap-credentials
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: to.be/replaced:v99
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /var/run/secrets/azure/tokens
          name: azure-identity-token
          readOnly: true
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: capz-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capz-webhook-service-cert
      - name: azure-identity-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: api://AzureADTokenExchange
              expirationSeconds: 3600
              path: azure-identity-token
status: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.azuremachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.azuremachinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedcontrolplane
  failurePolicy: Fail
  name: default.azuremanagedcontrolplanes.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedcontrolplanes
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedcontrolplanetemplate
  failurePolicy: Fail
  name: default.azuremanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedcontrolplanetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedmachinepool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.azuremanagedmachinepools.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedmachinepools
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedmachinepooltemplate
  failurePolicy: Fail
  name: default.azuremanagedmachinepooltemplates.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedmachinepooltemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachinepool
  failurePolicy: Fail
  name: default.azuremachinepool.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinepools
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.azuremachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.azuremachinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedcontrolplane
  failurePolicy: Fail
  name: validation.azuremanagedcontrolplanes.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedcontrolplanes
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedcontrolplanetemplate
  failurePolicy: Fail
  name: validation.azuremanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedcontrolplanetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedmachinepool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.azuremanagedmachinepools.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - azuremanagedmachinepools
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremanagedmachinepooltemplate
  failurePolicy: Fail
  name: validation.azuremanagedmachinepooltemplates.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - azuremanagedmachinepooltemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha1-azureasomanagedcontrolplane
  failurePolicy: Fail
  name: validation.azureasomanagedcontrolplane.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - azureasomanagedcontrolplanes
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha1-azureasomanagedmachinepool
  failurePolicy: Fail
  name: validation.azureasomanagedmachinepool.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - azureasomanagedmachinepools
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachinepoolmachine
  failurePolicy: Fail
  name: azuremachinepoolmachine.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinepoolmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capz-webhook-service
      namespace: openshift-cluster-api
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-azuremachinepool
  failurePolicy: Fail
  name: validation.azuremachinepool.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinepools
  sideEffects: None
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: CustomNoUpgrade,TechPreviewNoUpgrade
    service.beta.openshift.io/serving-cert-secret-name: capz-webhook-service-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    clusterctl.cluster.x-k8s.io: ""
  name: capz-webhook-service
  namespace: openshift-cluster-api
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-azure
---
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingAdmissionPolicy
    metadata:
      name: openshift-cluster-api-protect-azurecluster
    spec:
      failurePolicy: Fail
      matchConstraints:
        resourceRules:
        - apiGroups:
          - infrastructure.cluster.x-k8s.io
          apiVersions:
          - '*'
          operations:
          - DELETE
          resources:
          - azureclusters
      paramKind:
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
      validations:
      - expression: '!(oldObject.metadata.name == params.status.infrastructureName)'
        message: InfraCluster resources with metadata.name corresponding to the cluster
          infrastructureName cannot be deleted.
---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingAdmissionPolicyBinding
    metadata:
      name: openshift-cluster-api-protect-azurecluster
    spec:
      matchResources:
        namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: openshift-cluster-api
      paramRef:
        name: cluster
        parameterNotFoundAction: Deny
      policyName: openshift-cluster-api-protect-azurecluster
      validationActions:
      - Deny
---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingAdmissionPolicy
    metadata:
      name: openshift-cluster-api-protect-azureclusteridentities
    spec:
      failurePolicy: Fail
      matchConstraints:
        resourceRules:
        - apiGroups:
          - infrastructure.cluster.x-k8s.io
          apiVersions:
          - '*'
          operations:
          - DELETE
          resources:
          - azureclusteridentities
      paramKind:
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
      validations:
      - expression: '!(oldObject.metadata.name == params.status.infrastructureName)'
        message: InfraCluster resources with metadata.name corresponding to the cluster
          infrastructureName cannot be deleted.
---
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingAdmissionPolicyBinding
    metadata:
      name: openshift-cluster-api-protect-azureclusteridentities
    spec:
      matchResources:
        namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: openshift-cluster-api
      paramRef:
        name: cluster
        parameterNotFoundAction: Deny
      policyName: openshift-cluster-api-protect-azureclusteridentities
      validationActions:
      - Deny
---
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingAdmissionPolicy
    metadata:
      name: openshift-cluster-api-protect-azureclustersecrets
    spec:
      failurePolicy: Fail
      matchConstraints:
        resourceRules:
        - apiGroups:
          - ""
          apiVersions:
          - '*'
          operations:
          - DELETE
          resources:
          - secret
          resourceNames:
          - capz-manager-bootstrap-credentials
          - capz-manager-cluster-credential
      paramKind:
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
      validations:
      - expression: '!(oldObject.metadata.name == params.status.infrastructureName)'
        message: InfraCluster resources with metadata.name corresponding to the cluster
          infrastructureName cannot be deleted.
---
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingAdmissionPolicyBinding
    metadata:
      name: openshift-cluster-api-protect-azureclustersecrets
    spec:
      matchResources:
        namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: openshift-cluster-api
      paramRef:
        name: cluster
        parameterNotFoundAction: Deny
      policyName: openshift-cluster-api-protect-azureclustersecrets
      validationActions:
      - Deny
